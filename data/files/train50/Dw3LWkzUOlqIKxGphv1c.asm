HEADER:5B8E0000							;
HEADER:5B8E0000							; +-------------------------------------------------------------------------+
HEADER:5B8E0000							; |   This file	has been generated by The Interactive Disassembler (IDA)    |
HEADER:5B8E0000							; |	      Copyright	(c) 2013 Hex-Rays, <support@hex-rays.com>	    |
HEADER:5B8E0000							; |			 License info:                			    |
HEADER:5B8E0000							; |				   Microsoft				    |
HEADER:5B8E0000							; +-------------------------------------------------------------------------+
HEADER:5B8E0000							;
HEADER:5B8E0000
HEADER:5B8E0000
HEADER:5B8E0000									include	uni.inc	; see unicode subdir of	ida for	info on	unicode
HEADER:5B8E0000
HEADER:5B8E0000									.686p
HEADER:5B8E0000									.mmx
HEADER:5B8E0000									.model flat
HEADER:5B8E0000
HEADER:5B8E0000							; ===========================================================================
HEADER:5B8E0000
HEADER:5B8E0000							; [00001000 BYTES: COLLAPSED SEGMENT HEADER. PRESS KEYPAD CTRL-"+" TO EXPAND]
.idata:5B8E1000							; 
.idata:5B8E1000							; Format      :	Portable executable for	80386 (PE)
.idata:5B8E1000							; Imagebase   :	5B8E0000
.idata:5B8E1000							; Section 1. (virtual address 00001000)
.idata:5B8E1000							; Virtual size			: 000050D4 (  20692.)
.idata:5B8E1000							; Section size in file		: 00006000 (  24576.)
.idata:5B8E1000							; Offset to raw	data for section: 00001000
.idata:5B8E1000							; Flags	60000020: Text Executable Readable
.idata:5B8E1000							; Alignment	: default
.idata:5B8E1000							;
.idata:5B8E1000							; Imports from ADVAPI32.dll
.idata:5B8E1000							;
.idata:5B8E1000							; ===========================================================================
.idata:5B8E1000
.idata:5B8E1000							; Segment type:	Externs
.idata:5B8E1000							; _idata
.idata:5B8E1000							; LSTATUS __stdcall RegCreateKeyExW(HKEY hKey, LPCWSTR lpSubKey, DWORD Reserved, LPWSTR	lpClass, DWORD dwOptions, REGSAM samDesired, const LPSECURITY_ATTRIBUTES lpSecurityAttributes, PHKEY phkResult,	LPDWORD	lpdwDisposition)
.idata:5B8E1000	?? ?? ?? ??							extrn __imp__RegCreateKeyExW@36:dword
.idata:5B8E1000												; CODE XREF: ATL::CRegKey::Create(HKEY__ *,ushort const	*,ushort *,ulong,ulong,_SECURITY_ATTRIBUTES *,ulong *)+27p
.idata:5B8E1000												; DATA XREF: HEADER:5B8E0114o ...
.idata:5B8E1004							; LSTATUS __stdcall RegDeleteKeyW(HKEY hKey, LPCWSTR lpSubKey)
.idata:5B8E1004	?? ?? ?? ??							extrn __imp__RegDeleteKeyW@8:dword
.idata:5B8E1004												; CODE XREF: ATL::CRegKey::RecurseDeleteKey(ushort const *)+71p
.idata:5B8E1004												; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+412p
.idata:5B8E1004												; DATA XREF: ...
.idata:5B8E1008							; LSTATUS __stdcall RegOpenKeyExW(HKEY hKey, LPCWSTR lpSubKey, DWORD ulOptions,	REGSAM samDesired, PHKEY phkResult)
.idata:5B8E1008	?? ?? ?? ??							extrn __imp__RegOpenKeyExW@20:dword
.idata:5B8E1008												; CODE XREF: CTrialEnd::CleanupTrialReminder(int *)+21p
.idata:5B8E1008												; ATL::CRegKey::Open(HKEY__ *,ushort const *,ulong)+1Ap
.idata:5B8E1008												; DATA XREF: ...
.idata:5B8E100C							; LSTATUS __stdcall RegSetValueExW(HKEY	hKey, LPCWSTR lpValueName, DWORD Reserved, DWORD dwType, const BYTE *lpData, DWORD cbData)
.idata:5B8E100C	?? ?? ?? ??							extrn __imp__RegSetValueExW@24:dword
.idata:5B8E100C												; CODE XREF: CTrialEnd::CleanupTrialReminder(int *)+3Dp
.idata:5B8E100C												; ATL::CRegKey::SetValue(ulong,ushort const *)+11p ...
.idata:5B8E1010							; LSTATUS __stdcall RegCloseKey(HKEY hKey)
.idata:5B8E1010	?? ?? ?? ??							extrn __imp__RegCloseKey@4:dword
.idata:5B8E1010												; CODE XREF: CTrialEnd::CleanupTrialReminder(int *)+46p
.idata:5B8E1010												; ATL::CRegKey::Close(void)+Cp
.idata:5B8E1010												; DATA XREF: ...
.idata:5B8E1014							; LSTATUS __stdcall RegQueryValueExW(HKEY hKey,	LPCWSTR	lpValueName, LPDWORD lpReserved, LPDWORD lpType, LPBYTE	lpData,	LPDWORD	lpcbData)
.idata:5B8E1014	?? ?? ?? ??							extrn __imp__RegQueryValueExW@24:dword
.idata:5B8E1014												; CODE XREF: ATL::CRegParser::HasValues(HKEY__ *)+3Ep
.idata:5B8E1014												; DATA XREF: ATL::CRegParser::HasValues(HKEY__ *)+3Er
.idata:5B8E1018							; LSTATUS __stdcall RegQueryInfoKeyW(HKEY hKey,	LPWSTR lpClass,	LPDWORD	lpcchClass, LPDWORD lpReserved,	LPDWORD	lpcSubKeys, LPDWORD lpcbMaxSubKeyLen, LPDWORD lpcbMaxClassLen, LPDWORD lpcValues, LPDWORD lpcbMaxValueNameLen, LPDWORD lpcbMaxValueLen,	LPDWORD	lpcbSecurityDescriptor,	PFILETIME lpftLastWriteTime)
.idata:5B8E1018	?? ?? ?? ??							extrn __imp__RegQueryInfoKeyW@48:dword
.idata:5B8E1018												; CODE XREF: ATL::CRegParser::HasSubKeys(HKEY__	*)+1Ap
.idata:5B8E1018												; ATL::CRegParser::HasValues(HKEY__ *)+1Cp
.idata:5B8E1018												; DATA XREF: ...
.idata:5B8E101C							; LSTATUS __stdcall RegEnumKeyExW(HKEY hKey, DWORD dwIndex, LPWSTR lpName, LPDWORD lpcchName, LPDWORD lpReserved, LPWSTR lpClass, LPDWORD lpcchClass, PFILETIME	lpftLastWriteTime)
.idata:5B8E101C	?? ?? ?? ??							extrn __imp__RegEnumKeyExW@32:dword
.idata:5B8E101C												; CODE XREF: ATL::CRegKey::RecurseDeleteKey(ushort const *)+5Ep
.idata:5B8E101C												; DATA XREF: ATL::CRegKey::RecurseDeleteKey(ushort const *)+29r
.idata:5B8E1020							; LSTATUS __stdcall RegDeleteValueW(HKEY hKey, LPCWSTR lpValueName)
.idata:5B8E1020	?? ?? ?? ??							extrn __imp__RegDeleteValueW@8:dword
.idata:5B8E1020												; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+1ECp
.idata:5B8E1020												; DATA XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+1ECr
.idata:5B8E1024	00 00 00 00							extrn _ADVAPI32_NULL_THUNK_DATA:byte:4
.idata:5B8E1028							;
.idata:5B8E1028							; Imports from GDI32.dll
.idata:5B8E1028							;
.idata:5B8E1028							; HRGN __stdcall CreateRectRgnIndirect(const RECT *lprect)
.idata:5B8E1028	?? ?? ?? ??							extrn __imp__CreateRectRgnIndirect@4:dword
.idata:5B8E1028												; CODE XREF: ATL::CComControlBase::IOleInPlaceObject_SetObjectRects(tagRECT const *,tagRECT const *)+6Ep
.idata:5B8E1028												; DATA XREF: ATL::CComControlBase::IOleInPlaceObject_SetObjectRects(tagRECT const *,tagRECT const *)+6Er ...
.idata:5B8E102C							; HDC __stdcall	CreateDCW(LPCWSTR pwszDriver, LPCWSTR pwszDevice, LPCWSTR pszPort, const DEVMODEW *pdm)
.idata:5B8E102C	?? ?? ?? ??							extrn __imp__CreateDCW@16:dword
.idata:5B8E102C												; CODE XREF: AtlCreateTargetDC(HDC__ *,tagDVTARGETDEVICE *)+30p
.idata:5B8E102C												; AtlCreateTargetDC(HDC__ *,tagDVTARGETDEVICE *)+5Ep
.idata:5B8E102C												; DATA XREF: ...
.idata:5B8E1030							; BOOL __stdcall RestoreDC(HDC hdc, int	nSavedDC)
.idata:5B8E1030	?? ?? ?? ??							extrn __imp__RestoreDC@8:dword
.idata:5B8E1030												; CODE XREF: ATL::CComControlBase::OnDrawAdvanced(ATL::ATL_DRAWINFO &)+CFp
.idata:5B8E1030												; DATA XREF: ATL::CComControlBase::OnDrawAdvanced(ATL::ATL_DRAWINFO &)+CFr
.idata:5B8E1034							; BOOL __stdcall SetWindowOrgEx(HDC hdc, int x,	int y, LPPOINT lppt)
.idata:5B8E1034	?? ?? ?? ??							extrn __imp__SetWindowOrgEx@16:dword
.idata:5B8E1034												; CODE XREF: ATL::CComControlBase::OnDrawAdvanced(ATL::ATL_DRAWINFO &)+7Ep
.idata:5B8E1034												; DATA XREF: ATL::CComControlBase::OnDrawAdvanced(ATL::ATL_DRAWINFO &)+7Er
.idata:5B8E1038							; int __stdcall	SaveDC(HDC hdc)
.idata:5B8E1038	?? ?? ?? ??							extrn __imp__SaveDC@4:dword
.idata:5B8E1038												; CODE XREF: ATL::CComControlBase::OnDrawAdvanced(ATL::ATL_DRAWINFO &)+65p
.idata:5B8E1038												; DATA XREF: ATL::CComControlBase::OnDrawAdvanced(ATL::ATL_DRAWINFO &)+65r
.idata:5B8E103C							; BOOL __stdcall DeleteDC(HDC hdc)
.idata:5B8E103C	?? ?? ?? ??							extrn __imp__DeleteDC@4:dword
.idata:5B8E103C												; CODE XREF: ATL::CComControlBase::OnDrawAdvanced(ATL::ATL_DRAWINFO &)+BEp
.idata:5B8E103C												; DATA XREF: ATL::CComControlBase::OnDrawAdvanced(ATL::ATL_DRAWINFO &)+BEr
.idata:5B8E1040							; BOOL __stdcall SetViewportOrgEx(HDC hdc, int x, int y, LPPOINT lppt)
.idata:5B8E1040	?? ?? ?? ??							extrn __imp__SetViewportOrgEx@16:dword
.idata:5B8E1040												; CODE XREF: ATL::CComControlBase::OnDrawAdvanced(ATL::ATL_DRAWINFO &)+8Ap
.idata:5B8E1040												; DATA XREF: ATL::CComControlBase::OnDrawAdvanced(ATL::ATL_DRAWINFO &)+8Ar
.idata:5B8E1044							; int __stdcall	SetMapMode(HDC hdc, int	iMode)
.idata:5B8E1044	?? ?? ?? ??							extrn __imp__SetMapMode@8:dword
.idata:5B8E1044												; CODE XREF: ATL::CComControlBase::OnDrawAdvanced(ATL::ATL_DRAWINFO &)+70p
.idata:5B8E1044												; DATA XREF: ATL::CComControlBase::OnDrawAdvanced(ATL::ATL_DRAWINFO &)+70r
.idata:5B8E1048							; BOOL __stdcall LPtoDP(HDC hdc, LPPOINT lppt, int c)
.idata:5B8E1048	?? ?? ?? ??							extrn __imp__LPtoDP@12:dword
.idata:5B8E1048												; CODE XREF: ATL::CComControlBase::OnDrawAdvanced(ATL::ATL_DRAWINFO &)+5Cp
.idata:5B8E1048												; DATA XREF: ATL::CComControlBase::OnDrawAdvanced(ATL::ATL_DRAWINFO &)+5Cr
.idata:5B8E104C							; int __stdcall	GetDeviceCaps(HDC hdc, int index)
.idata:5B8E104C	?? ?? ?? ??							extrn __imp__GetDeviceCaps@8:dword
.idata:5B8E104C												; CODE XREF: AtlCreateTargetDC(HDC__ *,tagDVTARGETDEVICE *)+45p
.idata:5B8E104C												; AtlHiMetricToPixel(tagSIZE const *,tagSIZE *)+1Ep ...
.idata:5B8E1050	00 00 00 00							extrn _GDI32_NULL_THUNK_DATA:byte:4
.idata:5B8E1054							;
.idata:5B8E1054							; Imports from KERNEL32.dll
.idata:5B8E1054							;
.idata:5B8E1054							; BOOL __stdcall FreeLibrary(HMODULE hLibModule)
.idata:5B8E1054	?? ?? ?? ??							extrn __imp__FreeLibrary@4:dword
.idata:5B8E1054												; CODE XREF: ATL::CRegObject::RegisterFromResource(ushort const	*,ushort const *,ushort	const *,int)+117p
.idata:5B8E1054												; DATA XREF: ATL::CRegObject::RegisterFromResource(ushort const	*,ushort const *,ushort	const *,int)+117r ...
.idata:5B8E1058							; FARPROC __stdcall SizeofResource(HMODULE hModule, LPCSTR lpProcName)
.idata:5B8E1058	?? ?? ?? ??							extrn __imp__SizeofResource@8:dword
.idata:5B8E1058												; CODE XREF: ATL::CRegObject::RegisterFromResource(ushort const	*,ushort const *,ushort	const *,int)+9Fp
.idata:5B8E1058												; DATA XREF: ATL::CRegObject::RegisterFromResource(ushort const	*,ushort const *,ushort	const *,int)+9Fr
.idata:5B8E105C							; HMODULE __stdcall LoadResource(LPCSTR	lpLibFileName)
.idata:5B8E105C	?? ?? ?? ??							extrn __imp__LoadResource@8:dword
.idata:5B8E105C												; CODE XREF: ATL::CRegObject::RegisterFromResource(ushort const	*,ushort const *,ushort	const *,int)+6Cp
.idata:5B8E105C												; DATA XREF: ATL::CRegObject::RegisterFromResource(ushort const	*,ushort const *,ushort	const *,int)+6Cr
.idata:5B8E1060							; LPVOID __stdcall FindResourceW(LPVOID	lpAddress, SIZE_T dwSize, DWORD	flAllocationType, DWORD	flProtect)
.idata:5B8E1060	?? ?? ?? ??							extrn __imp__FindResourceW@12:dword
.idata:5B8E1060												; CODE XREF: .text:5B8E1AF4p
.idata:5B8E1060												; ATL::CRegObject::RegisterFromResource(ushort const *,ushort const *,ushort const *,int)+5Ep
.idata:5B8E1060												; DATA XREF: ...
.idata:5B8E1064							; HMODULE __stdcall LoadLibraryExW(LPCWSTR lpLibFileName, HANDLE hFile,	DWORD dwFlags)
.idata:5B8E1064	?? ?? ?? ??							extrn __imp__LoadLibraryExW@12:dword
.idata:5B8E1064												; CODE XREF: ATL::CRegObject::RegisterFromResource(ushort const	*,ushort const *,ushort	const *,int)+1Ep
.idata:5B8E1064												; DATA XREF: ATL::CRegObject::RegisterFromResource(ushort const	*,ushort const *,ushort	const *,int)+1Er
.idata:5B8E1068							; void __stdcall EnterCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
.idata:5B8E1068	?? ?? ?? ??							extrn __imp__EnterCriticalSection@4:dword
.idata:5B8E1068												; CODE XREF: ATL::CComTypeInfoHolder::AddRef(void)+Ap
.idata:5B8E1068												; ATL::CComTypeInfoHolder::Release(void)+Ap ...
.idata:5B8E106C							; int __stdcall	lstrlenA(LPCSTR	lpString)
.idata:5B8E106C	?? ?? ?? ??							extrn __imp__lstrlenA@4:dword
.idata:5B8E106C												; CODE XREF: ATL::CRegObject::RegisterFromResource(ushort const	*,ushort const *,ushort	const *,int)+E5p
.idata:5B8E106C												; DATA XREF: ATL::CRegObject::RegisterFromResource(ushort const	*,ushort const *,ushort	const *,int)+E5r
.idata:5B8E1070							; int __stdcall	MultiByteToWideChar(UINT CodePage, DWORD dwFlags, LPCSTR lpMultiByteStr, int cbMultiByte, LPWSTR lpWideCharStr,	int cchWideChar)
.idata:5B8E1070	?? ?? ?? ??							extrn __imp__MultiByteToWideChar@24:dword
.idata:5B8E1070												; CODE XREF: AtlA2WHelper(ushort *,char	const *,int)+17p
.idata:5B8E1070												; DATA XREF: AtlA2WHelper(ushort *,char	const *,int)+17r
.idata:5B8E1074							; LPWSTR __stdcall lstrcpyW(LPWSTR lpString1, LPCWSTR lpString2)
.idata:5B8E1074	?? ?? ?? ??							extrn __imp__lstrcpyW@8:dword
.idata:5B8E1074												; CODE XREF: ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const *)+A9p
.idata:5B8E1074												; ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const	*)+CCp
.idata:5B8E1074												; DATA XREF: ...
.idata:5B8E1078							; int __stdcall	lstrlenW(LPCWSTR lpString)
.idata:5B8E1078	?? ?? ?? ??							extrn __imp__lstrlenW@4:dword
.idata:5B8E1078												; CODE XREF: ATL::CExpansionVector::Add(ushort const *,ushort const *)+31p
.idata:5B8E1078												; ATL::CExpansionVector::Add(ushort const *,ushort const *)+3Ap ...
.idata:5B8E107C							; int __stdcall	lstrcmpiW(LPCWSTR lpString1, LPCWSTR lpString2)
.idata:5B8E107C	?? ?? ?? ??							extrn __imp__lstrcmpiW@8:dword
.idata:5B8E107C												; CODE XREF: sub_5B8E2BD9+44p
.idata:5B8E107C												; ATL::CRegParser::CanForceRemoveKey(ushort const *)+Cp ...
.idata:5B8E1080							; BOOL __stdcall DisableThreadLibraryCalls(HMODULE hLibModule)
.idata:5B8E1080	?? ?? ?? ??							extrn __imp__DisableThreadLibraryCalls@4:dword
.idata:5B8E1084							; HANDLE __stdcall GetProcessHeap()
.idata:5B8E1084	?? ?? ?? ??							extrn __imp__GetProcessHeap@0:dword
.idata:5B8E1084												; CODE XREF: ATL::CDynamicStdCallThunk::~CDynamicStdCallThunk(void)+9p
.idata:5B8E1084												; ATL::CDynamicStdCallThunk::Init(ulong,void *)+Cp
.idata:5B8E1084												; DATA XREF: ...
.idata:5B8E1088							; BOOL __stdcall HeapFree(HANDLE hHeap,	DWORD dwFlags, LPVOID lpMem)
.idata:5B8E1088	?? ?? ?? ??							extrn __imp__HeapFree@12:dword
.idata:5B8E1088												; CODE XREF: ATL::CDynamicStdCallThunk::~CDynamicStdCallThunk(void)+10p
.idata:5B8E1088												; DATA XREF: ATL::CDynamicStdCallThunk::~CDynamicStdCallThunk(void)+10r
.idata:5B8E108C							; LONG __stdcall InterlockedDecrement(volatile LONG *lpAddend)
.idata:5B8E108C	?? ?? ?? ??							extrn __imp__InterlockedDecrement@4:dword
.idata:5B8E108C												; CODE XREF: ATL::CComObjectNoLock<ATL::CComClassFactory>::Release(void)+Ap
.idata:5B8E108C												; ATL::CComObject<CTrialEnd>::~CComObject<CTrialEnd>(void)+5Ap	...
.idata:5B8E1090							; LONG __stdcall InterlockedIncrement(volatile LONG *lpAddend)
.idata:5B8E1090	?? ?? ?? ??							extrn __imp__InterlockedIncrement@4:dword
.idata:5B8E1090												; CODE XREF: ATL::CComObjectNoLock<ATL::CComClassFactory>::AddRef(void)+8p
.idata:5B8E1090												; ATL::CComObject<CTrialEnd>::CComObject<CTrialEnd>(void *)+55p ...
.idata:5B8E1094							; void __stdcall DeleteCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
.idata:5B8E1094	?? ?? ?? ??							extrn __imp__DeleteCriticalSection@4:dword
.idata:5B8E1094												; CODE XREF: ATL::CComClassFactory::~CComClassFactory(void)+Fp
.idata:5B8E1094												; ATL::AtlModuleTerm(ATL::_ATL_MODULE *)+3Dp ...
.idata:5B8E1098							; void __stdcall InitializeCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
.idata:5B8E1098	?? ?? ?? ??							extrn __imp__InitializeCriticalSection@4:dword
.idata:5B8E1098												; CODE XREF: ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::CComObjectRootEx<ATL::CComMultiThreadModel>(void)+Ap
.idata:5B8E1098												; ATL::AtlModuleInit(ATL::_ATL_MODULE *,ATL::_ATL_OBJMAP_ENTRY *,HINSTANCE__ *)+3Cp ...
.idata:5B8E109C							; DWORD	__stdcall GetModuleFileNameW(HMODULE hModule, LPWSTR lpFilename, DWORD nSize)
.idata:5B8E109C	?? ?? ?? ??							extrn __imp__GetModuleFileNameW@12:dword
.idata:5B8E109C												; CODE XREF: ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const *)+38p
.idata:5B8E109C												; ATL::CComModule::UpdateRegistryFromResourceS(uint,int,ATL::_ATL_REGMAP_ENTRY *)+3Ep
.idata:5B8E109C												; DATA XREF: ...
.idata:5B8E10A0							; LPWSTR __stdcall lstrcatW(LPWSTR lpString1, LPCWSTR lpString2)
.idata:5B8E10A0	?? ?? ?? ??							extrn __imp__lstrcatW@8:dword
.idata:5B8E10A0												; CODE XREF: ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const *)+4Dp
.idata:5B8E10A0												; DATA XREF: ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const *)+4Dr
.idata:5B8E10A4							; BOOL __stdcall HeapDestroy(HANDLE hHeap)
.idata:5B8E10A4	?? ?? ?? ??							extrn __imp__HeapDestroy@4:dword
.idata:5B8E10A4												; CODE XREF: ATL::AtlModuleTerm(ATL::_ATL_MODULE *)+54p
.idata:5B8E10A4												; DATA XREF: ATL::AtlModuleTerm(ATL::_ATL_MODULE *)+54r
.idata:5B8E10A8							; DWORD	__stdcall GetLastError()
.idata:5B8E10A8	?? ?? ?? ??							extrn __imp__GetLastError@0:dword
.idata:5B8E10A8												; CODE XREF: ATL::CRegObject::RegisterFromResource(ushort const	*,ushort const *,ushort	const *,int)+33p
.idata:5B8E10A8												; ATL::CRegObject::RegisterFromResource(ushort const *,ushort const *,ushort const *,int)+39p ...
.idata:5B8E10AC							; LPVOID __stdcall HeapAlloc(HANDLE hHeap, DWORD dwFlags, SIZE_T dwBytes)
.idata:5B8E10AC	?? ?? ?? ??							extrn __imp__HeapAlloc@12:dword
.idata:5B8E10AC												; CODE XREF: ATL::CDynamicStdCallThunk::Init(ulong,void	*)+13p
.idata:5B8E10AC												; DATA XREF: ATL::CDynamicStdCallThunk::Init(ulong,void	*)+13r
.idata:5B8E10B0							; HANDLE __stdcall GetCurrentProcess()
.idata:5B8E10B0	?? ?? ?? ??							extrn __imp__GetCurrentProcess@0:dword
.idata:5B8E10B0												; CODE XREF: ATL::_stdcallthunk::Init(ulong,void *)+20p
.idata:5B8E10B0												; DATA XREF: ATL::_stdcallthunk::Init(ulong,void *)+20r
.idata:5B8E10B4							; BOOL __stdcall FlushInstructionCache(HANDLE hProcess,	LPCVOID	lpBaseAddress, SIZE_T dwSize)
.idata:5B8E10B4	?? ?? ?? ??							extrn __imp__FlushInstructionCache@12:dword
.idata:5B8E10B4												; CODE XREF: ATL::_stdcallthunk::Init(ulong,void *)+27p
.idata:5B8E10B4												; DATA XREF: ATL::_stdcallthunk::Init(ulong,void *)+27r
.idata:5B8E10B8							; void __stdcall LeaveCriticalSection(LPCRITICAL_SECTION lpCriticalSection)
.idata:5B8E10B8	?? ?? ?? ??							extrn __imp__LeaveCriticalSection@4:dword
.idata:5B8E10B8												; CODE XREF: ATL::CComTypeInfoHolder::AddRef(void)+14p
.idata:5B8E10B8												; ATL::CComTypeInfoHolder::Release(void)+27p ...
.idata:5B8E10BC							; DWORD	__stdcall GetCurrentThreadId()
.idata:5B8E10BC	?? ?? ?? ??							extrn __imp__GetCurrentThreadId@0:dword
.idata:5B8E10BC												; CODE XREF: ATL::CComModule::AddCreateWndData(ATL::_AtlCreateWndData *,void *)+Fp
.idata:5B8E10BC												; ATL::CComModule::ExtractCreateWndData(void)+16p
.idata:5B8E10BC												; DATA XREF: ...
.idata:5B8E10C0							; LPWSTR __stdcall lstrcpynW(LPWSTR lpString1, LPCWSTR lpString2, int iMaxLength)
.idata:5B8E10C0	?? ?? ?? ??							extrn __imp__lstrcpynW@12:dword
.idata:5B8E10C0												; CODE XREF: ATL::CRegParser::PreProcessBuffer(ushort *,ushort * *)+84p
.idata:5B8E10C0												; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+2F9p
.idata:5B8E10C0												; DATA XREF: ...
.idata:5B8E10C4	00 00 00 00							extrn _KERNEL32_NULL_THUNK_DATA:byte:4
.idata:5B8E10C8							;
.idata:5B8E10C8							; Imports from OLEAUT32.dll
.idata:5B8E10C8							;
.idata:5B8E10C8							; HRESULT __stdcall VariantClear(VARIANTARG *pvarg)
.idata:5B8E10C8	?? ?? ?? ??							extrn __imp__VariantClear@4:dword
.idata:5B8E10C8												; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::DoVerbPrimary(tagRECT const *,HWND__ *)+6Ep
.idata:5B8E10C8												; ATL::CComVariant::ReadFromStream(IStream *)+9p ...
.idata:5B8E10CC							; HRESULT __stdcall LoadRegTypeLib(const GUID *const rguid, WORD wVerMajor, WORD wVerMinor, LCID lcid, ITypeLib	**pptlib)
.idata:5B8E10CC	?? ?? ?? ??							extrn __imp__LoadRegTypeLib@20:dword
.idata:5B8E10CC												; CODE XREF: ATL::CComTypeInfoHolder::GetTI(ulong,ITypeInfo * *)+3Cp
.idata:5B8E10CC												; DATA XREF: ATL::CComTypeInfoHolder::GetTI(ulong,ITypeInfo * *)+3Cr
.idata:5B8E10D0							; HRESULT __stdcall VariantChangeType(VARIANTARG *pvargDest, const VARIANTARG *pvarSrc,	USHORT wFlags, VARTYPE vt)
.idata:5B8E10D0	?? ?? ?? ??							extrn __imp__VariantChangeType@16:dword
.idata:5B8E10D0												; CODE XREF: ATL::CComVariant::ChangeType(ushort,tagVARIANT const *)+12p
.idata:5B8E10D0												; ATL::CComVariant::WriteToStream(IStream *)+C8p
.idata:5B8E10D0												; DATA XREF: ...
.idata:5B8E10D4							; UINT __stdcall SysStringByteLen(BSTR bstr)
.idata:5B8E10D4	?? ?? ?? ??							extrn __imp__SysStringByteLen@4:dword
.idata:5B8E10D4												; CODE XREF: ATL::CComBSTR::WriteToStream(IStream *)+10p
.idata:5B8E10D4												; DATA XREF: ATL::CComBSTR::WriteToStream(IStream *)+10r
.idata:5B8E10D8							; BSTR __stdcall SysAllocStringByteLen(LPCSTR psz, UINT	len)
.idata:5B8E10D8	?? ?? ?? ??							extrn __imp__SysAllocStringByteLen@8:dword
.idata:5B8E10D8												; CODE XREF: ATL::CComBSTR::ReadFromStream(IStream *)+2Cp
.idata:5B8E10D8												; DATA XREF: ATL::CComBSTR::ReadFromStream(IStream *)+2Cr
.idata:5B8E10DC							; BSTR __stdcall SysAllocString(const OLECHAR *psz)
.idata:5B8E10DC	?? ?? ?? ??							extrn __imp__SysAllocString@4:dword
.idata:5B8E10DC												; CODE XREF: ATL::CComBSTR::operator=(ushort const *)+Fp
.idata:5B8E10DC												; DATA XREF: ATL::CComBSTR::operator=(ushort const *)+Fr
.idata:5B8E10E0							; void __stdcall SysFreeString(BSTR bstrString)
.idata:5B8E10E0	?? ?? ?? ??							extrn __imp__SysFreeString@4:dword
.idata:5B8E10E0												; CODE XREF: ATL::CComBSTR::operator=(ushort const *)+5p
.idata:5B8E10E0												; ATL::CComVariant::ReadFromStream(IStream *):loc_5B8E3026p ...
.idata:5B8E10E4							; void __stdcall VariantInit(VARIANTARG	*pvarg)
.idata:5B8E10E4	?? ?? ?? ??							extrn __imp__VariantInit@4:dword
.idata:5B8E10E4												; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::DoVerbPrimary(tagRECT const *,HWND__ *)+16p
.idata:5B8E10E4												; ATL::CComVariant::WriteToStream(IStream *)+B3p ...
.idata:5B8E10E8							; HRESULT __stdcall SetErrorInfo(ULONG dwReserved, IErrorInfo *perrinfo)
.idata:5B8E10E8	?? ?? ?? ??							extrn __imp__SetErrorInfo@8:dword
.idata:5B8E10E8												; CODE XREF: ATL::CComTypeInfoHolder::Invoke(IDispatch *,long,_GUID const &,ulong,ushort,tagDISPPARAMS *,tagVARIANT *,tagEXCEPINFO *,uint *)+Bp
.idata:5B8E10E8												; DATA XREF: ATL::CComTypeInfoHolder::Invoke(IDispatch *,long,_GUID const &,ulong,ushort,tagDISPPARAMS *,tagVARIANT *,tagEXCEPINFO *,uint *)+Br
.idata:5B8E10EC							; HRESULT __stdcall RegisterTypeLib(ITypeLib *ptlib, LPCOLESTR szFullPath, LPCOLESTR szHelpDir)
.idata:5B8E10EC	?? ?? ?? ??							extrn __imp__RegisterTypeLib@12:dword
.idata:5B8E10EC												; CODE XREF: ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const *)+12Dp
.idata:5B8E10EC												; DATA XREF: ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const *)+12Dr
.idata:5B8E10F0							; HRESULT __stdcall LoadTypeLib(LPCOLESTR szFile, ITypeLib **pptlib)
.idata:5B8E10F0	?? ?? ?? ??							extrn __imp__LoadTypeLib@8:dword
.idata:5B8E10F0												; CODE XREF: ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const *)+64p
.idata:5B8E10F0												; ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const	*)+B6p
.idata:5B8E10F0												; DATA XREF: ...
.idata:5B8E10F4							; HRESULT __stdcall VarI4FromStr(LPCOLESTR strIn, LCID lcid, ULONG dwFlags, LONG *plOut)
.idata:5B8E10F4	?? ?? ?? ??							extrn __imp__VarI4FromStr@16:dword
.idata:5B8E10F4												; CODE XREF: ATL::CRegParser::AddValue(ATL::CRegKey &,ushort const *,ushort *)+9Ep
.idata:5B8E10F4												; DATA XREF: ATL::CRegParser::AddValue(ATL::CRegKey &,ushort const *,ushort *)+9Er
.idata:5B8E10F8							; HRESULT __stdcall OleCreatePropertyFrame(HWND	hwndOwner, UINT	x, UINT	y, LPCOLESTR lpszCaption, ULONG	cObjects, LPUNKNOWN *ppUnk, ULONG cPages, LPCLSID pPageClsID, LCID lcid, DWORD dwReserved, LPVOID pvReserved)
.idata:5B8E10F8	?? ?? ?? ??							extrn __imp__OleCreatePropertyFrame@44:dword
.idata:5B8E10F8												; CODE XREF: ATL::CComControlBase::DoVerbProperties(tagRECT const *,HWND__ *)+DAp
.idata:5B8E10F8												; DATA XREF: ATL::CComControlBase::DoVerbProperties(tagRECT const *,HWND__ *)+DAr
.idata:5B8E10FC	00 00 00 00							extrn _OLEAUT32_NULL_THUNK_DATA:byte:4
.idata:5B8E1100							;
.idata:5B8E1100							; Imports from USER32.dll
.idata:5B8E1100							;
.idata:5B8E1100							; BOOL __stdcall InvalidateRect(HWND hWnd, const RECT *lpRect, BOOL bErase)
.idata:5B8E1100	?? ?? ?? ??							extrn __imp__InvalidateRect@12:dword
.idata:5B8E1100												; CODE XREF: ATL::CComControlBase::FireViewChange(void)+14p
.idata:5B8E1100												; DATA XREF: ATL::CComControlBase::FireViewChange(void)+14r ...
.idata:5B8E1104							; BOOL __stdcall IsWindow(HWND hWnd)
.idata:5B8E1104	?? ?? ?? ??							extrn __imp__IsWindow@4:dword
.idata:5B8E1104												; CODE XREF: ATL::CComControlBase::IOleObject_Close(ulong)+63p
.idata:5B8E1104												; ATL::CComControlBase::IOleInPlaceObject_InPlaceDeactivate(void)+38p
.idata:5B8E1104												; DATA XREF: ...
.idata:5B8E1108							; HWND __stdcall SetFocus(HWND hWnd)
.idata:5B8E1108	?? ?? ?? ??							extrn __imp__SetFocus@4:dword
.idata:5B8E1108												; CODE XREF: ATL::CComControlBase::SetControlFocus(int)+74p
.idata:5B8E1108												; ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+181p
.idata:5B8E1108												; DATA XREF: ...
.idata:5B8E110C							; HWND __stdcall CreateWindowExW(DWORD dwExStyle, LPCWSTR lpClassName, LPCWSTR lpWindowName, DWORD dwStyle, int	X, int Y, int nWidth, int nHeight, HWND	hWndParent, HMENU hMenu, HINSTANCE hInstance, LPVOID lpParam)
.idata:5B8E110C	?? ?? ?? ??							extrn __imp__CreateWindowExW@48:dword
.idata:5B8E110C												; CODE XREF: ATL::CWindowImplBase::Create(HWND__ *,tagRECT &,ushort const *,ulong,ulong,uint,ushort)+61p
.idata:5B8E110C												; DATA XREF: ATL::CWindowImplBase::Create(HWND__ *,tagRECT &,ushort const *,ulong,ulong,uint,ushort)+61r
.idata:5B8E1110							; BOOL __stdcall GetClassInfoExW(HINSTANCE hInstance, LPCWSTR lpszClass, LPWNDCLASSEXW lpwcx)
.idata:5B8E1110	?? ?? ?? ??							extrn __imp__GetClassInfoExW@12:dword
.idata:5B8E1110												; CODE XREF: ATL::CWndClassInfo::Register(long (**)(HWND__ *,uint,uint,long))+57p
.idata:5B8E1110												; ATL::CWndClassInfo::Register(long (**)(HWND__	*,uint,uint,long))+E0p
.idata:5B8E1110												; DATA XREF: ...
.idata:5B8E1114							; HCURSOR __stdcall LoadCursorW(HINSTANCE hInstance, LPCWSTR lpCursorName)
.idata:5B8E1114	?? ?? ?? ??							extrn __imp__LoadCursorW@8:dword
.idata:5B8E1114												; CODE XREF: ATL::CWndClassInfo::Register(long (**)(HWND__ *,uint,uint,long))+A0p
.idata:5B8E1114												; DATA XREF: ATL::CWndClassInfo::Register(long (**)(HWND__ *,uint,uint,long))+A0r
.idata:5B8E1118							; int _wsprintfW(LPWSTR, LPCWSTR, ...)
.idata:5B8E1118	?? ?? ?? ??							extrn __imp__wsprintfW:dword
.idata:5B8E1118												; CODE XREF: ATL::CWndClassInfo::Register(long (**)(HWND__ *,uint,uint,long))+C0p
.idata:5B8E1118												; DATA XREF: ATL::CWndClassInfo::Register(long (**)(HWND__ *,uint,uint,long))+C0r
.idata:5B8E111C							; ATOM __stdcall RegisterClassExW(const	WNDCLASSEXW *)
.idata:5B8E111C	?? ?? ?? ??							extrn __imp__RegisterClassExW@4:dword
.idata:5B8E111C												; CODE XREF: ATL::CWndClassInfo::Register(long (**)(HWND__ *,uint,uint,long))+F0p
.idata:5B8E111C												; DATA XREF: ATL::CWndClassInfo::Register(long (**)(HWND__ *,uint,uint,long))+F0r
.idata:5B8E1120							; LONG __stdcall SetWindowLongW(HWND hWnd, int nIndex, LONG dwNewLong)
.idata:5B8E1120	?? ?? ?? ??							extrn __imp__SetWindowLongW@12:dword
.idata:5B8E1120												; CODE XREF: ATL::CWindowImplBase::StartWindowProc(HWND__ *,uint,uint,long)+29p
.idata:5B8E1120												; DATA XREF: ATL::CWindowImplBase::StartWindowProc(HWND__ *,uint,uint,long)+29r
.idata:5B8E1124							; HWND __stdcall GetParent(HWND	hWnd)
.idata:5B8E1124	?? ?? ?? ??							extrn __imp__GetParent@4:dword
.idata:5B8E1124												; CODE XREF: ATL::CComControlBase::SetControlFocus(int)+4Ap
.idata:5B8E1124												; DATA XREF: ATL::CComControlBase::SetControlFocus(int)+4Ar
.idata:5B8E1128							; HDC __stdcall	GetDC(HWND hWnd)
.idata:5B8E1128	?? ?? ?? ??							extrn __imp__GetDC@4:dword
.idata:5B8E1128												; CODE XREF: AtlHiMetricToPixel(tagSIZE	const *,tagSIZE	*)+9p
.idata:5B8E1128												; DATA XREF: AtlHiMetricToPixel(tagSIZE	const *,tagSIZE	*)+9r
.idata:5B8E112C							; int __stdcall	ReleaseDC(HWND hWnd, HDC hDC)
.idata:5B8E112C	?? ?? ?? ??							extrn __imp__ReleaseDC@8:dword
.idata:5B8E112C												; CODE XREF: AtlHiMetricToPixel(tagSIZE	const *,tagSIZE	*)+2Dp
.idata:5B8E112C												; DATA XREF: AtlHiMetricToPixel(tagSIZE	const *,tagSIZE	*)+2Dr
.idata:5B8E1130							; HDC __stdcall	BeginPaint(HWND	hWnd, LPPAINTSTRUCT lpPaint)
.idata:5B8E1130	?? ?? ?? ??							extrn __imp__BeginPaint@8:dword
.idata:5B8E1130												; CODE XREF: ATL::CComControlBase::OnPaint(uint,uint,long,int &)+19p
.idata:5B8E1130												; DATA XREF: ATL::CComControlBase::OnPaint(uint,uint,long,int &)+19r
.idata:5B8E1134							; BOOL __stdcall GetClientRect(HWND hWnd, LPRECT lpRect)
.idata:5B8E1134	?? ?? ?? ??							extrn __imp__GetClientRect@8:dword
.idata:5B8E1134												; CODE XREF: ATL::CComControlBase::OnPaint(uint,uint,long,int &)+2Fp
.idata:5B8E1134												; DATA XREF: ATL::CComControlBase::OnPaint(uint,uint,long,int &)+2Fr
.idata:5B8E1138							; BOOL __stdcall EndPaint(HWND hWnd, const PAINTSTRUCT *lpPaint)
.idata:5B8E1138	?? ?? ?? ??							extrn __imp__EndPaint@8:dword
.idata:5B8E1138												; CODE XREF: ATL::CComControlBase::OnPaint(uint,uint,long,int &)+71p
.idata:5B8E1138												; DATA XREF: ATL::CComControlBase::OnPaint(uint,uint,long,int &)+71r
.idata:5B8E113C							; BOOL __stdcall IntersectRect(LPRECT lprcDst, const RECT *lprcSrc1, const RECT	*lprcSrc2)
.idata:5B8E113C	?? ?? ?? ??							extrn __imp__IntersectRect@12:dword
.idata:5B8E113C												; CODE XREF: ATL::CComControlBase::IOleInPlaceObject_SetObjectRects(tagRECT const *,tagRECT const *)+3Cp
.idata:5B8E113C												; DATA XREF: ATL::CComControlBase::IOleInPlaceObject_SetObjectRects(tagRECT const *,tagRECT const *)+3Cr
.idata:5B8E1140							; BOOL __stdcall EqualRect(const RECT *lprc1, const RECT *lprc2)
.idata:5B8E1140	?? ?? ?? ??							extrn __imp__EqualRect@8:dword
.idata:5B8E1140												; CODE XREF: ATL::CComControlBase::IOleInPlaceObject_SetObjectRects(tagRECT const *,tagRECT const *)+4Bp
.idata:5B8E1140												; DATA XREF: ATL::CComControlBase::IOleInPlaceObject_SetObjectRects(tagRECT const *,tagRECT const *)+4Br
.idata:5B8E1144							; int __stdcall	SetWindowRgn(HWND hWnd,	HRGN hRgn, BOOL	bRedraw)
.idata:5B8E1144	?? ?? ?? ??							extrn __imp__SetWindowRgn@12:dword
.idata:5B8E1144												; CODE XREF: ATL::CComControlBase::IOleInPlaceObject_SetObjectRects(tagRECT const *,tagRECT const *)+81p
.idata:5B8E1144												; DATA XREF: ATL::CComControlBase::IOleInPlaceObject_SetObjectRects(tagRECT const *,tagRECT const *)+81r
.idata:5B8E1148							; BOOL __stdcall SetWindowPos(HWND hWnd, HWND hWndInsertAfter, int X, int Y, int cx, int cy, UINT uFlags)
.idata:5B8E1148	?? ?? ?? ??							extrn __imp__SetWindowPos@28:dword
.idata:5B8E1148												; CODE XREF: ATL::CComControlBase::IOleInPlaceObject_SetObjectRects(tagRECT const *,tagRECT const *)+A3p
.idata:5B8E1148												; DATA XREF: ATL::CComControlBase::IOleInPlaceObject_SetObjectRects(tagRECT const *,tagRECT const *)+A3r
.idata:5B8E114C							; LRESULT __stdcall CallWindowProcW(WNDPROC lpPrevWndFunc, HWND	hWnd, UINT Msg,	WPARAM wParam, LPARAM lParam)
.idata:5B8E114C	?? ?? ?? ??							extrn __imp__CallWindowProcW@20:dword
.idata:5B8E114C												; CODE XREF: ATL::CWindowImplBase::DefWindowProcW(uint,uint,long)+12p
.idata:5B8E114C												; DATA XREF: ATL::CWindowImplBase::DefWindowProcW(uint,uint,long)+12r
.idata:5B8E1150							; LPWSTR __stdcall CharNextW(LPCWSTR lpsz)
.idata:5B8E1150	?? ?? ?? ??							extrn __imp__CharNextW@4:dword
.idata:5B8E1150												; CODE XREF: ATL::CRegParser::EndOfVar(void)+9p
.idata:5B8E1150												; sub_5B8E2B35+Dp ...
.idata:5B8E1154							; BOOL __stdcall ShowWindow(HWND hWnd, int nCmdShow)
.idata:5B8E1154	?? ?? ?? ??							extrn __imp__ShowWindow@8:dword
.idata:5B8E1154												; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::DoVerbHide(tagRECT	const *,HWND__ *)+1Fp
.idata:5B8E1154												; ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+176p
.idata:5B8E1154												; DATA XREF: ...
.idata:5B8E1158							; BOOL __stdcall UnionRect(LPRECT lprcDst, const RECT *lprcSrc1, const RECT *lprcSrc2)
.idata:5B8E1158	?? ?? ?? ??							extrn __imp__UnionRect@12:dword
.idata:5B8E1158												; CODE XREF: ATL::IViewObjectExImpl<CTrialEnd>::QueryHitRect(ulong,tagRECT const *,tagRECT const *,long,ulong *)+16p
.idata:5B8E1158												; DATA XREF: ATL::IViewObjectExImpl<CTrialEnd>::QueryHitRect(ulong,tagRECT const *,tagRECT const *,long,ulong *)+16r
.idata:5B8E115C							; BOOL __stdcall PtInRect(const	RECT *lprc, POINT pt)
.idata:5B8E115C	?? ?? ?? ??							extrn __imp__PtInRect@12:dword
.idata:5B8E115C												; CODE XREF: ATL::IViewObjectExImpl<CTrialEnd>::QueryHitPoint(ulong,tagRECT const *,tagPOINT,long,ulong	*)+12p
.idata:5B8E115C												; DATA XREF: ATL::IViewObjectExImpl<CTrialEnd>::QueryHitPoint(ulong,tagRECT const *,tagPOINT,long,ulong	*)+12r
.idata:5B8E1160							; BOOL __stdcall DestroyWindow(HWND hWnd)
.idata:5B8E1160	?? ?? ?? ??							extrn __imp__DestroyWindow@4:dword
.idata:5B8E1160												; CODE XREF: ATL::CComControlBase::~CComControlBase(void)+Dp
.idata:5B8E1160												; ATL::CComControlBase::IOleObject_Close(ulong)+72p ...
.idata:5B8E1164							; LRESULT __stdcall DefWindowProcW(HWND	hWnd, UINT Msg,	WPARAM wParam, LPARAM lParam)
.idata:5B8E1164	?? ?? ?? ??							extrn __imp__DefWindowProcW@16:dword
.idata:5B8E1164												; DATA XREF: ATL::CComControl<CTrialEnd>::CComControl<CTrialEnd>(void)+10r
.idata:5B8E1168							; BOOL __stdcall OffsetRect(LPRECT lprc, int dx, int dy)
.idata:5B8E1168	?? ?? ?? ??							extrn __imp__OffsetRect@12:dword
.idata:5B8E1168												; CODE XREF: ATL::CComControlBase::IOleInPlaceObject_SetObjectRects(tagRECT const *,tagRECT const *)+64p
.idata:5B8E1168												; DATA XREF: ATL::CComControlBase::IOleInPlaceObject_SetObjectRects(tagRECT const *,tagRECT const *)+64r
.idata:5B8E116C	00 00 00 00							extrn _USER32_NULL_THUNK_DATA:byte:4
.idata:5B8E1170							;
.idata:5B8E1170							; Imports from msvcrt.dll
.idata:5B8E1170							;
.idata:5B8E1170	?? ?? ?? ??							extrn __imp___purecall:dword
.idata:5B8E1170												; DATA XREF: __purecallr
.idata:5B8E1170												; .text:5B8E57D0o
.idata:5B8E1174							; __declspec(dllimport)	void * __cdecl operator	new(unsigned int)
.idata:5B8E1174	?? ?? ?? ??							extrn __imp_??2@YAPAXI@Z:dword
.idata:5B8E1174												; DATA XREF: operator new(uint)r
.idata:5B8E1178							; void *__cdecl	_malloc(size_t Size)
.idata:5B8E1178	?? ?? ?? ??							extrn __imp__malloc:dword
.idata:5B8E1178												; CODE XREF: ATL::CExpansionVector::CExpansionVector(void)+10p
.idata:5B8E1178												; ATL::CRegParser::AddValue(ATL::CRegKey &,ushort const	*,ushort *)+17p ...
.idata:5B8E117C							; void *__cdecl	_realloc(void *Memory, size_t NewSize)
.idata:5B8E117C	?? ?? ?? ??							extrn __imp__realloc:dword
.idata:5B8E117C												; CODE XREF: ATL::CExpansionVector::Add(ushort const *,ushort const *)+A2p
.idata:5B8E117C												; DATA XREF: ATL::CExpansionVector::Add(ushort const *,ushort const *)+A2r
.idata:5B8E1180							; void __cdecl _free(void *Memory)
.idata:5B8E1180	?? ?? ?? ??							extrn __imp__free:dword	; CODE XREF: ATL::CRegParser::AddValue(ATL::CRegKey &,ushort const *,ushort *)+C3p
.idata:5B8E1180												; ATL::CRegParser::AddValue(ATL::CRegKey &,ushort const	*,ushort *)+CDp
.idata:5B8E1180												; DATA XREF: ...
.idata:5B8E1184							; __declspec(dllimport)	void __cdecl operator delete(void *)
.idata:5B8E1184	?? ?? ?? ??							extrn __imp_??3@YAXPAX@Z:dword
.idata:5B8E1184												; DATA XREF: operator delete(void *)r
.idata:5B8E1188	00 00 00 00							extrn _msvcrt_NULL_THUNK_DATA:byte:4
.idata:5B8E118C							;
.idata:5B8E118C							; Imports from ole32.dll
.idata:5B8E118C							;
.idata:5B8E118C							; HRESULT __stdcall OleLoadFromStream(LPSTREAM pStm, const IID *const iidInterface, LPVOID *ppvObj)
.idata:5B8E118C	?? ?? ?? ??							extrn __imp__OleLoadFromStream@12:dword
.idata:5B8E118C												; CODE XREF: ATL::CComVariant::ReadFromStream(IStream *)+69p
.idata:5B8E118C												; DATA XREF: ATL::CComVariant::ReadFromStream(IStream *)+69r ...
.idata:5B8E1190							; LPVOID __stdcall CoTaskMemRealloc(LPVOID pv, SIZE_T cb)
.idata:5B8E1190	?? ?? ?? ??							extrn __imp__CoTaskMemRealloc@8:dword
.idata:5B8E1190												; CODE XREF: ATL::CParseBuffer::AddChar(ushort)+15p
.idata:5B8E1190												; DATA XREF: ATL::CParseBuffer::AddChar(ushort)+15r
.idata:5B8E1194							; HRESULT __stdcall CreateOleAdviseHolder(LPOLEADVISEHOLDER *ppOAHolder)
.idata:5B8E1194	?? ?? ?? ??							extrn __imp__CreateOleAdviseHolder@4:dword
.idata:5B8E1194												; CODE XREF: ATL::CComControlBase::IOleObject_Advise(IAdviseSink *,ulong *)+Ap
.idata:5B8E1194												; DATA XREF: ATL::CComControlBase::IOleObject_Advise(IAdviseSink *,ulong *)+Ar
.idata:5B8E1198							; void __stdcall CoTaskMemFree(LPVOID pv)
.idata:5B8E1198	?? ?? ?? ??							extrn __imp__CoTaskMemFree@4:dword
.idata:5B8E1198												; CODE XREF: ATL::CExpansionVector::Add(ushort const *,ushort const *)+D4p
.idata:5B8E1198												; ATL::CExpansionVector::Add(ushort const *,ushort const *)+D9p ...
.idata:5B8E119C							; HRESULT __stdcall OleRegGetMiscStatus(const IID *const clsid,	DWORD dwAspect,	DWORD *pdwStatus)
.idata:5B8E119C	?? ?? ?? ??							extrn __imp__OleRegGetMiscStatus@12:dword
.idata:5B8E119C												; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::GetMiscStatus(ulong,ulong *)+Dp
.idata:5B8E119C												; DATA XREF: ATL::IOleObjectImpl<CTrialEnd>::GetMiscStatus(ulong,ulong *)+Dr
.idata:5B8E11A0							; HRESULT __stdcall OleRegGetUserType(const IID	*const clsid, DWORD dwFormOfType, LPOLESTR *pszUserType)
.idata:5B8E11A0	?? ?? ?? ??							extrn __imp__OleRegGetUserType@12:dword
.idata:5B8E11A0												; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::GetUserType(ulong,ushort *	*)+Dp
.idata:5B8E11A0												; DATA XREF: ATL::IOleObjectImpl<CTrialEnd>::GetUserType(ulong,ushort *	*)+Dr
.idata:5B8E11A4							; HRESULT __stdcall OleRegEnumVerbs(const IID *const clsid, LPENUMOLEVERB *ppenum)
.idata:5B8E11A4	?? ?? ?? ??							extrn __imp__OleRegEnumVerbs@8:dword
.idata:5B8E11A4												; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::EnumVerbs(IEnumOLEVERB * *)+17p
.idata:5B8E11A4												; DATA XREF: ATL::IOleObjectImpl<CTrialEnd>::EnumVerbs(IEnumOLEVERB * *)+17r
.idata:5B8E11A8							; HRESULT __stdcall OleSaveToStream(LPPERSISTSTREAM pPStm, LPSTREAM pStm)
.idata:5B8E11A8	?? ?? ?? ??							extrn __imp__OleSaveToStream@8:dword
.idata:5B8E11A8												; CODE XREF: ATL::CComVariant::WriteToStream(IStream *)+62p
.idata:5B8E11A8												; DATA XREF: ATL::CComVariant::WriteToStream(IStream *)+62r
.idata:5B8E11AC							; HRESULT __stdcall WriteClassStm(LPSTREAM pStm, const IID *const rclsid)
.idata:5B8E11AC	?? ?? ?? ??							extrn __imp__WriteClassStm@8:dword
.idata:5B8E11AC												; CODE XREF: ATL::CComVariant::WriteToStream(IStream *)+70p
.idata:5B8E11AC												; DATA XREF: ATL::CComVariant::WriteToStream(IStream *)+70r
.idata:5B8E11B0							; LPVOID __stdcall CoTaskMemAlloc(SIZE_T cb)
.idata:5B8E11B0	?? ?? ?? ??							extrn __imp__CoTaskMemAlloc@4:dword
.idata:5B8E11B0												; CODE XREF: ATL::CParseBuffer::CParseBuffer(int)+10p
.idata:5B8E11B0												; ATL::CExpansionVector::Add(ushort const *,ushort const *)+4Ap ...
.idata:5B8E11B4	00 00 00 00							extrn _ole32_NULL_THUNK_DATA:byte:4
.idata:5B8E11B4
.text:5B8E11B8						       ; ===========================================================================
.text:5B8E11B8
.text:5B8E11B8						       ; Segment type: Pure code
.text:5B8E11B8						       ; Segment permissions: Read/Execute
.text:5B8E11B8						       _text	       segment para public 'CODE' use32
.text:5B8E11B8								       assume cs:_text
.text:5B8E11B8								       ;org 5B8E11B8h
.text:5B8E11B8								       assume es:nothing, ss:nothing, ds:_data,	fs:nothing, gs:nothing
.text:5B8E11B8 00 00 00	00 00 00 00 00					       align 10h
.text:5B8E11C0 00 00 00	00				       dword_5B8E11C0  dd 0		       ; DATA XREF: HEADER:5B8E0190o
.text:5B8E11C0											       ; Characteristics
.text:5B8E11C4 15 83 7D	3B						       dd 3B7D8315h	       ; TimeDateStamp
.text:5B8E11C8 00 00							       dw 0		       ; MajorVersion
.text:5B8E11CA 00 00							       dw 0		       ; MinorVersion
.text:5B8E11CC 02 00 00	00						       dd 2		       ; Type: The Visual C++ debug information
.text:5B8E11D0 1C 00 00	00						       dd 1Ch		       ; SizeOfData
.text:5B8E11D4 5C 1A 00	00						       dd rva asc_5B8E1A5C     ; AddressOfRawData
.text:5B8E11D8 5C 1A 00	00						       dd rva asc_5B8E1A5C     ; PointerToRawData
.text:5B8E11DC						       ; GUID IID_ITrialEnd
.text:5B8E11DC CC 8E 8B	43 2A AD D1 11 AD EB 00	00 F8 77 34 F0 _IID_ITrialEnd  dd 438B8ECCh	       ; Data1
.text:5B8E11DC											       ; DATA XREF: .text:5B8E13D4o
.text:5B8E11DC											       ; .data:ATL::CComTypeInfoHolder ATL::IDispatchImpl<ITrialEnd,&_GUID const IID_ITrialEnd,&_GUID const LIBID_TRIALOCLib,1,0,ATL::CComTypeInfoHolder>::_tiho
.text:5B8E11DC								       dw 0AD2Ah	       ; Data2
.text:5B8E11DC								       dw 11D1h		       ; Data3
.text:5B8E11DC								       db 0ADh,	0EBh, 2	dup(0),	0F8h, 77h, 34h,	0F0h; Data4
.text:5B8E11EC						       ; GUID LIBID_TRIALOCLib
.text:5B8E11EC AD BB 23	5E 35 AA D1 11 AD EA 00	00 F8 77 34 F0 _LIBID_TRIALOCLib dd 5E23BBADh		 ; Data1
.text:5B8E11EC											       ; DATA XREF: .data:5B8E703Co
.text:5B8E11EC								       dw 0AA35h	       ; Data2
.text:5B8E11EC								       dw 11D1h		       ; Data3
.text:5B8E11EC								       db 0ADh,	0EAh, 2	dup(0),	0F8h, 77h, 34h,	0F0h; Data4
.text:5B8E11FC						       ; GUID CLSID_TrialEnd
.text:5B8E11FC CD 8E 8B	43 2A AD D1 11 AD EB 00	00 F8 77 34 F0 _CLSID_TrialEnd dd 438B8ECDh	       ; Data1
.text:5B8E11FC											       ; DATA XREF: ATL::IPersistStreamInitImpl<CTrialEnd>::GetClassID(_GUID *)+6o
.text:5B8E11FC											       ; ATL::IOleObjectImpl<CTrialEnd>::EnumVerbs(IEnumOLEVERB	* *)+12o ...
.text:5B8E11FC								       dw 0AD2Ah	       ; Data2
.text:5B8E11FC								       dw 11D1h		       ; Data3
.text:5B8E11FC								       db 0ADh,	0EBh, 2	dup(0),	0F8h, 77h, 34h,	0F0h; Data4
.text:5B8E120C						       ; const ATL::CComClassFactory::`vftable'
.text:5B8E120C 66 57 8E	5B				       ??_7CComClassFactory@ATL@@6B@ dd	offset __purecall
.text:5B8E120C											       ; DATA XREF: ATL::CComClassFactory::CComClassFactory(void)+Bo
.text:5B8E1210 66 57 8E	5B						       dd offset __purecall
.text:5B8E1214 66 57 8E	5B						       dd offset __purecall
.text:5B8E1218 EC 31 8E	5B						       dd offset ?CreateInstance@CComClassFactory@ATL@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z ; ATL::CComClassFactory::CreateInstance(IUnknown *,_GUID const &,void	* *)
.text:5B8E121C 2A 32 8E	5B						       dd offset ?LockServer@CComClassFactory@ATL@@UAGJH@Z ; ATL::CComClassFactory::LockServer(int)
.text:5B8E1220						       ; const ATL::CComObjectNoLock<class ATL::CComClassFactory>::`vftable'
.text:5B8E1220 32 1C 8E	5B				       ??_7?$CComObjectNoLock@VCComClassFactory@ATL@@@ATL@@6B@ dd offset ?QueryInterface@?$CComObjectNoLock@VCComClassFactory@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z
.text:5B8E1220											       ; DATA XREF: ATL::CComObjectNoLock<ATL::CComClassFactory>::`scalar deleting destructor'(uint)+3o
.text:5B8E1220											       ; ATL::CComCreator<ATL::CComObjectNoLock<ATL::CComClassFactory>>::CreateInstance(void *,_GUID const &,void * *)+1Co
.text:5B8E1220											       ; ATL::CComObjectNoLock<ATL::CComClassFactory>::QueryInterface(_GUID const &,void * *)
.text:5B8E1224 21 1C 8E	5B						       dd offset ?AddRef@?$CComObjectNoLock@VCComClassFactory@ATL@@@ATL@@UAGKXZ	; ATL::CComObjectNoLock<ATL::CComClassFactory>::AddRef(void)
.text:5B8E1228 B0 1C 8E	5B						       dd offset ?Release@?$CComObjectNoLock@VCComClassFactory@ATL@@@ATL@@UAGKXZ ; ATL::CComObjectNoLock<ATL::CComClassFactory>::Release(void)
.text:5B8E122C EC 31 8E	5B						       dd offset ?CreateInstance@CComClassFactory@ATL@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z ; ATL::CComClassFactory::CreateInstance(IUnknown *,_GUID const &,void	* *)
.text:5B8E1230 2A 32 8E	5B						       dd offset ?LockServer@CComClassFactory@ATL@@UAGJH@Z ; ATL::CComClassFactory::LockServer(int)
.text:5B8E1234						       ; struct	ATL::_ATL_INTMAP_ENTRY `ATL::CComClassFactory::_GetEntries'::`2'::_entries
.text:5B8E1234 FC 18 8E	5B				       ?_entries@?1??_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B dd offset _IID_IClassFactory
.text:5B8E1234											       ; DATA XREF: ATL::CComObjectNoLock<ATL::CComClassFactory>::QueryInterface(_GUID const &,void * *)+8o
.text:5B8E1238 00 00 00	00						       dd 0
.text:5B8E123C 01 00 00	00 00 00 00 00 00 00 00	00 00 00 00 00		       dd 1, 3 dup(0)
.text:5B8E124C						       ; const ATL::CComObject<class CTrialEnd>::`vftable'{for `ATL::IObjectSafetyImpl<class CTrialEnd>'}
.text:5B8E124C 0A 24 8E	5B				       ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IObjectSafetyImpl@VCTrialEnd@@@1@@ dd offset ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@WBM@AGJABU_GUID@@PAPAX@Z
.text:5B8E124C											       ; DATA XREF: ATL::CComObject<CTrialEnd>::CComObject<CTrialEnd>(void *)+4Bo
.text:5B8E124C											       ; ATL::CComObject<CTrialEnd>::~CComObject<CTrialEnd>(void)+46o
.text:5B8E124C											       ; [thunk]:ATL::CComObject<CTrialEnd>::QueryInterface`adjustor{28}' (_GUID const &,void * *)
.text:5B8E1250 7D 21 8E	5B						       dd offset ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@WBM@AGKXZ ; [thunk]:ATL::CComObject<CTrialEnd>::AddRef`adjustor{28}' (void)
.text:5B8E1254 E1 29 8E	5B						       dd offset ?Release@?$CComObject@VCTrialEnd@@@ATL@@WBM@AGKXZ ; [thunk]:ATL::CComObject<CTrialEnd>::Release`adjustor{28}' (void)
.text:5B8E1258 AD 20 8E	5B						       dd offset ?GetInterfaceSafetyOptions@?$IObjectSafetyImpl@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAK1@Z ; ATL::IObjectSafetyImpl<CTrialEnd>::GetInterfaceSafetyOptions(_GUID const &,ulong *,ulong *)
.text:5B8E125C 03 21 8E	5B						       dd offset ?SetInterfaceSafetyOptions@?$IObjectSafetyImpl@VCTrialEnd@@@ATL@@UAGJABU_GUID@@KK@Z ; ATL::IObjectSafetyImpl<CTrialEnd>::SetInterfaceSafetyOptions(_GUID const	&,ulong,ulong)
.text:5B8E1260						       ; const ATL::CComObject<class CTrialEnd>::`vftable'{for `ATL::IOleInPlaceObjectWindowlessImpl<class CTrialEnd>'}
.text:5B8E1260 00 24 8E	5B				       ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@1@@ dd offset ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@WBI@AGJABU_GUID@@PAPAX@Z
.text:5B8E1260											       ; DATA XREF: ATL::CComObject<CTrialEnd>::CComObject<CTrialEnd>(void *)+44o
.text:5B8E1260											       ; ATL::CComObject<CTrialEnd>::~CComObject<CTrialEnd>(void)+3Fo
.text:5B8E1260											       ; [thunk]:ATL::CComObject<CTrialEnd>::QueryInterface`adjustor{24}' (_GUID const &,void * *)
.text:5B8E1264 73 21 8E	5B						       dd offset ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@WBI@AGKXZ ; [thunk]:ATL::CComObject<CTrialEnd>::AddRef`adjustor{24}' (void)
.text:5B8E1268 D7 29 8E	5B						       dd offset ?Release@?$CComObject@VCTrialEnd@@@ATL@@WBI@AGKXZ ; [thunk]:ATL::CComObject<CTrialEnd>::Release`adjustor{24}' (void)
.text:5B8E126C EB 1F 8E	5B						       dd offset ?GetWindow@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJPAPAUHWND__@@@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::GetWindow(HWND__	* *)
.text:5B8E1270 26 20 8E	5B						       dd offset ?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::ContextSensitiveHelp(int)
.text:5B8E1274 2E 20 8E	5B						       dd offset ?InPlaceDeactivate@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJXZ ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::InPlaceDeactivate(void)
.text:5B8E1278 43 20 8E	5B						       dd offset ?UIDeactivate@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJXZ ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::UIDeactivate(void)
.text:5B8E127C 58 20 8E	5B						       dd offset ?SetObjectRects@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJPBUtagRECT@@0@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::SetObjectRects(tagRECT const *,tagRECT const *)
.text:5B8E1280 75 20 8E	5B						       dd offset ?ReactivateAndUndo@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJXZ ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::ReactivateAndUndo(void)
.text:5B8E1284 7D 20 8E	5B						       dd offset ?OnWindowMessage@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJIIJPAJ@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::OnWindowMessage(uint,uint,long,long *)
.text:5B8E1288 26 20 8E	5B						       dd offset ?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::ContextSensitiveHelp(int)
.text:5B8E128C						       ; const ATL::CComObject<class CTrialEnd>::`vftable'{for `ATL::IViewObjectExImpl<class CTrialEnd>'}
.text:5B8E128C F6 23 8E	5B				       ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IViewObjectExImpl@VCTrialEnd@@@1@@ dd offset ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@WBE@AGJABU_GUID@@PAPAX@Z
.text:5B8E128C											       ; DATA XREF: ATL::CComObject<CTrialEnd>::CComObject<CTrialEnd>(void *)+3Do
.text:5B8E128C											       ; ATL::CComObject<CTrialEnd>::~CComObject<CTrialEnd>(void)+38o
.text:5B8E128C											       ; [thunk]:ATL::CComObject<CTrialEnd>::QueryInterface`adjustor{20}' (_GUID const &,void * *)
.text:5B8E1290 69 21 8E	5B						       dd offset ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@WBE@AGKXZ ; [thunk]:ATL::CComObject<CTrialEnd>::AddRef`adjustor{20}' (void)
.text:5B8E1294 CD 29 8E	5B						       dd offset ?Release@?$CComObject@VCTrialEnd@@@ATL@@WBE@AGKXZ ; [thunk]:ATL::CComObject<CTrialEnd>::Release`adjustor{20}' (void)
.text:5B8E1298 E1 1E 8E	5B						       dd offset ?Draw@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@2PBU_RECTL@@3P6GHK@ZK@Z ;	ATL::IViewObjectExImpl<CTrialEnd>::Draw(ulong,long,void	*,tagDVTARGETDEVICE *,HDC__ *,HDC__ *,_RECTL const *,_RECTL const *,int	(*)(ulong),ulong)
.text:5B8E129C 11 1F 8E	5B						       dd offset ?GetColorSet@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@PAPAUtagLOGPALETTE@@@Z ; ATL::IViewObjectExImpl<CTrialEnd>::GetColorSet(ulong,long,void *,tagDVTARGETDEVICE *,HDC__ *,tagLOGPALETTE * *)
.text:5B8E12A0 19 1F 8E	5B						       dd offset ?Freeze@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKJPAXPAK@Z ;	ATL::IViewObjectExImpl<CTrialEnd>::Freeze(ulong,long,void *,ulong *)
.text:5B8E12A4 26 20 8E	5B						       dd offset ?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::ContextSensitiveHelp(int)
.text:5B8E12A8 64 23 8E	5B						       dd offset ?SetAdvise@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKKPAUIAdviseSink@@@Z ; ATL::IViewObjectExImpl<CTrialEnd>::SetAdvise(ulong,ulong,IAdviseSink *)
.text:5B8E12AC 85 23 8E	5B						       dd offset ?GetAdvise@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJPAK0PAPAUIAdviseSink@@@Z ; ATL::IViewObjectExImpl<CTrialEnd>::GetAdvise(ulong *,ulong *,IAdviseSink * *)
.text:5B8E12B0 21 1F 8E	5B						       dd offset ?GetExtent@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKJPAUtagDVTARGETDEVICE@@PAUtagSIZE@@@Z ; ATL::IViewObjectExImpl<CTrialEnd>::GetExtent(ulong,long,tagDVTARGETDEVICE *,tagSIZE *)
.text:5B8E12B4 44 1F 8E	5B						       dd offset ?GetClipboardData@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAPAUIDataObject@@@Z	; ATL::IOleObjectImpl<CTrialEnd>::GetClipboardData(ulong,IDataObject * *)
.text:5B8E12B8 87 21 8E	5B						       dd offset ?GetViewStatus@CTrialEnd@@UAGJPAK@Z ; CTrialEnd::GetViewStatus(ulong *)
.text:5B8E12BC 4C 1F 8E	5B						       dd offset ?QueryHitPoint@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKPBUtagRECT@@UtagPOINT@@JPAK@Z ; ATL::IViewObjectExImpl<CTrialEnd>::QueryHitPoint(ulong,tagRECT const	*,tagPOINT,long,ulong *)
.text:5B8E12C0 7D 1F 8E	5B						       dd offset ?QueryHitRect@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKPBUtagRECT@@0JPAK@Z ;	ATL::IViewObjectExImpl<CTrialEnd>::QueryHitRect(ulong,tagRECT const *,tagRECT const *,long,ulong *)
.text:5B8E12C4 B2 1F 8E	5B						       dd offset ?GetNaturalExtent@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKJPAUtagDVTARGETDEVICE@@PAUHDC__@@PAUtagExtentInfo@@PAUtagSIZE@@@Z	; ATL::IViewObjectExImpl<CTrialEnd>::GetNaturalExtent(ulong,long,tagDVTARGETDEVICE *,HDC__ *,tagExtentInfo *,tagSIZE *)
.text:5B8E12C8						       ; const ATL::CComObject<class CTrialEnd>::`vftable'{for `ATL::IOleInPlaceActiveObjectImpl<class CTrialEnd>'}
.text:5B8E12C8 EC 23 8E	5B				       ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@1@@ dd offset ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@WBA@AGJABU_GUID@@PAPAX@Z
.text:5B8E12C8											       ; DATA XREF: ATL::CComObject<CTrialEnd>::CComObject<CTrialEnd>(void *)+36o
.text:5B8E12C8											       ; ATL::CComObject<CTrialEnd>::~CComObject<CTrialEnd>(void)+31o
.text:5B8E12C8											       ; [thunk]:ATL::CComObject<CTrialEnd>::QueryInterface`adjustor{16}' (_GUID const &,void * *)
.text:5B8E12CC 5F 21 8E	5B						       dd offset ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@WBA@AGKXZ ; [thunk]:ATL::CComObject<CTrialEnd>::AddRef`adjustor{16}' (void)
.text:5B8E12D0 C3 29 8E	5B						       dd offset ?Release@?$CComObject@VCTrialEnd@@@ATL@@WBA@AGKXZ ; [thunk]:ATL::CComObject<CTrialEnd>::Release`adjustor{16}' (void)
.text:5B8E12D4 A1 1E 8E	5B						       dd offset ?GetWindow@?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@ATL@@UAGJPAPAUHWND__@@@Z	; ATL::IOleInPlaceActiveObjectImpl<CTrialEnd>::GetWindow(HWND__	* *)
.text:5B8E12D8 26 20 8E	5B						       dd offset ?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::ContextSensitiveHelp(int)
.text:5B8E12DC 26 20 8E	5B						       dd offset ?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::ContextSensitiveHelp(int)
.text:5B8E12E0 35 22 8E	5B						       dd offset ?OnDocWindowActivate@?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@ATL@@UAGJH@Z ;	ATL::IOleInPlaceActiveObjectImpl<CTrialEnd>::OnDocWindowActivate(int)
.text:5B8E12E4 35 22 8E	5B						       dd offset ?OnDocWindowActivate@?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@ATL@@UAGJH@Z ;	ATL::IOleInPlaceActiveObjectImpl<CTrialEnd>::OnDocWindowActivate(int)
.text:5B8E12E8 DC 1E 8E	5B						       dd offset ?ResizeBorder@?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@ATL@@UAGJPBUtagRECT@@PAUIOleInPlaceUIWindow@@H@Z ; ATL::IOleInPlaceActiveObjectImpl<CTrialEnd>::ResizeBorder(tagRECT const *,IOleInPlaceUIWindow *,int)
.text:5B8E12EC 35 22 8E	5B						       dd offset ?OnDocWindowActivate@?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@ATL@@UAGJH@Z ;	ATL::IOleInPlaceActiveObjectImpl<CTrialEnd>::OnDocWindowActivate(int)
.text:5B8E12F0						       ; const ATL::CComObject<class CTrialEnd>::`vftable'{for `ATL::IOleObjectImpl<class CTrialEnd>'}
.text:5B8E12F0 E2 23 8E	5B				       ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IOleObjectImpl@VCTrialEnd@@@1@@ dd offset	?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@WM@AGJABU_GUID@@PAPAX@Z
.text:5B8E12F0											       ; DATA XREF: ATL::CComObject<CTrialEnd>::CComObject<CTrialEnd>(void *)+2Fo
.text:5B8E12F0											       ; ATL::CComObject<CTrialEnd>::~CComObject<CTrialEnd>(void)+2Ao
.text:5B8E12F0											       ; [thunk]:ATL::CComObject<CTrialEnd>::QueryInterface`adjustor{12}' (_GUID const &,void * *)
.text:5B8E12F4 55 21 8E	5B						       dd offset ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@WM@AGKXZ ; [thunk]:ATL::CComObject<CTrialEnd>::AddRef`adjustor{12}' (void)
.text:5B8E12F8 B9 29 8E	5B						       dd offset ?Release@?$CComObject@VCTrialEnd@@@ATL@@WM@AGKXZ ; [thunk]:ATL::CComObject<CTrialEnd>::Release`adjustor{12}' (void)
.text:5B8E12FC 5B 22 8E	5B						       dd offset ?SetClientSite@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAUIOleClientSite@@@Z ; ATL::IOleObjectImpl<CTrialEnd>::SetClientSite(IOleClientSite *)
.text:5B8E1300 74 22 8E	5B						       dd offset ?GetClientSite@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAPAUIOleClientSite@@@Z ; ATL::IOleObjectImpl<CTrialEnd>::GetClientSite(IOleClientSite *	*)
.text:5B8E1304 8D 22 8E	5B						       dd offset ?SetHostNames@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPBG0@Z ; ATL::IOleObjectImpl<CTrialEnd>::SetHostNames(ushort const *,ushort const	*)
.text:5B8E1308 92 22 8E	5B						       dd offset ?Close@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJK@Z ; ATL::IOleObjectImpl<CTrialEnd>::Close(ulong)
.text:5B8E130C 44 1F 8E	5B						       dd offset ?GetClipboardData@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAPAUIDataObject@@@Z	; ATL::IOleObjectImpl<CTrialEnd>::GetClipboardData(ulong,IDataObject * *)
.text:5B8E1310 1E 1E 8E	5B						       dd offset ?InitFromData@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAUIDataObject@@HK@Z ; ATL::IOleObjectImpl<CTrialEnd>::InitFromData(IDataObject *,int,ulong)
.text:5B8E1314 1E 1E 8E	5B						       dd offset ?InitFromData@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAUIDataObject@@HK@Z ; ATL::IOleObjectImpl<CTrialEnd>::InitFromData(IDataObject *,int,ulong)
.text:5B8E1318 44 1F 8E	5B						       dd offset ?GetClipboardData@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAPAUIDataObject@@@Z	; ATL::IOleObjectImpl<CTrialEnd>::GetClipboardData(ulong,IDataObject * *)
.text:5B8E131C 5C 25 8E	5B						       dd offset ?DoVerb@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJJPAUtagMSG@@PAUIOleClientSite@@JPAUHWND__@@PBUtagRECT@@@Z ; ATL::IOleObjectImpl<CTrialEnd>::DoVerb(long,tagMSG *,IOleClientSite	*,long,HWND__ *,tagRECT	const *)
.text:5B8E1320 AB 22 8E	5B						       dd offset ?EnumVerbs@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAPAUIEnumOLEVERB@@@Z ; ATL::IOleObjectImpl<CTrialEnd>::EnumVerbs(IEnumOLEVERB * *)
.text:5B8E1324 26 1E 8E	5B						       dd offset ?IsUpToDate@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJXZ ; ATL::IOleObjectImpl<CTrialEnd>::IsUpToDate(void)
.text:5B8E1328 26 1E 8E	5B						       dd offset ?IsUpToDate@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJXZ ; ATL::IOleObjectImpl<CTrialEnd>::IsUpToDate(void)
.text:5B8E132C CB 22 8E	5B						       dd offset ?GetUserClassID@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAU_GUID@@@Z ; ATL::IOleObjectImpl<CTrialEnd>::GetUserClassID(_GUID *)
.text:5B8E1330 EC 22 8E	5B						       dd offset ?GetUserType@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAPAG@Z ;	ATL::IOleObjectImpl<CTrialEnd>::GetUserType(ulong,ushort * *)
.text:5B8E1334 2B 1E 8E	5B						       dd offset ?SetExtent@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAUtagSIZE@@@Z ; ATL::IOleObjectImpl<CTrialEnd>::SetExtent(ulong,tagSIZE *)
.text:5B8E1338 48 1E 8E	5B						       dd offset ?GetExtent@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAUtagSIZE@@@Z ; ATL::IOleObjectImpl<CTrialEnd>::GetExtent(ulong,tagSIZE *)
.text:5B8E133C 84 1E 8E	5B						       dd offset ?Advise@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAUIAdviseSink@@PAK@Z ;	ATL::IOleObjectImpl<CTrialEnd>::Advise(IAdviseSink *,ulong *)
.text:5B8E1340 02 23 8E	5B						       dd offset ?Unadvise@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJK@Z ;	ATL::IOleObjectImpl<CTrialEnd>::Unadvise(ulong)
.text:5B8E1344 28 23 8E	5B						       dd offset ?EnumAdvise@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAPAUIEnumSTATDATA@@@Z ; ATL::IOleObjectImpl<CTrialEnd>::EnumAdvise(IEnumSTATDATA *	*)
.text:5B8E1348 4E 23 8E	5B						       dd offset ?GetMiscStatus@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAK@Z ;	ATL::IOleObjectImpl<CTrialEnd>::GetMiscStatus(ulong,ulong *)
.text:5B8E134C 26 20 8E	5B						       dd offset ?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::ContextSensitiveHelp(int)
.text:5B8E1350						       ; const ATL::CComObject<class CTrialEnd>::`vftable'{for `ATL::IOleControlImpl<class CTrialEnd>'}
.text:5B8E1350 D8 23 8E	5B				       ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IOleControlImpl@VCTrialEnd@@@1@@ dd offset ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@W7AGJABU_GUID@@PAPAX@Z
.text:5B8E1350											       ; DATA XREF: ATL::CComObject<CTrialEnd>::CComObject<CTrialEnd>(void *)+28o
.text:5B8E1350											       ; ATL::CComObject<CTrialEnd>::~CComObject<CTrialEnd>(void)+23o
.text:5B8E1350											       ; [thunk]:ATL::CComObject<CTrialEnd>::QueryInterface`adjustor{8}' (_GUID const &,void * *)
.text:5B8E1354 4B 21 8E	5B						       dd offset ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@W7AGKXZ	; [thunk]:ATL::CComObject<CTrialEnd>::AddRef`adjustor{8}' (void)
.text:5B8E1358 AF 29 8E	5B						       dd offset ?Release@?$CComObject@VCTrialEnd@@@ATL@@W7AGKXZ ; [thunk]:ATL::CComObject<CTrialEnd>::Release`adjustor{8}' (void)
.text:5B8E135C 26 20 8E	5B						       dd offset ?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::ContextSensitiveHelp(int)
.text:5B8E1360 26 20 8E	5B						       dd offset ?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::ContextSensitiveHelp(int)
.text:5B8E1364 35 22 8E	5B						       dd offset ?OnDocWindowActivate@?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@ATL@@UAGJH@Z ;	ATL::IOleInPlaceActiveObjectImpl<CTrialEnd>::OnDocWindowActivate(int)
.text:5B8E1368 3A 22 8E	5B						       dd offset ?FreezeEvents@?$IOleControlImpl@VCTrialEnd@@@ATL@@UAGJH@Z ; ATL::IOleControlImpl<CTrialEnd>::FreezeEvents(int)
.text:5B8E136C						       ; const ATL::CComObject<class CTrialEnd>::`vftable'{for `ATL::IPersistStreamInitImpl<class CTrialEnd>'}
.text:5B8E136C CE 23 8E	5B				       ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IPersistStreamInitImpl@VCTrialEnd@@@1@@ dd offset	?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@W3AGJABU_GUID@@PAPAX@Z
.text:5B8E136C											       ; DATA XREF: ATL::CComObject<CTrialEnd>::CComObject<CTrialEnd>(void *)+21o
.text:5B8E136C											       ; ATL::CComObject<CTrialEnd>::~CComObject<CTrialEnd>(void)+1Co
.text:5B8E136C											       ; [thunk]:ATL::CComObject<CTrialEnd>::QueryInterface`adjustor{4}' (_GUID const &,void * *)
.text:5B8E1370 41 21 8E	5B						       dd offset ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@W3AGKXZ	; [thunk]:ATL::CComObject<CTrialEnd>::AddRef`adjustor{4}' (void)
.text:5B8E1374 A5 29 8E	5B						       dd offset ?Release@?$CComObject@VCTrialEnd@@@ATL@@W3AGKXZ ; [thunk]:ATL::CComObject<CTrialEnd>::Release`adjustor{4}' (void)
.text:5B8E1378 A9 21 8E	5B						       dd offset ?GetClassID@?$IPersistStreamInitImpl@VCTrialEnd@@@ATL@@UAGJPAU_GUID@@@Z ; ATL::IPersistStreamInitImpl<CTrialEnd>::GetClassID(_GUID *)
.text:5B8E137C BF 21 8E	5B						       dd offset ?IsDirty@?$IPersistStreamInitImpl@VCTrialEnd@@@ATL@@UAGJXZ ; ATL::IPersistStreamInitImpl<CTrialEnd>::IsDirty(void)
.text:5B8E1380 DC 21 8E	5B						       dd offset ?Load@?$IPersistStreamInitImpl@VCTrialEnd@@@ATL@@UAGJPAUIStream@@@Z ; ATL::IPersistStreamInitImpl<CTrialEnd>::Load(IStream *)
.text:5B8E1384 FA 21 8E	5B						       dd offset ?Save@?$IPersistStreamInitImpl@VCTrialEnd@@@ATL@@UAGJPAUIStream@@H@Z ;	ATL::IPersistStreamInitImpl<CTrialEnd>::Save(IStream *,int)
.text:5B8E1388 26 20 8E	5B						       dd offset ?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::ContextSensitiveHelp(int)
.text:5B8E138C 1C 22 8E	5B						       dd offset ?InitNew@?$IPersistStreamInitImpl@VCTrialEnd@@@ATL@@UAGJXZ ; ATL::IPersistStreamInitImpl<CTrialEnd>::InitNew(void)
.text:5B8E1390						       ; const ATL::CComObject<class CTrialEnd>::`vftable'{for `ATL::IDispatchImpl<struct ITrialEnd, &struct _GUID const IID_ITrialEnd, &struct _GUID const LIBID_TRIALOCLib, 1, 0, class ATL::CComTypeInfoHolder>'}
.text:5B8E1390 B1 23 8E	5B				       ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@ dd offset ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z
.text:5B8E1390											       ; DATA XREF: ATL::CComObject<CTrialEnd>::CComObject<CTrialEnd>(void *)+1Ao
.text:5B8E1390											       ; ATL::CComObject<CTrialEnd>::~CComObject<CTrialEnd>(void)+15o
.text:5B8E1390											       ; ATL::CComObject<CTrialEnd>::QueryInterface(_GUID const	&,void * *)
.text:5B8E1394 34 21 8E	5B						       dd offset ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@UAGKXZ ; ATL::CComObject<CTrialEnd>::AddRef(void)
.text:5B8E1398 38 29 8E	5B						       dd offset ?Release@?$CComObject@VCTrialEnd@@@ATL@@UAGKXZ	; ATL::CComObject<CTrialEnd>::Release(void)
.text:5B8E139C C8 1D 8E	5B						       dd offset ?GetTypeInfoCount@?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAI@Z ; ATL::IDispatchImpl<ITrialEnd,&_GUID const IID_ITrialEnd,&_GUID const LIBID_TRIALOCLib,1,0,ATL::CComTypeInfoHolder>::GetTypeInfoCount(uint *)
.text:5B8E13A0 D7 1D 8E	5B						       dd offset ?GetTypeInfo@?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJIKPAPAUITypeInfo@@@Z ; ATL::IDispatchImpl<ITrialEnd,&_GUID const IID_ITrialEnd,&_GUID	const LIBID_TRIALOCLib,1,0,ATL::CComTypeInfoHolder>::GetTypeInfo(uint,ulong,ITypeInfo *	*)
.text:5B8E13A4 F0 1D 8E	5B						       dd offset ?GetIDsOfNames@?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJABU_GUID@@PAPAGIKPAJ@Z ; ATL::IDispatchImpl<ITrialEnd,&_GUID const IID_ITrialEnd,&_GUID const LIBID_TRIALOCLib,1,0,ATL::CComTypeInfoHolder>::GetIDsOfNames(_GUID const &,ushort * *,uint,ulong,long	*)
.text:5B8E13A8 10 1E 8E	5B						       dd offset ?Invoke@?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ; ATL::IDispatchImpl<ITrialEnd,&_GUID	const IID_ITrialEnd,&_GUID const LIBID_TRIALOCLib,1,0,ATL::CComTypeInfoHolder>::Invoke(long,_GUID const	&,ulong,ushort,tagDISPPARAMS *,tagVARIANT *,tagEXCEPINFO *,uint	*)
.text:5B8E13AC AA 2A 8E	5B						       dd offset ?CleanupTrialReminder@CTrialEnd@@UAGJPAH@Z ; CTrialEnd::CleanupTrialReminder(int *)
.text:5B8E13B0						       ; const ATL::CComObject<class CTrialEnd>::`vftable'{for `ATL::CWindowImpl<class CTrialEnd>'}
.text:5B8E13B0 14 24 8E	5B				       ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$CWindowImpl@VCTrialEnd@@@1@@ dd offset ?ProcessWindowMessage@CTrialEnd@@UAEHPAUHWND__@@IIJAAJK@Z
.text:5B8E13B0											       ; DATA XREF: ATL::CComObject<CTrialEnd>::CComObject<CTrialEnd>(void *)+13o
.text:5B8E13B0											       ; ATL::CComObject<CTrialEnd>::~CComObject<CTrialEnd>(void)+Eo ...
.text:5B8E13B0											       ; CTrialEnd::ProcessWindowMessage(HWND__	*,uint,uint,long,long &,ulong)
.text:5B8E13B4						       ; const ATL::CComContainedObject<class CTrialEnd>::`vftable'{for `ATL::CComControlBase'}
.text:5B8E13B4 2C 25 8E	5B				       ??_7?$CComContainedObject@VCTrialEnd@@@ATL@@6BCComControlBase@1@@ dd offset ?CreateControlWindow@?$CComControl@VCTrialEnd@@@ATL@@UAEPAUHWND__@@PAU3@AAUtagRECT@@@Z
.text:5B8E13B4											       ; DATA XREF: ATL::CComObject<CTrialEnd>::CComObject<CTrialEnd>(void *)+Do
.text:5B8E13B4											       ; ATL::CComObject<CTrialEnd>::~CComObject<CTrialEnd>(void)+8o ...
.text:5B8E13B4											       ; ATL::CComControl<CTrialEnd>::CreateControlWindow(HWND__ *,tagRECT &)
.text:5B8E13B8 93 21 8E	5B						       dd offset ?ControlQueryInterface@?$CComControl@VCTrialEnd@@@ATL@@UAEJABU_GUID@@PAPAX@Z ;	ATL::CComControl<CTrialEnd>::ControlQueryInterface(_GUID const &,void *	*)
.text:5B8E13BC BC 4D 8E	5B						       dd offset ?OnDrawAdvanced@CComControlBase@ATL@@UAEJAAUATL_DRAWINFO@2@@Z ; ATL::CComControlBase::OnDrawAdvanced(ATL::ATL_DRAWINFO	&)
.text:5B8E13C0 26 1E 8E	5B						       dd offset ?IsUpToDate@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJXZ ; ATL::IOleObjectImpl<CTrialEnd>::IsUpToDate(void)
.text:5B8E13C4 00 00 00	00						       align 8
.text:5B8E13C8						       ; struct	ATL::_ATL_INTMAP_ENTRY `CTrialEnd::_GetEntries'::`2'::_entries
.text:5B8E13C8 1C 19 8E	5B				       ?_entries@?1??_GetEntries@CTrialEnd@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ@4QBU34@B dd offset _IID_IDispatch
.text:5B8E13C8											       ; DATA XREF: ATL::CComControl<CTrialEnd>::ControlQueryInterface(_GUID const &,void * *)+8o
.text:5B8E13C8											       ; ATL::CComObject<CTrialEnd>::QueryInterface(_GUID const	&,void * *)+Fo	...
.text:5B8E13CC 64 00 00	00 01 00 00 00					       dd 64h, 1
.text:5B8E13D4 DC 11 8E	5B						       dd offset _IID_ITrialEnd
.text:5B8E13D8 64 00 00	00 01 00 00 00					       dd 64h, 1
.text:5B8E13E0 CC 19 8E	5B						       dd offset _IID_IViewObject
.text:5B8E13E4 78 00 00	00 01 00 00 00					       dd 78h, 1
.text:5B8E13EC BC 19 8E	5B						       dd offset _IID_IViewObject2
.text:5B8E13F0 78 00 00	00 01 00 00 00					       dd 78h, 1
.text:5B8E13F8 3C 19 8E	5B						       dd offset _IID_IViewObjectEx
.text:5B8E13FC 78 00 00	00 01 00 00 00					       dd 78h, 1
.text:5B8E1404 0C 1A 8E	5B						       dd offset _IID_IOleWindow
.text:5B8E1408 7C 00 00	00 01 00 00 00					       dd 7Ch, 1
.text:5B8E1410 EC 19 8E	5B						       dd offset _IID_IOleInPlaceObject
.text:5B8E1414 7C 00 00	00 01 00 00 00					       dd 7Ch, 1
.text:5B8E141C 6C 19 8E	5B						       dd offset _IID_IOleInPlaceObjectWindowless
.text:5B8E1420 7C 00 00	00 01 00 00 00					       dd 7Ch, 1
.text:5B8E1428 FC 19 8E	5B						       dd offset _IID_IOleInPlaceActiveObject
.text:5B8E142C 74 00 00	00 01 00 00 00					       dd 74h, 1
.text:5B8E1434 AC 19 8E	5B						       dd offset _IID_IOleControl
.text:5B8E1438 6C 00 00	00 01 00 00 00					       dd 6Ch, 1
.text:5B8E1440 1C 1A 8E	5B						       dd offset _IID_IOleObject
.text:5B8E1444 70 00 00	00 01 00 00 00					       dd 70h, 1
.text:5B8E144C 7C 19 8E	5B						       dd offset _IID_IPersistStreamInit
.text:5B8E1450 68 00 00	00 01 00 00 00					       dd 68h, 1
.text:5B8E1458 2C 19 8E	5B						       dd offset _IID_IObjectSafety
.text:5B8E145C 80 00 00	00 01 00 00 00 00 00 00	00 00 00 00 00+		       dd 80h, 1, 3 dup(0)
.text:5B8E1470						       ; const ATL::CComAggObject<class	CTrialEnd>::`vftable'
.text:5B8E1470 3A 27 8E	5B				       ??_7?$CComAggObject@VCTrialEnd@@@ATL@@6B@ dd offset ?QueryInterface@?$CComAggObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z
.text:5B8E1470											       ; DATA XREF: ATL::CComAggObject<CTrialEnd>::~CComAggObject<CTrialEnd>(void)+8o
.text:5B8E1470											       ; ATL::CComAggObject<CTrialEnd>::CComAggObject<CTrialEnd>(void *)+Eo
.text:5B8E1470											       ; ATL::CComAggObject<CTrialEnd>::QueryInterface(_GUID const &,void * *)
.text:5B8E1474 2D 27 8E	5B						       dd offset ?AddRef@?$CComAggObject@VCTrialEnd@@@ATL@@UAGKXZ ; ATL::CComAggObject<CTrialEnd>::AddRef(void)
.text:5B8E1478 85 29 8E	5B						       dd offset ?Release@?$CComAggObject@VCTrialEnd@@@ATL@@UAGKXZ ; ATL::CComAggObject<CTrialEnd>::Release(void)
.text:5B8E147C						       ; const ATL::CComContainedObject<class CTrialEnd>::`vftable'{for `ATL::IObjectSafetyImpl<class CTrialEnd>'}
.text:5B8E147C E2 28 8E	5B				       ??_7?$CComContainedObject@VCTrialEnd@@@ATL@@6B?$IObjectSafetyImpl@VCTrialEnd@@@1@@ dd offset ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@WBM@AGJABU_GUID@@PAPAX@Z
.text:5B8E147C											       ; DATA XREF: ATL::CComContainedObject<CTrialEnd>::CComContainedObject<CTrialEnd>(void *)+50o
.text:5B8E147C											       ; [thunk]:ATL::CComContainedObject<CTrialEnd>::QueryInterface`adjustor{28}' (_GUID const &,void * *)
.text:5B8E1480 EC 28 8E	5B						       dd offset ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@WBM@AGKXZ ; [thunk]:ATL::CComContainedObject<CTrialEnd>::AddRef`adjustor{28}' (void)
.text:5B8E1484 F6 28 8E	5B						       dd offset ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@WBM@AGKXZ ; [thunk]:ATL::CComContainedObject<CTrialEnd>::Release`adjustor{28}' (void)
.text:5B8E1488 AD 20 8E	5B						       dd offset ?GetInterfaceSafetyOptions@?$IObjectSafetyImpl@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAK1@Z ; ATL::IObjectSafetyImpl<CTrialEnd>::GetInterfaceSafetyOptions(_GUID const &,ulong *,ulong *)
.text:5B8E148C 03 21 8E	5B						       dd offset ?SetInterfaceSafetyOptions@?$IObjectSafetyImpl@VCTrialEnd@@@ATL@@UAGJABU_GUID@@KK@Z ; ATL::IObjectSafetyImpl<CTrialEnd>::SetInterfaceSafetyOptions(_GUID const	&,ulong,ulong)
.text:5B8E1490						       ; const ATL::CComContainedObject<class CTrialEnd>::`vftable'{for `ATL::IOleInPlaceObjectWindowlessImpl<class CTrialEnd>'}
.text:5B8E1490 C4 28 8E	5B				       ??_7?$CComContainedObject@VCTrialEnd@@@ATL@@6B?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@1@@	dd offset ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@WBI@AGJABU_GUID@@PAPAX@Z
.text:5B8E1490											       ; DATA XREF: ATL::CComContainedObject<CTrialEnd>::CComContainedObject<CTrialEnd>(void *)+49o
.text:5B8E1490											       ; [thunk]:ATL::CComContainedObject<CTrialEnd>::QueryInterface`adjustor{24}' (_GUID const &,void * *)
.text:5B8E1494 CE 28 8E	5B						       dd offset ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@WBI@AGKXZ ; [thunk]:ATL::CComContainedObject<CTrialEnd>::AddRef`adjustor{24}' (void)
.text:5B8E1498 D8 28 8E	5B						       dd offset ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@WBI@AGKXZ ; [thunk]:ATL::CComContainedObject<CTrialEnd>::Release`adjustor{24}' (void)
.text:5B8E149C EB 1F 8E	5B						       dd offset ?GetWindow@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJPAPAUHWND__@@@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::GetWindow(HWND__	* *)
.text:5B8E14A0 26 20 8E	5B						       dd offset ?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::ContextSensitiveHelp(int)
.text:5B8E14A4 2E 20 8E	5B						       dd offset ?InPlaceDeactivate@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJXZ ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::InPlaceDeactivate(void)
.text:5B8E14A8 43 20 8E	5B						       dd offset ?UIDeactivate@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJXZ ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::UIDeactivate(void)
.text:5B8E14AC 58 20 8E	5B						       dd offset ?SetObjectRects@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJPBUtagRECT@@0@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::SetObjectRects(tagRECT const *,tagRECT const *)
.text:5B8E14B0 75 20 8E	5B						       dd offset ?ReactivateAndUndo@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJXZ ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::ReactivateAndUndo(void)
.text:5B8E14B4 7D 20 8E	5B						       dd offset ?OnWindowMessage@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJIIJPAJ@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::OnWindowMessage(uint,uint,long,long *)
.text:5B8E14B8 26 20 8E	5B						       dd offset ?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::ContextSensitiveHelp(int)
.text:5B8E14BC						       ; const ATL::CComContainedObject<class CTrialEnd>::`vftable'{for `ATL::IViewObjectExImpl<class CTrialEnd>'}
.text:5B8E14BC A6 28 8E	5B				       ??_7?$CComContainedObject@VCTrialEnd@@@ATL@@6B?$IViewObjectExImpl@VCTrialEnd@@@1@@ dd offset ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@WBE@AGJABU_GUID@@PAPAX@Z
.text:5B8E14BC											       ; DATA XREF: ATL::CComContainedObject<CTrialEnd>::CComContainedObject<CTrialEnd>(void *)+42o
.text:5B8E14BC											       ; [thunk]:ATL::CComContainedObject<CTrialEnd>::QueryInterface`adjustor{20}' (_GUID const &,void * *)
.text:5B8E14C0 B0 28 8E	5B						       dd offset ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@WBE@AGKXZ ; [thunk]:ATL::CComContainedObject<CTrialEnd>::AddRef`adjustor{20}' (void)
.text:5B8E14C4 BA 28 8E	5B						       dd offset ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@WBE@AGKXZ ; [thunk]:ATL::CComContainedObject<CTrialEnd>::Release`adjustor{20}' (void)
.text:5B8E14C8 E1 1E 8E	5B						       dd offset ?Draw@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@2PBU_RECTL@@3P6GHK@ZK@Z ;	ATL::IViewObjectExImpl<CTrialEnd>::Draw(ulong,long,void	*,tagDVTARGETDEVICE *,HDC__ *,HDC__ *,_RECTL const *,_RECTL const *,int	(*)(ulong),ulong)
.text:5B8E14CC 11 1F 8E	5B						       dd offset ?GetColorSet@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@PAPAUtagLOGPALETTE@@@Z ; ATL::IViewObjectExImpl<CTrialEnd>::GetColorSet(ulong,long,void *,tagDVTARGETDEVICE *,HDC__ *,tagLOGPALETTE * *)
.text:5B8E14D0 19 1F 8E	5B						       dd offset ?Freeze@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKJPAXPAK@Z ;	ATL::IViewObjectExImpl<CTrialEnd>::Freeze(ulong,long,void *,ulong *)
.text:5B8E14D4 26 20 8E	5B						       dd offset ?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::ContextSensitiveHelp(int)
.text:5B8E14D8 64 23 8E	5B						       dd offset ?SetAdvise@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKKPAUIAdviseSink@@@Z ; ATL::IViewObjectExImpl<CTrialEnd>::SetAdvise(ulong,ulong,IAdviseSink *)
.text:5B8E14DC 85 23 8E	5B						       dd offset ?GetAdvise@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJPAK0PAPAUIAdviseSink@@@Z ; ATL::IViewObjectExImpl<CTrialEnd>::GetAdvise(ulong *,ulong *,IAdviseSink * *)
.text:5B8E14E0 21 1F 8E	5B						       dd offset ?GetExtent@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKJPAUtagDVTARGETDEVICE@@PAUtagSIZE@@@Z ; ATL::IViewObjectExImpl<CTrialEnd>::GetExtent(ulong,long,tagDVTARGETDEVICE *,tagSIZE *)
.text:5B8E14E4 44 1F 8E	5B						       dd offset ?GetClipboardData@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAPAUIDataObject@@@Z	; ATL::IOleObjectImpl<CTrialEnd>::GetClipboardData(ulong,IDataObject * *)
.text:5B8E14E8 87 21 8E	5B						       dd offset ?GetViewStatus@CTrialEnd@@UAGJPAK@Z ; CTrialEnd::GetViewStatus(ulong *)
.text:5B8E14EC 4C 1F 8E	5B						       dd offset ?QueryHitPoint@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKPBUtagRECT@@UtagPOINT@@JPAK@Z ; ATL::IViewObjectExImpl<CTrialEnd>::QueryHitPoint(ulong,tagRECT const	*,tagPOINT,long,ulong *)
.text:5B8E14F0 7D 1F 8E	5B						       dd offset ?QueryHitRect@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKPBUtagRECT@@0JPAK@Z ;	ATL::IViewObjectExImpl<CTrialEnd>::QueryHitRect(ulong,tagRECT const *,tagRECT const *,long,ulong *)
.text:5B8E14F4 B2 1F 8E	5B						       dd offset ?GetNaturalExtent@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKJPAUtagDVTARGETDEVICE@@PAUHDC__@@PAUtagExtentInfo@@PAUtagSIZE@@@Z	; ATL::IViewObjectExImpl<CTrialEnd>::GetNaturalExtent(ulong,long,tagDVTARGETDEVICE *,HDC__ *,tagExtentInfo *,tagSIZE *)
.text:5B8E14F8						       ; const ATL::CComContainedObject<class CTrialEnd>::`vftable'{for `ATL::IOleInPlaceActiveObjectImpl<class CTrialEnd>'}
.text:5B8E14F8 88 28 8E	5B				       ??_7?$CComContainedObject@VCTrialEnd@@@ATL@@6B?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@1@@ dd offset ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@WBA@AGJABU_GUID@@PAPAX@Z
.text:5B8E14F8											       ; DATA XREF: ATL::CComContainedObject<CTrialEnd>::CComContainedObject<CTrialEnd>(void *)+3Bo
.text:5B8E14F8											       ; [thunk]:ATL::CComContainedObject<CTrialEnd>::QueryInterface`adjustor{16}' (_GUID const &,void * *)
.text:5B8E14FC 92 28 8E	5B						       dd offset ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@WBA@AGKXZ ; [thunk]:ATL::CComContainedObject<CTrialEnd>::AddRef`adjustor{16}' (void)
.text:5B8E1500 9C 28 8E	5B						       dd offset ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@WBA@AGKXZ ; [thunk]:ATL::CComContainedObject<CTrialEnd>::Release`adjustor{16}' (void)
.text:5B8E1504 A1 1E 8E	5B						       dd offset ?GetWindow@?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@ATL@@UAGJPAPAUHWND__@@@Z	; ATL::IOleInPlaceActiveObjectImpl<CTrialEnd>::GetWindow(HWND__	* *)
.text:5B8E1508 26 20 8E	5B						       dd offset ?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::ContextSensitiveHelp(int)
.text:5B8E150C 26 20 8E	5B						       dd offset ?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::ContextSensitiveHelp(int)
.text:5B8E1510 35 22 8E	5B						       dd offset ?OnDocWindowActivate@?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@ATL@@UAGJH@Z ;	ATL::IOleInPlaceActiveObjectImpl<CTrialEnd>::OnDocWindowActivate(int)
.text:5B8E1514 35 22 8E	5B						       dd offset ?OnDocWindowActivate@?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@ATL@@UAGJH@Z ;	ATL::IOleInPlaceActiveObjectImpl<CTrialEnd>::OnDocWindowActivate(int)
.text:5B8E1518 DC 1E 8E	5B						       dd offset ?ResizeBorder@?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@ATL@@UAGJPBUtagRECT@@PAUIOleInPlaceUIWindow@@H@Z ; ATL::IOleInPlaceActiveObjectImpl<CTrialEnd>::ResizeBorder(tagRECT const *,IOleInPlaceUIWindow *,int)
.text:5B8E151C 35 22 8E	5B						       dd offset ?OnDocWindowActivate@?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@ATL@@UAGJH@Z ;	ATL::IOleInPlaceActiveObjectImpl<CTrialEnd>::OnDocWindowActivate(int)
.text:5B8E1520						       ; const ATL::CComContainedObject<class CTrialEnd>::`vftable'{for `ATL::IOleObjectImpl<class CTrialEnd>'}
.text:5B8E1520 6A 28 8E	5B				       ??_7?$CComContainedObject@VCTrialEnd@@@ATL@@6B?$IOleObjectImpl@VCTrialEnd@@@1@@ dd offset ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@WM@AGJABU_GUID@@PAPAX@Z
.text:5B8E1520											       ; DATA XREF: ATL::CComContainedObject<CTrialEnd>::CComContainedObject<CTrialEnd>(void *)+34o
.text:5B8E1520											       ; [thunk]:ATL::CComContainedObject<CTrialEnd>::QueryInterface`adjustor{12}' (_GUID const &,void * *)
.text:5B8E1524 74 28 8E	5B						       dd offset ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@WM@AGKXZ ; [thunk]:ATL::CComContainedObject<CTrialEnd>::AddRef`adjustor{12}' (void)
.text:5B8E1528 7E 28 8E	5B						       dd offset ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@WM@AGKXZ ; [thunk]:ATL::CComContainedObject<CTrialEnd>::Release`adjustor{12}' (void)
.text:5B8E152C 5B 22 8E	5B						       dd offset ?SetClientSite@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAUIOleClientSite@@@Z ; ATL::IOleObjectImpl<CTrialEnd>::SetClientSite(IOleClientSite *)
.text:5B8E1530 74 22 8E	5B						       dd offset ?GetClientSite@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAPAUIOleClientSite@@@Z ; ATL::IOleObjectImpl<CTrialEnd>::GetClientSite(IOleClientSite *	*)
.text:5B8E1534 8D 22 8E	5B						       dd offset ?SetHostNames@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPBG0@Z ; ATL::IOleObjectImpl<CTrialEnd>::SetHostNames(ushort const *,ushort const	*)
.text:5B8E1538 92 22 8E	5B						       dd offset ?Close@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJK@Z ; ATL::IOleObjectImpl<CTrialEnd>::Close(ulong)
.text:5B8E153C 44 1F 8E	5B						       dd offset ?GetClipboardData@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAPAUIDataObject@@@Z	; ATL::IOleObjectImpl<CTrialEnd>::GetClipboardData(ulong,IDataObject * *)
.text:5B8E1540 1E 1E 8E	5B						       dd offset ?InitFromData@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAUIDataObject@@HK@Z ; ATL::IOleObjectImpl<CTrialEnd>::InitFromData(IDataObject *,int,ulong)
.text:5B8E1544 1E 1E 8E	5B						       dd offset ?InitFromData@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAUIDataObject@@HK@Z ; ATL::IOleObjectImpl<CTrialEnd>::InitFromData(IDataObject *,int,ulong)
.text:5B8E1548 44 1F 8E	5B						       dd offset ?GetClipboardData@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAPAUIDataObject@@@Z	; ATL::IOleObjectImpl<CTrialEnd>::GetClipboardData(ulong,IDataObject * *)
.text:5B8E154C 5C 25 8E	5B						       dd offset ?DoVerb@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJJPAUtagMSG@@PAUIOleClientSite@@JPAUHWND__@@PBUtagRECT@@@Z ; ATL::IOleObjectImpl<CTrialEnd>::DoVerb(long,tagMSG *,IOleClientSite	*,long,HWND__ *,tagRECT	const *)
.text:5B8E1550 AB 22 8E	5B						       dd offset ?EnumVerbs@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAPAUIEnumOLEVERB@@@Z ; ATL::IOleObjectImpl<CTrialEnd>::EnumVerbs(IEnumOLEVERB * *)
.text:5B8E1554 26 1E 8E	5B						       dd offset ?IsUpToDate@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJXZ ; ATL::IOleObjectImpl<CTrialEnd>::IsUpToDate(void)
.text:5B8E1558 26 1E 8E	5B						       dd offset ?IsUpToDate@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJXZ ; ATL::IOleObjectImpl<CTrialEnd>::IsUpToDate(void)
.text:5B8E155C CB 22 8E	5B						       dd offset ?GetUserClassID@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAU_GUID@@@Z ; ATL::IOleObjectImpl<CTrialEnd>::GetUserClassID(_GUID *)
.text:5B8E1560 EC 22 8E	5B						       dd offset ?GetUserType@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAPAG@Z ;	ATL::IOleObjectImpl<CTrialEnd>::GetUserType(ulong,ushort * *)
.text:5B8E1564 2B 1E 8E	5B						       dd offset ?SetExtent@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAUtagSIZE@@@Z ; ATL::IOleObjectImpl<CTrialEnd>::SetExtent(ulong,tagSIZE *)
.text:5B8E1568 48 1E 8E	5B						       dd offset ?GetExtent@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAUtagSIZE@@@Z ; ATL::IOleObjectImpl<CTrialEnd>::GetExtent(ulong,tagSIZE *)
.text:5B8E156C 84 1E 8E	5B						       dd offset ?Advise@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAUIAdviseSink@@PAK@Z ;	ATL::IOleObjectImpl<CTrialEnd>::Advise(IAdviseSink *,ulong *)
.text:5B8E1570 02 23 8E	5B						       dd offset ?Unadvise@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJK@Z ;	ATL::IOleObjectImpl<CTrialEnd>::Unadvise(ulong)
.text:5B8E1574 28 23 8E	5B						       dd offset ?EnumAdvise@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAPAUIEnumSTATDATA@@@Z ; ATL::IOleObjectImpl<CTrialEnd>::EnumAdvise(IEnumSTATDATA *	*)
.text:5B8E1578 4E 23 8E	5B						       dd offset ?GetMiscStatus@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAK@Z ;	ATL::IOleObjectImpl<CTrialEnd>::GetMiscStatus(ulong,ulong *)
.text:5B8E157C 26 20 8E	5B						       dd offset ?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::ContextSensitiveHelp(int)
.text:5B8E1580						       ; const ATL::CComContainedObject<class CTrialEnd>::`vftable'{for `ATL::IOleControlImpl<class CTrialEnd>'}
.text:5B8E1580 4C 28 8E	5B				       ??_7?$CComContainedObject@VCTrialEnd@@@ATL@@6B?$IOleControlImpl@VCTrialEnd@@@1@@	dd offset ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@W7AGJABU_GUID@@PAPAX@Z
.text:5B8E1580											       ; DATA XREF: ATL::CComContainedObject<CTrialEnd>::CComContainedObject<CTrialEnd>(void *)+2Do
.text:5B8E1580											       ; [thunk]:ATL::CComContainedObject<CTrialEnd>::QueryInterface`adjustor{8}' (_GUID const &,void * *)
.text:5B8E1584 56 28 8E	5B						       dd offset ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@W7AGKXZ ; [thunk]:ATL::CComContainedObject<CTrialEnd>::AddRef`adjustor{8}' (void)
.text:5B8E1588 60 28 8E	5B						       dd offset ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@W7AGKXZ ; [thunk]:ATL::CComContainedObject<CTrialEnd>::Release`adjustor{8}' (void)
.text:5B8E158C 26 20 8E	5B						       dd offset ?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::ContextSensitiveHelp(int)
.text:5B8E1590 26 20 8E	5B						       dd offset ?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::ContextSensitiveHelp(int)
.text:5B8E1594 35 22 8E	5B						       dd offset ?OnDocWindowActivate@?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@ATL@@UAGJH@Z ;	ATL::IOleInPlaceActiveObjectImpl<CTrialEnd>::OnDocWindowActivate(int)
.text:5B8E1598 3A 22 8E	5B						       dd offset ?FreezeEvents@?$IOleControlImpl@VCTrialEnd@@@ATL@@UAGJH@Z ; ATL::IOleControlImpl<CTrialEnd>::FreezeEvents(int)
.text:5B8E159C						       ; const ATL::CComContainedObject<class CTrialEnd>::`vftable'{for `ATL::IPersistStreamInitImpl<class CTrialEnd>'}
.text:5B8E159C 2E 28 8E	5B				       ??_7?$CComContainedObject@VCTrialEnd@@@ATL@@6B?$IPersistStreamInitImpl@VCTrialEnd@@@1@@ dd offset ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@W3AGJABU_GUID@@PAPAX@Z
.text:5B8E159C											       ; DATA XREF: ATL::CComContainedObject<CTrialEnd>::CComContainedObject<CTrialEnd>(void *)+26o
.text:5B8E159C											       ; [thunk]:ATL::CComContainedObject<CTrialEnd>::QueryInterface`adjustor{4}' (_GUID const &,void * *)
.text:5B8E15A0 38 28 8E	5B						       dd offset ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@W3AGKXZ ; [thunk]:ATL::CComContainedObject<CTrialEnd>::AddRef`adjustor{4}' (void)
.text:5B8E15A4 42 28 8E	5B						       dd offset ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@W3AGKXZ ; [thunk]:ATL::CComContainedObject<CTrialEnd>::Release`adjustor{4}' (void)
.text:5B8E15A8 A9 21 8E	5B						       dd offset ?GetClassID@?$IPersistStreamInitImpl@VCTrialEnd@@@ATL@@UAGJPAU_GUID@@@Z ; ATL::IPersistStreamInitImpl<CTrialEnd>::GetClassID(_GUID *)
.text:5B8E15AC BF 21 8E	5B						       dd offset ?IsDirty@?$IPersistStreamInitImpl@VCTrialEnd@@@ATL@@UAGJXZ ; ATL::IPersistStreamInitImpl<CTrialEnd>::IsDirty(void)
.text:5B8E15B0 DC 21 8E	5B						       dd offset ?Load@?$IPersistStreamInitImpl@VCTrialEnd@@@ATL@@UAGJPAUIStream@@@Z ; ATL::IPersistStreamInitImpl<CTrialEnd>::Load(IStream *)
.text:5B8E15B4 FA 21 8E	5B						       dd offset ?Save@?$IPersistStreamInitImpl@VCTrialEnd@@@ATL@@UAGJPAUIStream@@H@Z ;	ATL::IPersistStreamInitImpl<CTrialEnd>::Save(IStream *,int)
.text:5B8E15B8 26 20 8E	5B						       dd offset ?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJH@Z ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::ContextSensitiveHelp(int)
.text:5B8E15BC 1C 22 8E	5B						       dd offset ?InitNew@?$IPersistStreamInitImpl@VCTrialEnd@@@ATL@@UAGJXZ ; ATL::IPersistStreamInitImpl<CTrialEnd>::InitNew(void)
.text:5B8E15C0						       ; const ATL::CComContainedObject<class CTrialEnd>::`vftable'{for `ATL::IDispatchImpl<struct ITrialEnd, &struct _GUID const IID_ITrialEnd, &struct _GUID const LIBID_TRIALOCLib, 1, 0, class ATL::CComTypeInfoHolder>'}
.text:5B8E15C0 17 28 8E	5B				       ??_7?$CComContainedObject@VCTrialEnd@@@ATL@@6B?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@ dd offset ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z
.text:5B8E15C0											       ; DATA XREF: ATL::CComContainedObject<CTrialEnd>::CComContainedObject<CTrialEnd>(void *)+1Fo
.text:5B8E15C0											       ; ATL::CComContainedObject<CTrialEnd>::QueryInterface(_GUID const &,void	* *)
.text:5B8E15C4 F7 27 8E	5B						       dd offset ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGKXZ	; ATL::CComContainedObject<CTrialEnd>::AddRef(void)
.text:5B8E15C8 07 28 8E	5B						       dd offset ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGKXZ ; ATL::CComContainedObject<CTrialEnd>::Release(void)
.text:5B8E15CC C8 1D 8E	5B						       dd offset ?GetTypeInfoCount@?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAI@Z ; ATL::IDispatchImpl<ITrialEnd,&_GUID const IID_ITrialEnd,&_GUID const LIBID_TRIALOCLib,1,0,ATL::CComTypeInfoHolder>::GetTypeInfoCount(uint *)
.text:5B8E15D0 D7 1D 8E	5B						       dd offset ?GetTypeInfo@?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJIKPAPAUITypeInfo@@@Z ; ATL::IDispatchImpl<ITrialEnd,&_GUID const IID_ITrialEnd,&_GUID	const LIBID_TRIALOCLib,1,0,ATL::CComTypeInfoHolder>::GetTypeInfo(uint,ulong,ITypeInfo *	*)
.text:5B8E15D4 F0 1D 8E	5B						       dd offset ?GetIDsOfNames@?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJABU_GUID@@PAPAGIKPAJ@Z ; ATL::IDispatchImpl<ITrialEnd,&_GUID const IID_ITrialEnd,&_GUID const LIBID_TRIALOCLib,1,0,ATL::CComTypeInfoHolder>::GetIDsOfNames(_GUID const &,ushort * *,uint,ulong,long	*)
.text:5B8E15D8 10 1E 8E	5B						       dd offset ?Invoke@?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ; ATL::IDispatchImpl<ITrialEnd,&_GUID	const IID_ITrialEnd,&_GUID const LIBID_TRIALOCLib,1,0,ATL::CComTypeInfoHolder>::Invoke(long,_GUID const	&,ulong,ushort,tagDISPPARAMS *,tagVARIANT *,tagEXCEPINFO *,uint	*)
.text:5B8E15DC AA 2A 8E	5B						       dd offset ?CleanupTrialReminder@CTrialEnd@@UAGJPAH@Z ; CTrialEnd::CleanupTrialReminder(int *)
.text:5B8E15E0						       ; const WCHAR SubKey
.text:5B8E15E0						       SubKey:				       ; DATA XREF: CTrialEnd::CleanupTrialReminder(int	*)+10o
.text:5B8E15E0 53 00 6F	00 66 00 74 00 77 00 61	00 72 00 65 00+		       unicode 0, <Software\Microsoft\Internet Connection Wizard\IcwRmind>,0
.text:5B8E164E 00 00							       align 10h
.text:5B8E1650						       ; const WCHAR ValueName
.text:5B8E1650						       ValueName:			       ; DATA XREF: CTrialEnd::CleanupTrialReminder(int	*)+35o
.text:5B8E1650 54 00 72	00 69 00 61 00 6C 00 43	00 6F 00 6E 00+		       unicode 0, <TrialConverted>,0
.text:5B8E166E 00 00							       align 10h
.text:5B8E1670						       aTypelib:			       ; DATA XREF: .data:5B8E70C4o
.text:5B8E1670 54 00 59	00 50 00 45 00 4C 00 49	00 42 00 00 00		       unicode 0, <TYPELIB>,0
.text:5B8E1680						       aClsid:				       ; DATA XREF: .data:ushort const * * ATL::rgszNeverDeleteo
.text:5B8E1680 43 00 4C	00 53 00 49 00 44 00 00	00			       unicode 0, <CLSID>,0
.text:5B8E168C EC 16 8E	5B						       dd offset aS	       ; "S"
.text:5B8E1690 E8 16 8E	5B						       dd offset aD	       ; "D"
.text:5B8E1694 E0 16 8E	5B						       dd offset aVal	       ; "Val"
.text:5B8E1698 C8 16 8E	5B						       dd offset aForceremove  ; "ForceRemove"
.text:5B8E169C B4 16 8E	5B						       dd offset aNoremove     ; "NoRemove"
.text:5B8E16A0 A4 16 8E	5B						       dd offset aDelete       ; "Delete"
.text:5B8E16A4						       ; const WCHAR aDelete
.text:5B8E16A4						       aDelete:				       ; DATA XREF: .text:5B8E16A0o
.text:5B8E16A4											       ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+44o
.text:5B8E16A4 44 00 65	00 6C 00 65 00 74 00 65	00 00 00		       unicode 0, <Delete>,0
.text:5B8E16B2 00 00							       align 4
.text:5B8E16B4						       ; const WCHAR aNoremove
.text:5B8E16B4						       aNoremove:			       ; DATA XREF: .text:5B8E169Co
.text:5B8E16B4											       ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int):loc_5B8E4FF6o
.text:5B8E16B4 4E 00 6F	00 52 00 65 00 6D 00 6F	00 76 00 65 00+		       unicode 0, <NoRemove>,0
.text:5B8E16C6 00 00							       align 4
.text:5B8E16C8						       ; const WCHAR aForceremove
.text:5B8E16C8						       aForceremove:			       ; DATA XREF: .text:5B8E1698o
.text:5B8E16C8											       ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+56o
.text:5B8E16C8 46 00 6F	00 72 00 63 00 65 00 52	00 65 00 6D 00+		       unicode 0, <ForceRemove>,0
.text:5B8E16E0						       ; const WCHAR aVal
.text:5B8E16E0						       aVal:				       ; DATA XREF: .text:5B8E1694o
.text:5B8E16E0											       ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int):loc_5B8E5027o
.text:5B8E16E0 56 00 61	00 6C 00 00 00					       unicode 0, <Val>,0
.text:5B8E16E8						       aD:				       ; DATA XREF: .text:5B8E1690o
.text:5B8E16E8											       ; sub_5B8E2BD9+23o
.text:5B8E16E8 44 00 00	00						       unicode 0, <D>,0
.text:5B8E16EC						       aS:				       ; DATA XREF: .text:5B8E168Co
.text:5B8E16EC											       ; sub_5B8E2BD9+10o
.text:5B8E16EC 53 00 00	00						       unicode 0, <S>,0
.text:5B8E16F0						       aHkey_current_c:			       ; DATA XREF: .text:5B8E18A0o
.text:5B8E16F0 48 00 4B	00 45 00 59 00 5F 00 43	00 55 00 52 00+		       unicode 0, <HKEY_CURRENT_CONFIG>,0
.text:5B8E1718						       aHkey_dyn_data:			       ; DATA XREF: .text:5B8E1898o
.text:5B8E1718 48 00 4B	00 45 00 59 00 5F 00 44	00 59 00 4E 00+		       unicode 0, <HKEY_DYN_DATA>,0
.text:5B8E1734						       aHkey_performan:			       ; DATA XREF: .text:5B8E1890o
.text:5B8E1734 48 00 4B	00 45 00 59 00 5F 00 50	00 45 00 52 00+		       unicode 0, <HKEY_PERFORMANCE_DATA>,0
.text:5B8E1760						       aHkey_users:			       ; DATA XREF: .text:5B8E1888o
.text:5B8E1760 48 00 4B	00 45 00 59 00 5F 00 55	00 53 00 45 00+		       unicode 0, <HKEY_USERS>,0
.text:5B8E1776 00 00							       align 4
.text:5B8E1778						       aHkey_local_mac:			       ; DATA XREF: .text:5B8E1880o
.text:5B8E1778 48 00 4B	00 45 00 59 00 5F 00 4C	00 4F 00 43 00+		       unicode 0, <HKEY_LOCAL_MACHINE>,0
.text:5B8E179E 00 00							       align 10h
.text:5B8E17A0						       aHkey_current_u:			       ; DATA XREF: .text:5B8E1878o
.text:5B8E17A0 48 00 4B	00 45 00 59 00 5F 00 43	00 55 00 52 00+		       unicode 0, <HKEY_CURRENT_USER>,0
.text:5B8E17C4						       aHkey_classes_r:			       ; DATA XREF: .text:5B8E1870o
.text:5B8E17C4 48 00 4B	00 45 00 59 00 5F 00 43	00 4C 00 41 00+		       unicode 0, <HKEY_CLASSES_ROOT>,0
.text:5B8E17E8						       aHkcc:				       ; DATA XREF: .text:5B8E1868o
.text:5B8E17E8 48 00 4B	00 43 00 43 00 00 00				       unicode 0, <HKCC>,0
.text:5B8E17F2 00 00							       align 4
.text:5B8E17F4						       aHkdd:				       ; DATA XREF: .text:5B8E1860o
.text:5B8E17F4 48 00 4B	00 44 00 44 00 00 00				       unicode 0, <HKDD>,0
.text:5B8E17FE 00 00							       align 10h
.text:5B8E1800						       aHkpd:				       ; DATA XREF: .text:5B8E1858o
.text:5B8E1800 48 00 4B	00 50 00 44 00 00 00				       unicode 0, <HKPD>,0
.text:5B8E180A 00 00							       align 4
.text:5B8E180C						       aHku:				       ; DATA XREF: .text:5B8E1850o
.text:5B8E180C 48 00 4B	00 55 00 00 00					       unicode 0, <HKU>,0
.text:5B8E1814						       aHklm:				       ; DATA XREF: .text:5B8E1848o
.text:5B8E1814 48 00 4B	00 4C 00 4D 00 00 00				       unicode 0, <HKLM>,0
.text:5B8E181E 00 00							       align 10h
.text:5B8E1820						       aHkcu:				       ; DATA XREF: .text:5B8E1840o
.text:5B8E1820 48 00 4B	00 43 00 55 00 00 00				       unicode 0, <HKCU>,0
.text:5B8E182A 00 00							       align 4
.text:5B8E182C						       aHkcr:				       ; DATA XREF: .text:off_5B8E1838o
.text:5B8E182C 48 00 4B	00 43 00 52 00 00 00				       unicode 0, <HKCR>,0
.text:5B8E1836 00 00							       align 4
.text:5B8E1838						       ; LPCWSTR off_5B8E1838
.text:5B8E1838 2C 18 8E	5B				       off_5B8E1838    dd offset aHkcr	       ; DATA XREF: ATL::CRegParser::RegisterBuffer(ushort *,int):loc_5B8E53D7r
.text:5B8E1838											       ; "HKCR"
.text:5B8E183C 00 00 00	80				       dword_5B8E183C  dd 80000000h	       ; DATA XREF: ATL::CRegParser::RegisterBuffer(ushort *,int):loc_5B8E543Br
.text:5B8E1840 20 18 8E	5B						       dd offset aHkcu	       ; "HKCU"
.text:5B8E1844 01 00 00	80						       dd 80000001h
.text:5B8E1848 14 18 8E	5B						       dd offset aHklm	       ; "HKLM"
.text:5B8E184C 02 00 00	80						       dd 80000002h
.text:5B8E1850 0C 18 8E	5B						       dd offset aHku	       ; "HKU"
.text:5B8E1854 03 00 00	80						       dd 80000003h
.text:5B8E1858 00 18 8E	5B						       dd offset aHkpd	       ; "HKPD"
.text:5B8E185C 04 00 00	80						       dd 80000004h
.text:5B8E1860 F4 17 8E	5B						       dd offset aHkdd	       ; "HKDD"
.text:5B8E1864 06 00 00	80						       dd 80000006h
.text:5B8E1868 E8 17 8E	5B						       dd offset aHkcc	       ; "HKCC"
.text:5B8E186C 05 00 00	80						       dd 80000005h
.text:5B8E1870 C4 17 8E	5B						       dd offset aHkey_classes_r ; "HKEY_CLASSES_ROOT"
.text:5B8E1874 00 00 00	80						       dd 80000000h
.text:5B8E1878 A0 17 8E	5B						       dd offset aHkey_current_u ; "HKEY_CURRENT_USER"
.text:5B8E187C 01 00 00	80						       dd 80000001h
.text:5B8E1880 78 17 8E	5B						       dd offset aHkey_local_mac ; "HKEY_LOCAL_MACHINE"
.text:5B8E1884 02 00 00	80						       dd 80000002h
.text:5B8E1888 60 17 8E	5B						       dd offset aHkey_users   ; "HKEY_USERS"
.text:5B8E188C 03 00 00	80						       dd 80000003h
.text:5B8E1890 34 17 8E	5B						       dd offset aHkey_performan ; "HKEY_PERFORMANCE_DATA"
.text:5B8E1894 04 00 00	80						       dd 80000004h
.text:5B8E1898 18 17 8E	5B						       dd offset aHkey_dyn_data	; "HKEY_DYN_DATA"
.text:5B8E189C 06 00 00	80						       dd 80000006h
.text:5B8E18A0 F0 16 8E	5B						       dd offset aHkey_current_c ; "HKEY_CURRENT_CONFIG"
.text:5B8E18A4 05 00 00	80						       dd 80000005h
.text:5B8E18A8						       ; const WCHAR String2
.text:5B8E18A8						       String2:				       ; DATA XREF: ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const *):loc_5B8E3792o
.text:5B8E18A8 2E 00 74	00 6C 00 62 00 00 00				       unicode 0, <.tlb>,0
.text:5B8E18B2 00 00							       align 4
.text:5B8E18B4						       ; const WCHAR pwszDriver
.text:5B8E18B4						       pwszDriver:			       ; DATA XREF: AtlCreateTargetDC(HDC__ *,tagDVTARGETDEVICE	*)+59o
.text:5B8E18B4 44 00 49	00 53 00 50 00 4C 00 41	00 59 00 00 00		       unicode 0, <DISPLAY>,0
.text:5B8E18C4						       ; const WCHAR aAtl8_8x
.text:5B8E18C4						       aAtl8_8x:			       ; DATA XREF: ATL::CWndClassInfo::Register(long (**)(HWND__ *,uint,uint,long))+BAo
.text:5B8E18C4 41 00 54	00 4C 00 3A 00 25 00 38	00 2E 00 38 00+		       unicode 0, <ATL:%8.8X>,0
.text:5B8E18D8						       ; unsigned __int16 aRegistry
.text:5B8E18D8						       aRegistry:			       ; DATA XREF: ATL::CComModule::UpdateRegistryFromResourceS(uint,int,ATL::_ATL_REGMAP_ENTRY *)+7Bo
.text:5B8E18D8 52 00 45	00 47 00 49 00 53 00 54	00 52 00 59 00+		       unicode 0, <REGISTRY>,0
.text:5B8E18EA 00 00							       align 4
.text:5B8E18EC						       ; const WCHAR String
.text:5B8E18EC						       String:				       ; DATA XREF: ATL::CComModule::UpdateRegistryFromResourceS(uint,int,ATL::_ATL_REGMAP_ENTRY *)+4Bo
.text:5B8E18EC 4D 00 6F	00 64 00 75 00 6C 00 65	00 00 00		       unicode 0, <Module>,0
.text:5B8E18FA 00 00							       align 4
.text:5B8E18FC						       ; GUID IID_IClassFactory
.text:5B8E18FC 01 00 00	00 00 00 00 00 C0 00 00	00 00 00 00 46 _IID_IClassFactory dd 1			  ; Data1
.text:5B8E18FC											       ; DATA XREF: .text:ATL::_ATL_INTMAP_ENTRY const * const `ATL::CComClassFactory::_GetEntries(void)'::`2'::_entrieso
.text:5B8E18FC								       dw 0		       ; Data2
.text:5B8E18FC								       dw 0		       ; Data3
.text:5B8E18FC								       db 0C0h,	6 dup(0), 46h  ; Data4
.text:5B8E190C						       ; GUID IID_IUnknown
.text:5B8E190C 00 00 00	00 00 00 00 00 C0 00 00	00 00 00 00 46 _IID_IUnknown   dd 0		       ; Data1
.text:5B8E190C											       ; DATA XREF: ATL::CComVariant::ReadFromStream(IStream *)+5Ao
.text:5B8E190C											       ; ATL::AtlModuleGetClassObject(ATL::_ATL_MODULE *,_GUID const &,_GUID const &,void * *)+5Ao ...
.text:5B8E190C								       dw 0		       ; Data2
.text:5B8E190C								       dw 0		       ; Data3
.text:5B8E190C								       db 0C0h,	6 dup(0), 46h  ; Data4
.text:5B8E191C						       ; GUID IID_IDispatch
.text:5B8E191C 00 04 02	00 00 00 00 00 C0 00 00	00 00 00 00 46 _IID_IDispatch  dd 20400h	       ; Data1
.text:5B8E191C											       ; DATA XREF: .text:ATL::_ATL_INTMAP_ENTRY const * const `CTrialEnd::_GetEntries(void)'::`2'::_entrieso
.text:5B8E191C											       ; ATL::IObjectSafetyImpl<CTrialEnd>::GetInterfaceSafetyOptions(_GUID const &,ulong *,ulong *)+1Eo ...
.text:5B8E191C								       dw 0		       ; Data2
.text:5B8E191C								       dw 0		       ; Data3
.text:5B8E191C								       db 0C0h,	6 dup(0), 46h  ; Data4
.text:5B8E192C						       ; GUID IID_IObjectSafety
.text:5B8E192C 81 DC 5B	CB C1 93 CF 11 8F 20 00	80 5F 2C D0 64 _IID_IObjectSafety dd 0CB5BDC81h		  ; Data1
.text:5B8E192C											       ; DATA XREF: .text:5B8E1458o
.text:5B8E192C								       dw 93C1h		       ; Data2
.text:5B8E192C								       dw 11CFh		       ; Data3
.text:5B8E192C								       db 8Fh, 20h, 0, 80h, 5Fh, 2Ch, 0D0h, 64h; Data4
.text:5B8E193C						       ; GUID IID_IViewObjectEx
.text:5B8E193C 92 42 F2	3A 96 0C CE 11 A0 CF 00	AA 00 60 0A B8 _IID_IViewObjectEx dd 3AF24292h		  ; Data1
.text:5B8E193C											       ; DATA XREF: .text:5B8E13F8o
.text:5B8E193C								       dw 0C96h		       ; Data2
.text:5B8E193C								       dw 11CEh		       ; Data3
.text:5B8E193C								       db 0A0h,	0CFh, 0, 0AAh, 0, 60h, 0Ah, 0B8h; Data4
.text:5B8E194C						       ; GUID IID_IOleInPlaceSiteWindowless
.text:5B8E194C A0 AD 2E	92 24 34 CF 11 B6 70 00	AA 00 4C D6 D8 _IID_IOleInPlaceSiteWindowless dd 922EADA0h	      ;	Data1
.text:5B8E194C											       ; DATA XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+54o
.text:5B8E194C								       dw 3424h		       ; Data2
.text:5B8E194C								       dw 11CFh		       ; Data3
.text:5B8E194C								       db 0B6h,	70h, 0,	0AAh, 0, 4Ch, 0D6h, 0D8h; Data4
.text:5B8E195C						       ; GUID IID_IOleInPlaceSiteEx
.text:5B8E195C 80 AD 2C	9C 24 34 CF 11 B6 70 00	AA 00 4C D6 D8 _IID_IOleInPlaceSiteEx dd 9C2CAD80h	      ;	Data1
.text:5B8E195C											       ; DATA XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+94o
.text:5B8E195C								       dw 3424h		       ; Data2
.text:5B8E195C								       dw 11CFh		       ; Data3
.text:5B8E195C								       db 0B6h,	70h, 0,	0AAh, 0, 4Ch, 0D6h, 0D8h; Data4
.text:5B8E196C						       ; GUID IID_IOleInPlaceObjectWindowless
.text:5B8E196C CC 56 20	1C F4 5E 1B 10 8B C8 00	AA 00 3E 3B 29 _IID_IOleInPlaceObjectWindowless	dd 1C2056CCh		; Data1
.text:5B8E196C											       ; DATA XREF: .text:5B8E141Co
.text:5B8E196C								       dw 5EF4h		       ; Data2
.text:5B8E196C								       dw 101Bh		       ; Data3
.text:5B8E196C								       db 8Bh, 0C8h, 0,	0AAh, 0, 3Eh, 3Bh, 29h;	Data4
.text:5B8E197C						       ; GUID IID_IPersistStreamInit
.text:5B8E197C 80 23 D5	7F 07 4E 1B 10 AE 2D 08	00 2B 2E C7 13 _IID_IPersistStreamInit dd 7FD52380h	       ; Data1
.text:5B8E197C											       ; DATA XREF: .text:5B8E144Co
.text:5B8E197C								       dw 4E07h		       ; Data2
.text:5B8E197C								       dw 101Bh		       ; Data3
.text:5B8E197C								       db 0AEh,	2Dh, 8,	0, 2Bh,	2Eh, 0C7h, 13h;	Data4
.text:5B8E198C						       ; GUID IID_ISpecifyPropertyPages
.text:5B8E198C 8B B2 96	B1 B4 BA 1A 10 B6 9C 00	AA 00 34 1D 07 _IID_ISpecifyPropertyPages dd 0B196B28Bh		  ; Data1
.text:5B8E198C											       ; DATA XREF: ATL::CComControlBase::DoVerbProperties(tagRECT const *,HWND__ *)+72o
.text:5B8E198C								       dw 0BAB4h	       ; Data2
.text:5B8E198C								       dw 101Ah		       ; Data3
.text:5B8E198C								       db 0B6h,	9Ch, 0,	0AAh, 0, 34h, 1Dh, 7; Data4
.text:5B8E199C						       ; GUID IID_IOleControlSite
.text:5B8E199C 89 B2 96	B1 B4 BA 1A 10 B6 9C 00	AA 00 34 1D 07 _IID_IOleControlSite dd 0B196B289h	    ; Data1
.text:5B8E199C											       ; DATA XREF: ATL::CComControlBase::OnSetFocus(uint,uint,long,int	&)+19o
.text:5B8E199C											       ; ATL::CComControlBase::OnKillFocus(uint,uint,long,int &)+19o ...
.text:5B8E199C								       dw 0BAB4h	       ; Data2
.text:5B8E199C								       dw 101Ah		       ; Data3
.text:5B8E199C								       db 0B6h,	9Ch, 0,	0AAh, 0, 34h, 1Dh, 7; Data4
.text:5B8E19AC						       ; GUID IID_IOleControl
.text:5B8E19AC 88 B2 96	B1 B4 BA 1A 10 B6 9C 00	AA 00 34 1D 07 _IID_IOleControl	dd 0B196B288h		; Data1
.text:5B8E19AC											       ; DATA XREF: .text:5B8E1434o
.text:5B8E19AC								       dw 0BAB4h	       ; Data2
.text:5B8E19AC								       dw 101Ah		       ; Data3
.text:5B8E19AC								       db 0B6h,	9Ch, 0,	0AAh, 0, 34h, 1Dh, 7; Data4
.text:5B8E19BC						       ; GUID IID_IViewObject2
.text:5B8E19BC 27 01 00	00 00 00 00 00 C0 00 00	00 00 00 00 46 _IID_IViewObject2 dd 127h		 ; Data1
.text:5B8E19BC											       ; DATA XREF: .text:5B8E13ECo
.text:5B8E19BC								       dw 0		       ; Data2
.text:5B8E19BC								       dw 0		       ; Data3
.text:5B8E19BC								       db 0C0h,	6 dup(0), 46h  ; Data4
.text:5B8E19CC						       ; GUID IID_IViewObject
.text:5B8E19CC 0D 01 00	00 00 00 00 00 C0 00 00	00 00 00 00 46 _IID_IViewObject	dd 10Dh			; Data1
.text:5B8E19CC											       ; DATA XREF: .text:5B8E13E0o
.text:5B8E19CC								       dw 0		       ; Data2
.text:5B8E19CC								       dw 0		       ; Data3
.text:5B8E19CC								       db 0C0h,	6 dup(0), 46h  ; Data4
.text:5B8E19DC						       ; GUID IID_IOleInPlaceSite
.text:5B8E19DC 19 01 00	00 00 00 00 00 C0 00 00	00 00 00 00 46 _IID_IOleInPlaceSite dd 119h		    ; Data1
.text:5B8E19DC											       ; DATA XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+ACo
.text:5B8E19DC								       dw 0		       ; Data2
.text:5B8E19DC								       dw 0		       ; Data3
.text:5B8E19DC								       db 0C0h,	6 dup(0), 46h  ; Data4
.text:5B8E19EC						       ; GUID IID_IOleInPlaceObject
.text:5B8E19EC 13 01 00	00 00 00 00 00 C0 00 00	00 00 00 00 46 _IID_IOleInPlaceObject dd 113h		      ;	Data1
.text:5B8E19EC											       ; DATA XREF: .text:5B8E1410o
.text:5B8E19EC											       ; ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+1Eo ...
.text:5B8E19EC								       dw 0		       ; Data2
.text:5B8E19EC								       dw 0		       ; Data3
.text:5B8E19EC								       db 0C0h,	6 dup(0), 46h  ; Data4
.text:5B8E19FC						       ; GUID IID_IOleInPlaceActiveObject
.text:5B8E19FC 17 01 00	00 00 00 00 00 C0 00 00	00 00 00 00 46 _IID_IOleInPlaceActiveObject dd 117h		    ; Data1
.text:5B8E19FC											       ; DATA XREF: .text:5B8E1428o
.text:5B8E19FC											       ; ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+1ADo
.text:5B8E19FC								       dw 0		       ; Data2
.text:5B8E19FC								       dw 0		       ; Data3
.text:5B8E19FC								       db 0C0h,	6 dup(0), 46h  ; Data4
.text:5B8E1A0C						       ; GUID IID_IOleWindow
.text:5B8E1A0C 14 01 00	00 00 00 00 00 C0 00 00	00 00 00 00 46 _IID_IOleWindow dd 114h		       ; Data1
.text:5B8E1A0C											       ; DATA XREF: .text:5B8E1404o
.text:5B8E1A0C								       dw 0		       ; Data2
.text:5B8E1A0C								       dw 0		       ; Data3
.text:5B8E1A0C								       db 0C0h,	6 dup(0), 46h  ; Data4
.text:5B8E1A1C						       ; GUID IID_IOleObject
.text:5B8E1A1C 12 01 00	00 00 00 00 00 C0 00 00	00 00 00 00 46 _IID_IOleObject dd 112h		       ; Data1
.text:5B8E1A1C											       ; DATA XREF: .text:5B8E1440o
.text:5B8E1A1C											       ; ATL::CComControlBase::DoVerbProperties(tagRECT	const *,HWND__ *)+94o
.text:5B8E1A1C								       dw 0		       ; Data2
.text:5B8E1A1C								       dw 0		       ; Data3
.text:5B8E1A1C								       db 0C0h,	6 dup(0), 46h  ; Data4
.text:5B8E1A2C						       ; GUID GUID_NULL
.text:5B8E1A2C 00 00 00	00 00 00 00 00 00 00 00	00 00 00 00 00 _GUID_NULL      GUID <0>		       ; DATA XREF: ATL::CComDispatchDriver::GetProperty(IDispatch *,long,tagVARIANT *)+27o
.text:5B8E1A2C											       ; ATL::CComDispatchDriver::PutProperty(IDispatch	*,long,tagVARIANT *)+36o ...
.text:5B8E1A3C						       ; GUID IID_IDataObject
.text:5B8E1A3C 0E 01 00	00 00 00 00 00 C0 00 00	00 00 00 00 46 _IID_IDataObject	dd 10Eh			; Data1
.text:5B8E1A3C											       ; DATA XREF: ATL::CComControlBase::SendOnDataChange(ulong)+18o
.text:5B8E1A3C								       dw 0		       ; Data2
.text:5B8E1A3C								       dw 0		       ; Data3
.text:5B8E1A3C								       db 0C0h,	6 dup(0), 46h  ; Data4
.text:5B8E1A4C						       ; GUID IID_IPersistStream
.text:5B8E1A4C 09 01 00	00 00 00 00 00 C0 00 00	00 00 00 00 46 _IID_IPersistStream dd 109h		   ; Data1
.text:5B8E1A4C											       ; DATA XREF: ATL::CComVariant::WriteToStream(IStream *)+4Bo
.text:5B8E1A4C								       dw 0		       ; Data2
.text:5B8E1A4C								       dw 0		       ; Data3
.text:5B8E1A4C								       db 0C0h,	6 dup(0), 46h  ; Data4
.text:5B8E1A5C						       ; Debug information
.text:5B8E1A5C 4E 42 31	30				       asc_5B8E1A5C    db 'NB10'               ; DATA XREF: .text:5B8E11D4o
.text:5B8E1A5C											       ; .text:5B8E11D8o
.text:5B8E1A5C											       ; CV signature
.text:5B8E1A60 00 00 00	00						       dd 0		       ; Offset
.text:5B8E1A64 15 83 7D	3B						       dd 3B7D8315h	       ; Signature
.text:5B8E1A68 01 00 00	00						       dd 1		       ; Age
.text:5B8E1A6C 74 72 69	61 6C 6F 63 2E 70 64 62	00			       db 'trialoc.pdb',0      ; PdbFileName
.text:5B8E1A78 00 00 00	00 00 00 00 00					       align 10h
.text:5B8E1A80
.text:5B8E1A80						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1A80
.text:5B8E1A80
.text:5B8E1A80						       ; __int32 __stdcall CTrialEnd::UpdateRegistry(int)
.text:5B8E1A80						       ?UpdateRegistry@CTrialEnd@@SGJH@Z proc near
.text:5B8E1A80											       ; DATA XREF: .data:5B8E7004o
.text:5B8E1A80
.text:5B8E1A80						       arg_0	       = dword ptr  4
.text:5B8E1A80
.text:5B8E1A80 6A 00							       push    0	       ; struct	ATL::_ATL_REGMAP_ENTRY *
.text:5B8E1A82 FF 74 24	08						       push    [esp+4+arg_0]   ; int
.text:5B8E1A86 68 0C 04	00 00						       push    40Ch	       ; __int16
.text:5B8E1A8B 68 D8 70	8E 5B						       push    offset ?_Module@@3VCComModule@ATL@@A ; this
.text:5B8E1A90 E8 60 3B	00 00						       call    ?UpdateRegistryFromResourceS@CComModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z ; ATL::CComModule::UpdateRegistryFromResourceS(uint,int,ATL::_ATL_REGMAP_ENTRY *)
.text:5B8E1A95 C2 04 00							       retn    4
.text:5B8E1A95						       ?UpdateRegistry@CTrialEnd@@SGJH@Z endp
.text:5B8E1A95
.text:5B8E1A98
.text:5B8E1A98						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1A98
.text:5B8E1A98
.text:5B8E1A98						       ; public: static	unsigned short const * __stdcall ATL::CComCoClass<class	CTrialEnd, &struct _GUID const CLSID_TrialEnd>::GetObjectDescription(void)
.text:5B8E1A98						       ?GetObjectDescription@?$CComCoClass@VCTrialEnd@@$1?CLSID_TrialEnd@@3U_GUID@@B@ATL@@SGPBGXZ proc near
.text:5B8E1A98											       ; DATA XREF: .data:5B8E7018o
.text:5B8E1A98 33 C0							       xor     eax, eax
.text:5B8E1A9A C3							       retn
.text:5B8E1A9A						       ?GetObjectDescription@?$CComCoClass@VCTrialEnd@@$1?CLSID_TrialEnd@@3U_GUID@@B@ATL@@SGPBGXZ endp
.text:5B8E1A9A
.text:5B8E1A9B
.text:5B8E1A9B						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1A9B
.text:5B8E1A9B
.text:5B8E1A9B						       ; public: __thiscall ATL::CComObjectRootEx<class	ATL::CComMultiThreadModel>::CComObjectRootEx<class ATL::CComMultiThreadModel>(void)
.text:5B8E1A9B						       ??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ proc near
.text:5B8E1A9B											       ; CODE XREF: ATL::CComClassFactory::CComClassFactory(void)+6p
.text:5B8E1A9B 56							       push    esi
.text:5B8E1A9C 8B F1							       mov     esi, ecx
.text:5B8E1A9E 83 26 00							       and     dword ptr [esi],	0
.text:5B8E1AA1 8D 46 04							       lea     eax, [esi+4]
.text:5B8E1AA4 50							       push    eax	       ; lpCriticalSection
.text:5B8E1AA5 FF 15 98	10 8E 5B					       call    ds:__imp__InitializeCriticalSection@4 ; InitializeCriticalSection(x)
.text:5B8E1AAB 8B C6							       mov     eax, esi
.text:5B8E1AAD 5E							       pop     esi
.text:5B8E1AAE C3							       retn
.text:5B8E1AAE						       ??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ endp
.text:5B8E1AAE
.text:5B8E1AAF
.text:5B8E1AAF						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1AAF
.text:5B8E1AAF
.text:5B8E1AAF						       ; int __thiscall	ATL::CDynamicStdCallThunk::~CDynamicStdCallThunk(ATL::CDynamicStdCallThunk *__hidden this)
.text:5B8E1AAF						       ??1CDynamicStdCallThunk@ATL@@QAE@XZ proc	near
.text:5B8E1AAF											       ; CODE XREF: ATL::CComControl<CTrialEnd>::~CComControl<CTrialEnd>(void)+Fp
.text:5B8E1AAF 8B 01							       mov     eax, [ecx]
.text:5B8E1AB1 85 C0							       test    eax, eax
.text:5B8E1AB3 74 10							       jz      short locret_5B8E1AC5
.text:5B8E1AB5 50							       push    eax	       ; lpMem
.text:5B8E1AB6 6A 00							       push    0	       ; dwFlags
.text:5B8E1AB8 FF 15 84	10 8E 5B					       call    ds:__imp__GetProcessHeap@0 ; GetProcessHeap()
.text:5B8E1ABE 50							       push    eax	       ; hHeap
.text:5B8E1ABF FF 15 88	10 8E 5B					       call    ds:__imp__HeapFree@12 ; HeapFree(x,x,x)
.text:5B8E1AC5
.text:5B8E1AC5						       locret_5B8E1AC5:			       ; CODE XREF: ATL::CDynamicStdCallThunk::~CDynamicStdCallThunk(void)+4j
.text:5B8E1AC5 C3							       retn
.text:5B8E1AC5						       ??1CDynamicStdCallThunk@ATL@@QAE@XZ endp
.text:5B8E1AC5
.text:5B8E1AC6						       ; ---------------------------------------------------------------------------
.text:5B8E1AC6								       assume fs:nothing, gs:nothing
.text:5B8E1AC6
.text:5B8E1AC6						       ; BOOL __stdcall	DllMain(HINSTANCE hinstDLL, DWORD fdwReason, LPVOID lpReserved)
.text:5B8E1AC6								       public _DllMain@12
.text:5B8E1AC6						       _DllMain@12:
.text:5B8E1AC6 83 EC 04							       sub     esp, 4
.text:5B8E1AC9 60							       pusha
.text:5B8E1ACA BB 10 00	00 00						       mov     ebx, 10h
.text:5B8E1ACF 8D 4C 5B	10						       lea     ecx, [ebx+ebx*2+10h]
.text:5B8E1AD3 51							       push    ecx
.text:5B8E1AD4 BB 00 03	00 00						       mov     ebx, 300h
.text:5B8E1AD9 8D 14 9D	00 04 00 00					       lea     edx, ds:400h[ebx*4]
.text:5B8E1AE0 52							       push    edx
.text:5B8E1AE1 BA 00 04	00 00						       mov     edx, 400h
.text:5B8E1AE6 81 C2 00	04 00 00					       add     edx, 400h
.text:5B8E1AEC 52							       push    edx
.text:5B8E1AED 8D 0D 00	00 00 00					       lea     ecx, large ds:0
.text:5B8E1AF3 51							       push    ecx
.text:5B8E1AF4 FF 15 60	10 8E 5B					       call    ds:__imp__FindResourceW@12 ; FindResourceW(x,x,x)
.text:5B8E1AFA 89 C6							       mov     esi, eax
.text:5B8E1AFC 31 C0							       xor     eax, eax
.text:5B8E1AFE 05 C4 81	8E 5B						       add     eax, offset unk_5B8E81C4
.text:5B8E1B03 31 C9							       xor     ecx, ecx
.text:5B8E1B05 01 C1							       add     ecx, eax
.text:5B8E1B07 8D 89 3C	7E 71 A4					       lea     ecx, [ecx-5B8E81C4h]
.text:5B8E1B0D 51							       push    ecx
.text:5B8E1B0E 56							       push    esi
.text:5B8E1B0F 8D 10							       lea     edx, [eax]
.text:5B8E1B11 31 FF							       xor     edi, edi
.text:5B8E1B11						       ; ---------------------------------------------------------------------------
.text:5B8E1B13 0B							       db 0Bh
.text:5B8E1B14						       ; Exported entry	  1. DllCanUnloadNow
.text:5B8E1B14
.text:5B8E1B14						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1B14
.text:5B8E1B14
.text:5B8E1B14						       ; HRESULT __stdcall DllCanUnloadNow()
.text:5B8E1B14								       public _DllCanUnloadNow@0
.text:5B8E1B14						       _DllCanUnloadNow@0 proc near	       ; DATA XREF: .text:off_5B8E6058o
.text:5B8E1B14 3A 40 83							       cmp     al, [eax-7Dh]
.text:5B8E1B17 C0 03 8D							       rol     byte ptr	[ebx], 8Dh
.text:5B8E1B17											       ; CODE XREF: .text:5B8E1B2Fj
.text:5B8E1B1A 54							       push    esp
.text:5B8E1B1B 38 FF							       cmp     bh, bh
.text:5B8E1B1D 0F B6 0A							       movzx   ecx, byte ptr [edx]
.text:5B8E1B1D						       _DllCanUnloadNow@0 endp ; sp-analysis failed
.text:5B8E1B1D
.text:5B8E1B20						       ; Exported entry	  2. DllGetClassObject
.text:5B8E1B20
.text:5B8E1B20						       ; HRESULT __stdcall DllGetClassObject(const IID *const rclsid, const IID	*const riid, LPVOID *ppv)
.text:5B8E1B20								       public _DllGetClassObject@12
.text:5B8E1B20						       _DllGetClassObject@12:		       ; DATA XREF: .text:off_5B8E6058o
.text:5B8E1B20 31 DB							       xor     ebx, ebx
.text:5B8E1B22 88 5C 3E	FF						       mov     [esi+edi-1], bl
.text:5B8E1B26 08 4C 3E	FF						       or      [esi+edi-1], cl
.text:5B8E1B2A 83 C7 FF							       add     edi, 0FFFFFFFFh
.text:5B8E1B2D 85 FF							       test    edi, edi
.text:5B8E1B2F 75 E8							       jnz     short near ptr loc_5B8E1B17+2
.text:5B8E1B31 5B							       pop     ebx
.text:5B8E1B32 53							       push    ebx
.text:5B8E1B33 8F 43 01							       pop     dword ptr [ebx+1]
.text:5B8E1B36 FF D3							       call    ebx
.text:5B8E1B36						       ; ---------------------------------------------------------------------------
.text:5B8E1B38 00							       db 0
.text:5B8E1B39						       ; Exported entry	  3. DllRegisterServer
.text:5B8E1B39
.text:5B8E1B39						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1B39
.text:5B8E1B39
.text:5B8E1B39						       ; HRESULT __stdcall DllRegisterServer()
.text:5B8E1B39								       public _DllRegisterServer@0
.text:5B8E1B39						       _DllRegisterServer@0 proc near	       ; DATA XREF: .text:off_5B8E6058o
.text:5B8E1B39 6A 00							       push    0	       ; struct	_GUID *
.text:5B8E1B3B 6A 01							       push    1	       ; int
.text:5B8E1B3D 68 D8 70	8E 5B						       push    offset ?_Module@@3VCComModule@ATL@@A ; pptlib
.text:5B8E1B42 E8 25 28	00 00						       call    ?AtlModuleRegisterServer@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z ; ATL::AtlModuleRegisterServer(ATL::_ATL_MODULE *,int,_GUID const *)
.text:5B8E1B47 C3							       retn
.text:5B8E1B47						       _DllRegisterServer@0 endp
.text:5B8E1B47
.text:5B8E1B48						       ; Exported entry	  4. DllUnregisterServer
.text:5B8E1B48
.text:5B8E1B48						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1B48
.text:5B8E1B48
.text:5B8E1B48						       ; HRESULT __stdcall DllUnregisterServer()
.text:5B8E1B48								       public _DllUnregisterServer@0
.text:5B8E1B48						       _DllUnregisterServer@0 proc near	       ; DATA XREF: .text:off_5B8E6058o
.text:5B8E1B48 6A 00							       push    0	       ; struct	_GUID *
.text:5B8E1B4A 68 D8 70	8E 5B						       push    offset ?_Module@@3VCComModule@ATL@@A ; struct ATL::_ATL_MODULE *
.text:5B8E1B4F E8 52 1B	00 00						       call    ?AtlModuleUnregisterServer@ATL@@YGJPAU_ATL_MODULE@1@PBU_GUID@@@Z	; ATL::AtlModuleUnregisterServer(ATL::_ATL_MODULE *,_GUID const	*)
.text:5B8E1B54 33 C0							       xor     eax, eax
.text:5B8E1B56 C3							       retn
.text:5B8E1B56						       _DllUnregisterServer@0 endp
.text:5B8E1B56
.text:5B8E1B57
.text:5B8E1B57						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1B57
.text:5B8E1B57
.text:5B8E1B57						       ; int __thiscall	ATL::CComClassFactory::CComClassFactory(ATL::CComClassFactory *__hidden	this)
.text:5B8E1B57						       ??0CComClassFactory@ATL@@QAE@XZ proc near
.text:5B8E1B57											       ; CODE XREF: ATL::CComCreator<ATL::CComObjectNoLock<ATL::CComClassFactory>>::CreateInstance(void	*,_GUID	const &,void * *)+17p
.text:5B8E1B57 56							       push    esi
.text:5B8E1B58 8B F1							       mov     esi, ecx
.text:5B8E1B5A 8D 4E 04							       lea     ecx, [esi+4]
.text:5B8E1B5D E8 39 FF	FF FF						       call    ??0?$CComObjectRootEx@VCComMultiThreadModel@ATL@@@ATL@@QAE@XZ ; ATL::CComObjectRootEx<ATL::CComMultiThreadModel>::CComObjectRootEx<ATL::CComMultiThreadModel>(void)
.text:5B8E1B62 C7 06 0C	12 8E 5B					       mov     dword ptr [esi],	offset ??_7CComClassFactory@ATL@@6B@ ; const ATL::CComClassFactory::`vftable'
.text:5B8E1B68 8B C6							       mov     eax, esi
.text:5B8E1B6A 5E							       pop     esi
.text:5B8E1B6B C3							       retn
.text:5B8E1B6B						       ??0CComClassFactory@ATL@@QAE@XZ endp
.text:5B8E1B6B
.text:5B8E1B6C
.text:5B8E1B6C						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1B6C
.text:5B8E1B6C
.text:5B8E1B6C						       ; int __thiscall	ATL::CComClassFactory::~CComClassFactory(ATL::CComClassFactory *__hidden this)
.text:5B8E1B6C						       ??1CComClassFactory@ATL@@QAE@XZ proc near
.text:5B8E1B6C											       ; CODE XREF: ATL::CComObjectNoLock<ATL::CComClassFactory>::`scalar deleting destructor'(uint)+10p
.text:5B8E1B6C 8B C1							       mov     eax, ecx
.text:5B8E1B6E 83 C1 04							       add     ecx, 4
.text:5B8E1B71 F7 D8							       neg     eax
.text:5B8E1B73 1B C0							       sbb     eax, eax
.text:5B8E1B75 23 C1							       and     eax, ecx
.text:5B8E1B77 83 C0 04							       add     eax, 4
.text:5B8E1B7A 50							       push    eax	       ; lpCriticalSection
.text:5B8E1B7B FF 15 94	10 8E 5B					       call    ds:__imp__DeleteCriticalSection@4 ; DeleteCriticalSection(x)
.text:5B8E1B81 C3							       retn
.text:5B8E1B81						       ??1CComClassFactory@ATL@@QAE@XZ endp
.text:5B8E1B81
.text:5B8E1B82
.text:5B8E1B82						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1B82
.text:5B8E1B82
.text:5B8E1B82						       ; int __thiscall	ATL::CComControlBase::CComControlBase(ATL::CComControlBase *this, HWND *)
.text:5B8E1B82						       ??0CComControlBase@ATL@@QAE@AAPAUHWND__@@@Z proc	near
.text:5B8E1B82											       ; CODE XREF: ATL::CComControl<CTrialEnd>::CComControl<CTrialEnd>(void)+7p
.text:5B8E1B82
.text:5B8E1B82						       arg_0	       = dword ptr  4
.text:5B8E1B82
.text:5B8E1B82 8B D1							       mov     edx, ecx
.text:5B8E1B84 33 C0							       xor     eax, eax
.text:5B8E1B86 89 42 04							       mov     [edx+4],	eax
.text:5B8E1B89 89 42 08							       mov     [edx+8],	eax
.text:5B8E1B8C 89 42 0C							       mov     [edx+0Ch], eax
.text:5B8E1B8F 89 42 10							       mov     [edx+10h], eax
.text:5B8E1B92 89 42 14							       mov     [edx+14h], eax
.text:5B8E1B95 57							       push    edi
.text:5B8E1B96 89 42 18							       mov     [edx+18h], eax
.text:5B8E1B99 6A 12							       push    12h
.text:5B8E1B9B 59							       pop     ecx
.text:5B8E1B9C 8B FA							       mov     edi, edx
.text:5B8E1B9E F3 AB							       rep stosd
.text:5B8E1BA0 8B 44 24	08						       mov     eax, [esp+4+arg_0]
.text:5B8E1BA4 89 42 3C							       mov     [edx+3Ch], eax
.text:5B8E1BA7 B8 D8 13	00 00						       mov     eax, 13D8h
.text:5B8E1BAC 89 42 24							       mov     [edx+24h], eax
.text:5B8E1BAF 89 42 28							       mov     [edx+28h], eax
.text:5B8E1BB2 89 42 1C							       mov     [edx+1Ch], eax
.text:5B8E1BB5 89 42 20							       mov     [edx+20h], eax
.text:5B8E1BB8 8B C2							       mov     eax, edx
.text:5B8E1BBA 5F							       pop     edi
.text:5B8E1BBB C2 04 00							       retn    4
.text:5B8E1BBB						       ??0CComControlBase@ATL@@QAE@AAPAUHWND__@@@Z endp
.text:5B8E1BBB
.text:5B8E1BBE
.text:5B8E1BBE						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1BBE
.text:5B8E1BBE
.text:5B8E1BBE						       ; int __thiscall	ATL::CComControlBase::~CComControlBase(ATL::CComControlBase *__hidden this)
.text:5B8E1BBE						       ??1CComControlBase@ATL@@QAE@XZ proc near
.text:5B8E1BBE											       ; CODE XREF: ATL::CComControl<CTrialEnd>::~CComControl<CTrialEnd>(void)+17j
.text:5B8E1BBE 56							       push    esi
.text:5B8E1BBF 8B F1							       mov     esi, ecx
.text:5B8E1BC1 8B 46 3C							       mov     eax, [esi+3Ch]
.text:5B8E1BC4 8B 00							       mov     eax, [eax]
.text:5B8E1BC6 85 C0							       test    eax, eax
.text:5B8E1BC8 74 07							       jz      short loc_5B8E1BD1
.text:5B8E1BCA 50							       push    eax	       ; hWnd
.text:5B8E1BCB FF 15 60	11 8E 5B					       call    ds:__imp__DestroyWindow@4 ; DestroyWindow(x)
.text:5B8E1BD1
.text:5B8E1BD1						       loc_5B8E1BD1:			       ; CODE XREF: ATL::CComControlBase::~CComControlBase(void)+Aj
.text:5B8E1BD1 8B 46 18							       mov     eax, [esi+18h]
.text:5B8E1BD4 85 C0							       test    eax, eax
.text:5B8E1BD6 74 06							       jz      short loc_5B8E1BDE
.text:5B8E1BD8 8B 08							       mov     ecx, [eax]
.text:5B8E1BDA 50							       push    eax
.text:5B8E1BDB FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E1BDE
.text:5B8E1BDE						       loc_5B8E1BDE:			       ; CODE XREF: ATL::CComControlBase::~CComControlBase(void)+18j
.text:5B8E1BDE 8B 46 14							       mov     eax, [esi+14h]
.text:5B8E1BE1 85 C0							       test    eax, eax
.text:5B8E1BE3 74 06							       jz      short loc_5B8E1BEB
.text:5B8E1BE5 8B 08							       mov     ecx, [eax]
.text:5B8E1BE7 50							       push    eax
.text:5B8E1BE8 FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E1BEB
.text:5B8E1BEB						       loc_5B8E1BEB:			       ; CODE XREF: ATL::CComControlBase::~CComControlBase(void)+25j
.text:5B8E1BEB 8B 46 10							       mov     eax, [esi+10h]
.text:5B8E1BEE 85 C0							       test    eax, eax
.text:5B8E1BF0 74 06							       jz      short loc_5B8E1BF8
.text:5B8E1BF2 8B 08							       mov     ecx, [eax]
.text:5B8E1BF4 50							       push    eax
.text:5B8E1BF5 FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E1BF8
.text:5B8E1BF8						       loc_5B8E1BF8:			       ; CODE XREF: ATL::CComControlBase::~CComControlBase(void)+32j
.text:5B8E1BF8 8B 46 0C							       mov     eax, [esi+0Ch]
.text:5B8E1BFB 85 C0							       test    eax, eax
.text:5B8E1BFD 74 06							       jz      short loc_5B8E1C05
.text:5B8E1BFF 8B 08							       mov     ecx, [eax]
.text:5B8E1C01 50							       push    eax
.text:5B8E1C02 FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E1C05
.text:5B8E1C05						       loc_5B8E1C05:			       ; CODE XREF: ATL::CComControlBase::~CComControlBase(void)+3Fj
.text:5B8E1C05 8B 46 08							       mov     eax, [esi+8]
.text:5B8E1C08 85 C0							       test    eax, eax
.text:5B8E1C0A 74 06							       jz      short loc_5B8E1C12
.text:5B8E1C0C 8B 08							       mov     ecx, [eax]
.text:5B8E1C0E 50							       push    eax
.text:5B8E1C0F FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E1C12
.text:5B8E1C12						       loc_5B8E1C12:			       ; CODE XREF: ATL::CComControlBase::~CComControlBase(void)+4Cj
.text:5B8E1C12 8B 76 04							       mov     esi, [esi+4]
.text:5B8E1C15 85 F6							       test    esi, esi
.text:5B8E1C17 74 06							       jz      short loc_5B8E1C1F
.text:5B8E1C19 8B 06							       mov     eax, [esi]
.text:5B8E1C1B 56							       push    esi
.text:5B8E1C1C FF 50 08							       call    dword ptr [eax+8]
.text:5B8E1C1F
.text:5B8E1C1F						       loc_5B8E1C1F:			       ; CODE XREF: ATL::CComControlBase::~CComControlBase(void)+59j
.text:5B8E1C1F 5E							       pop     esi
.text:5B8E1C20 C3							       retn
.text:5B8E1C20						       ??1CComControlBase@ATL@@QAE@XZ endp
.text:5B8E1C20
.text:5B8E1C21
.text:5B8E1C21						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1C21
.text:5B8E1C21
.text:5B8E1C21						       ; public: virtual unsigned long __stdcall ATL::CComObjectNoLock<class ATL::CComClassFactory>::AddRef(void)
.text:5B8E1C21						       ?AddRef@?$CComObjectNoLock@VCComClassFactory@ATL@@@ATL@@UAGKXZ proc near
.text:5B8E1C21											       ; DATA XREF: .text:5B8E1224o
.text:5B8E1C21
.text:5B8E1C21						       arg_0	       = dword ptr  4
.text:5B8E1C21
.text:5B8E1C21 8B 44 24	04						       mov     eax, [esp+arg_0]
.text:5B8E1C25 83 C0 04							       add     eax, 4
.text:5B8E1C28 50							       push    eax	       ; lpAddend
.text:5B8E1C29 FF 15 90	10 8E 5B					       call    ds:__imp__InterlockedIncrement@4	; InterlockedIncrement(x)
.text:5B8E1C2F C2 04 00							       retn    4
.text:5B8E1C2F						       ?AddRef@?$CComObjectNoLock@VCComClassFactory@ATL@@@ATL@@UAGKXZ endp
.text:5B8E1C2F
.text:5B8E1C32
.text:5B8E1C32						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1C32
.text:5B8E1C32
.text:5B8E1C32						       ; int __stdcall ATL::CComObjectNoLock<ATL::CComClassFactory>::QueryInterface(void *, struct _GUID *, void **)
.text:5B8E1C32						       ?QueryInterface@?$CComObjectNoLock@VCComClassFactory@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z proc near
.text:5B8E1C32											       ; DATA XREF: .text:const	ATL::CComObjectNoLock<ATL::CComClassFactory>::`vftable'o
.text:5B8E1C32
.text:5B8E1C32						       arg_0	       = dword ptr  4
.text:5B8E1C32						       arg_4	       = dword ptr  8
.text:5B8E1C32						       arg_8	       = dword ptr  0Ch
.text:5B8E1C32
.text:5B8E1C32 FF 74 24	0C						       push    [esp+arg_8]     ; void **
.text:5B8E1C36 FF 74 24	0C						       push    [esp+4+arg_4]   ; struct	_GUID *
.text:5B8E1C3A 68 34 12	8E 5B						       push    offset ?_entries@?1??_GetEntries@CComClassFactory@ATL@@SGPBU_ATL_INTMAP_ENTRY@3@XZ@4QBU43@B ; struct ATL::_ATL_INTMAP_ENTRY *
.text:5B8E1C3F FF 74 24	10						       push    [esp+0Ch+arg_0] ; void *
.text:5B8E1C43 E8 21 18	00 00						       call    ?AtlInternalQueryInterface@ATL@@YGJPAXPBU_ATL_INTMAP_ENTRY@1@ABU_GUID@@PAPAX@Z ;	ATL::AtlInternalQueryInterface(void *,ATL::_ATL_INTMAP_ENTRY const *,_GUID const &,void	* *)
.text:5B8E1C48 C2 0C 00							       retn    0Ch
.text:5B8E1C48						       ?QueryInterface@?$CComObjectNoLock@VCComClassFactory@ATL@@@ATL@@UAGJABU_GUID@@PAPAX@Z endp
.text:5B8E1C48
.text:5B8E1C4B
.text:5B8E1C4B						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1C4B
.text:5B8E1C4B
.text:5B8E1C4B						       ; int __thiscall	ATL::CComControl<CTrialEnd>::~CComControl<CTrialEnd>(ATL::CComControlBase *this)
.text:5B8E1C4B						       ??1?$CComControl@VCTrialEnd@@@ATL@@QAE@XZ proc near
.text:5B8E1C4B											       ; CODE XREF: CTrialEnd::~CTrialEnd(void)+10j
.text:5B8E1C4B 56							       push    esi
.text:5B8E1C4C 8B F1							       mov     esi, ecx
.text:5B8E1C4E F7 D9							       neg     ecx
.text:5B8E1C50 1B C9							       sbb     ecx, ecx
.text:5B8E1C52 8D 46 48							       lea     eax, [esi+48h]
.text:5B8E1C55 23 C8							       and     ecx, eax
.text:5B8E1C57 83 C1 14							       add     ecx, 14h	       ; this
.text:5B8E1C5A E8 50 FE	FF FF						       call    ??1CDynamicStdCallThunk@ATL@@QAE@XZ ; ATL::CDynamicStdCallThunk::~CDynamicStdCallThunk(void)
.text:5B8E1C5F 8B CE							       mov     ecx, esi	       ; this
.text:5B8E1C61 5E							       pop     esi
.text:5B8E1C62 E9 57 FF	FF FF						       jmp     ??1CComControlBase@ATL@@QAE@XZ ;	ATL::CComControlBase::~CComControlBase(void)
.text:5B8E1C62						       ??1?$CComControl@VCTrialEnd@@@ATL@@QAE@XZ endp
.text:5B8E1C62
.text:5B8E1C67
.text:5B8E1C67						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1C67
.text:5B8E1C67
.text:5B8E1C67						       ; public: __thiscall ATL::CComControl<class CTrialEnd>::CComControl<class CTrialEnd>(void)
.text:5B8E1C67						       ??0?$CComControl@VCTrialEnd@@@ATL@@QAE@XZ proc near
.text:5B8E1C67											       ; CODE XREF: CTrialEnd::CTrialEnd(void)+Ap
.text:5B8E1C67 56							       push    esi
.text:5B8E1C68 8B F1							       mov     esi, ecx
.text:5B8E1C6A 8D 46 4C							       lea     eax, [esi+4Ch]
.text:5B8E1C6D 50							       push    eax	       ; HWND *
.text:5B8E1C6E E8 0F FF	FF FF						       call    ??0CComControlBase@ATL@@QAE@AAPAUHWND__@@@Z ; ATL::CComControlBase::CComControlBase(HWND__ * &)
.text:5B8E1C73 83 66 4C	00						       and     dword ptr [esi+4Ch], 0
.text:5B8E1C77 A1 64 11	8E 5B						       mov     eax, ds:__imp__DefWindowProcW@16	; DefWindowProcW(x,x,x,x)
.text:5B8E1C7C 83 66 5C	00						       and     dword ptr [esi+5Ch], 0
.text:5B8E1C80 89 46 60							       mov     [esi+60h], eax
.text:5B8E1C83 8B C6							       mov     eax, esi
.text:5B8E1C85 5E							       pop     esi
.text:5B8E1C86 C3							       retn
.text:5B8E1C86						       ??0?$CComControl@VCTrialEnd@@@ATL@@QAE@XZ endp
.text:5B8E1C86
.text:5B8E1C87
.text:5B8E1C87						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1C87
.text:5B8E1C87
.text:5B8E1C87						       ; int __thiscall	ATL::CComObjectNoLock<ATL::CComClassFactory>::`scalar deleting destructor'(void *, char)
.text:5B8E1C87						       ??_G?$CComObjectNoLock@VCComClassFactory@ATL@@@ATL@@QAEPAXI@Z proc near
.text:5B8E1C87											       ; CODE XREF: ATL::CComObjectNoLock<ATL::CComClassFactory>::Release(void)+1Ep
.text:5B8E1C87											       ; ATL::CComCreator<ATL::CComObjectNoLock<ATL::CComClassFactory>>::CreateInstance(void *,_GUID const &,void * *)+48p
.text:5B8E1C87
.text:5B8E1C87						       arg_0	       = byte ptr  4
.text:5B8E1C87
.text:5B8E1C87 56							       push    esi
.text:5B8E1C88 8B F1							       mov     esi, ecx
.text:5B8E1C8A C7 06 20	12 8E 5B					       mov     dword ptr [esi],	offset ??_7?$CComObjectNoLock@VCComClassFactory@ATL@@@ATL@@6B@ ; const ATL::CComObjectNoLock<ATL::CComClassFactory>::`vftable'
.text:5B8E1C90 C7 46 04	01 00 00 00					       mov     dword ptr [esi+4], 1
.text:5B8E1C97 E8 D0 FE	FF FF						       call    ??1CComClassFactory@ATL@@QAE@XZ ; ATL::CComClassFactory::~CComClassFactory(void)
.text:5B8E1C9C F6 44 24	08 01						       test    [esp+4+arg_0], 1
.text:5B8E1CA1 74 07							       jz      short loc_5B8E1CAA
.text:5B8E1CA3 56							       push    esi	       ; void *
.text:5B8E1CA4 E8 C3 3A	00 00						       call    ??3@YAXPAX@Z    ; operator delete(void *)
.text:5B8E1CA9 59							       pop     ecx
.text:5B8E1CAA
.text:5B8E1CAA						       loc_5B8E1CAA:			       ; CODE XREF: ATL::CComObjectNoLock<ATL::CComClassFactory>::`scalar deleting destructor'(uint)+1Aj
.text:5B8E1CAA 8B C6							       mov     eax, esi
.text:5B8E1CAC 5E							       pop     esi
.text:5B8E1CAD C2 04 00							       retn    4
.text:5B8E1CAD						       ??_G?$CComObjectNoLock@VCComClassFactory@ATL@@@ATL@@QAEPAXI@Z endp
.text:5B8E1CAD
.text:5B8E1CB0
.text:5B8E1CB0						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1CB0
.text:5B8E1CB0
.text:5B8E1CB0						       ; int __stdcall ATL::CComObjectNoLock<ATL::CComClassFactory>::Release(void *)
.text:5B8E1CB0						       ?Release@?$CComObjectNoLock@VCComClassFactory@ATL@@@ATL@@UAGKXZ proc near
.text:5B8E1CB0											       ; DATA XREF: .text:5B8E1228o
.text:5B8E1CB0
.text:5B8E1CB0						       arg_0	       = dword ptr  4
.text:5B8E1CB0
.text:5B8E1CB0 56							       push    esi
.text:5B8E1CB1 8B 74 24	08						       mov     esi, [esp+4+arg_0]
.text:5B8E1CB5 57							       push    edi
.text:5B8E1CB6 8D 46 04							       lea     eax, [esi+4]
.text:5B8E1CB9 50							       push    eax	       ; lpAddend
.text:5B8E1CBA FF 15 8C	10 8E 5B					       call    ds:__imp__InterlockedDecrement@4	; InterlockedDecrement(x)
.text:5B8E1CC0 8B F8							       mov     edi, eax
.text:5B8E1CC2 85 FF							       test    edi, edi
.text:5B8E1CC4 75 0D							       jnz     short loc_5B8E1CD3
.text:5B8E1CC6 85 F6							       test    esi, esi
.text:5B8E1CC8 74 09							       jz      short loc_5B8E1CD3
.text:5B8E1CCA 6A 01							       push    1	       ; char
.text:5B8E1CCC 8B CE							       mov     ecx, esi	       ; void *
.text:5B8E1CCE E8 B4 FF	FF FF						       call    ??_G?$CComObjectNoLock@VCComClassFactory@ATL@@@ATL@@QAEPAXI@Z ; ATL::CComObjectNoLock<ATL::CComClassFactory>::`scalar deleting destructor'(uint)
.text:5B8E1CD3
.text:5B8E1CD3						       loc_5B8E1CD3:			       ; CODE XREF: ATL::CComObjectNoLock<ATL::CComClassFactory>::Release(void)+14j
.text:5B8E1CD3											       ; ATL::CComObjectNoLock<ATL::CComClassFactory>::Release(void)+18j
.text:5B8E1CD3 8B C7							       mov     eax, edi
.text:5B8E1CD5 5F							       pop     edi
.text:5B8E1CD6 5E							       pop     esi
.text:5B8E1CD7 C2 04 00							       retn    4
.text:5B8E1CD7						       ?Release@?$CComObjectNoLock@VCComClassFactory@ATL@@@ATL@@UAGKXZ endp
.text:5B8E1CD7
.text:5B8E1CDA
.text:5B8E1CDA						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1CDA
.text:5B8E1CDA
.text:5B8E1CDA						       ; int __thiscall	CTrialEnd::~CTrialEnd(CTrialEnd	*this)
.text:5B8E1CDA						       ??1CTrialEnd@@QAE@XZ proc near	       ; CODE XREF: ATL::CComObject<CTrialEnd>::~CComObject<CTrialEnd>(void)+63j
.text:5B8E1CDA											       ; ATL::CComAggObject<CTrialEnd>::~CComAggObject<CTrialEnd>(void)+1Fj
.text:5B8E1CDA 56							       push    esi
.text:5B8E1CDB 8B F1							       mov     esi, ecx
.text:5B8E1CDD B9 38 70	8E 5B						       mov     ecx, offset ?_tih@?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A ; this
.text:5B8E1CE2 E8 99 13	00 00						       call    ?Release@CComTypeInfoHolder@ATL@@QAEXXZ ; ATL::CComTypeInfoHolder::Release(void)
.text:5B8E1CE7 8B CE							       mov     ecx, esi	       ; this
.text:5B8E1CE9 5E							       pop     esi
.text:5B8E1CEA E9 5C FF	FF FF						       jmp     ??1?$CComControl@VCTrialEnd@@@ATL@@QAE@XZ ; ATL::CComControl<CTrialEnd>::~CComControl<CTrialEnd>(void)
.text:5B8E1CEA						       ??1CTrialEnd@@QAE@XZ endp
.text:5B8E1CEA
.text:5B8E1CEF
.text:5B8E1CEF						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1CEF
.text:5B8E1CEF
.text:5B8E1CEF						       ; public: __thiscall CTrialEnd::CTrialEnd(void)
.text:5B8E1CEF						       ??0CTrialEnd@@QAE@XZ proc near	       ; CODE XREF: ATL::CComObject<CTrialEnd>::CComObject<CTrialEnd>(void *)+3p
.text:5B8E1CEF											       ; ATL::CComContainedObject<CTrialEnd>::CComContainedObject<CTrialEnd>(void *)+3p
.text:5B8E1CEF 56							       push    esi
.text:5B8E1CF0 8B F1							       mov     esi, ecx
.text:5B8E1CF2 83 A6 88	00 00 00 00					       and     dword ptr [esi+88h], 0
.text:5B8E1CF9 E8 69 FF	FF FF						       call    ??0?$CComControl@VCTrialEnd@@@ATL@@QAE@XZ ; ATL::CComControl<CTrialEnd>::CComControl<CTrialEnd>(void)
.text:5B8E1CFE B9 38 70	8E 5B						       mov     ecx, offset ?_tih@?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A ; this
.text:5B8E1D03 E8 5B 13	00 00						       call    ?AddRef@CComTypeInfoHolder@ATL@@QAEXXZ ;	ATL::CComTypeInfoHolder::AddRef(void)
.text:5B8E1D08 83 A6 84	00 00 00 00					       and     dword ptr [esi+84h], 0
.text:5B8E1D0F 8B C6							       mov     eax, esi
.text:5B8E1D11 5E							       pop     esi
.text:5B8E1D12 C3							       retn
.text:5B8E1D12						       ??0CTrialEnd@@QAE@XZ endp
.text:5B8E1D12
.text:5B8E1D13
.text:5B8E1D13						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1D13
.text:5B8E1D13
.text:5B8E1D13						       ; public: static	long __stdcall ATL::CComCreator<class ATL::CComObjectNoLock<class ATL::CComClassFactory>>::CreateInstance(void *, struct _GUID const &,	void * *)
.text:5B8E1D13						       ?CreateInstance@?$CComCreator@V?$CComObjectNoLock@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z proc near
.text:5B8E1D13											       ; DATA XREF: .data:5B8E7008o
.text:5B8E1D13
.text:5B8E1D13						       arg_0	       = dword ptr  4
.text:5B8E1D13						       arg_4	       = dword ptr  8
.text:5B8E1D13						       arg_8	       = dword ptr  0Ch
.text:5B8E1D13
.text:5B8E1D13 56							       push    esi
.text:5B8E1D14 57							       push    edi
.text:5B8E1D15 6A 24							       push    24h	       ; unsigned int
.text:5B8E1D17 BF 0E 00	07 80						       mov     edi, 8007000Eh
.text:5B8E1D1C E8 51 3A	00 00						       call    ??2@YAPAXI@Z    ; operator new(uint)
.text:5B8E1D21 8B F0							       mov     esi, eax
.text:5B8E1D23 85 F6							       test    esi, esi
.text:5B8E1D25 59							       pop     ecx
.text:5B8E1D26 74 0F							       jz      short loc_5B8E1D37
.text:5B8E1D28 8B CE							       mov     ecx, esi	       ; this
.text:5B8E1D2A E8 28 FE	FF FF						       call    ??0CComClassFactory@ATL@@QAE@XZ ; ATL::CComClassFactory::CComClassFactory(void)
.text:5B8E1D2F C7 06 20	12 8E 5B					       mov     dword ptr [esi],	offset ??_7?$CComObjectNoLock@VCComClassFactory@ATL@@@ATL@@6B@ ; const ATL::CComObjectNoLock<ATL::CComClassFactory>::`vftable'
.text:5B8E1D35 EB 02							       jmp     short loc_5B8E1D39
.text:5B8E1D37						       ; ---------------------------------------------------------------------------
.text:5B8E1D37
.text:5B8E1D37						       loc_5B8E1D37:			       ; CODE XREF: ATL::CComCreator<ATL::CComObjectNoLock<ATL::CComClassFactory>>::CreateInstance(void	*,_GUID	const &,void * *)+13j
.text:5B8E1D37 33 F6							       xor     esi, esi
.text:5B8E1D39
.text:5B8E1D39						       loc_5B8E1D39:			       ; CODE XREF: ATL::CComCreator<ATL::CComObjectNoLock<ATL::CComClassFactory>>::CreateInstance(void	*,_GUID	const &,void * *)+22j
.text:5B8E1D39 85 F6							       test    esi, esi
.text:5B8E1D3B 74 23							       jz      short loc_5B8E1D60
.text:5B8E1D3D FF 74 24	14						       push    [esp+8+arg_8]
.text:5B8E1D41 8B 44 24	10						       mov     eax, [esp+0Ch+arg_0]
.text:5B8E1D45 FF 74 24	14						       push    [esp+0Ch+arg_4]
.text:5B8E1D49 89 46 20							       mov     [esi+20h], eax
.text:5B8E1D4C 8B 06							       mov     eax, [esi]
.text:5B8E1D4E 56							       push    esi
.text:5B8E1D4F FF 10							       call    dword ptr [eax]
.text:5B8E1D51 8B F8							       mov     edi, eax
.text:5B8E1D53 85 FF							       test    edi, edi
.text:5B8E1D55 74 09							       jz      short loc_5B8E1D60
.text:5B8E1D57 6A 01							       push    1	       ; char
.text:5B8E1D59 8B CE							       mov     ecx, esi	       ; void *
.text:5B8E1D5B E8 27 FF	FF FF						       call    ??_G?$CComObjectNoLock@VCComClassFactory@ATL@@@ATL@@QAEPAXI@Z ; ATL::CComObjectNoLock<ATL::CComClassFactory>::`scalar deleting destructor'(uint)
.text:5B8E1D60
.text:5B8E1D60						       loc_5B8E1D60:			       ; CODE XREF: ATL::CComCreator<ATL::CComObjectNoLock<ATL::CComClassFactory>>::CreateInstance(void	*,_GUID	const &,void * *)+28j
.text:5B8E1D60											       ; ATL::CComCreator<ATL::CComObjectNoLock<ATL::CComClassFactory>>::CreateInstance(void *,_GUID const &,void * *)+42j
.text:5B8E1D60 8B C7							       mov     eax, edi
.text:5B8E1D62 5F							       pop     edi
.text:5B8E1D63 5E							       pop     esi
.text:5B8E1D64 C2 0C 00							       retn    0Ch
.text:5B8E1D64						       ?CreateInstance@?$CComCreator@V?$CComObjectNoLock@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z endp
.text:5B8E1D64
.text:5B8E1D67
.text:5B8E1D67						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1D67
.text:5B8E1D67
.text:5B8E1D67						       ; public: __thiscall ATL::CComObject<class CTrialEnd>::CComObject<class CTrialEnd>(void *)
.text:5B8E1D67						       ??0?$CComObject@VCTrialEnd@@@ATL@@QAE@PAX@Z proc	near
.text:5B8E1D67											       ; CODE XREF: ATL::CComCreator<ATL::CComObject<CTrialEnd>>::CreateInstance(void *,_GUID const &,void * *)+1Cp
.text:5B8E1D67 56							       push    esi
.text:5B8E1D68 8B F1							       mov     esi, ecx
.text:5B8E1D6A E8 80 FF	FF FF						       call    ??0CTrialEnd@@QAE@XZ ; CTrialEnd::CTrialEnd(void)
.text:5B8E1D6F 68 EC 70	8E 5B						       push    offset Addend   ; lpAddend
.text:5B8E1D74 C7 06 B4	13 8E 5B					       mov     dword ptr [esi],	offset ??_7?$CComContainedObject@VCTrialEnd@@@ATL@@6BCComControlBase@1@@ ; const ATL::CComContainedObject<CTrialEnd>::`vftable'{for `ATL::CComControlBase'}
.text:5B8E1D7A C7 46 48	B0 13 8E 5B					       mov     dword ptr [esi+48h], offset ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$CWindowImpl@VCTrialEnd@@@1@@ ; const ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::CWindowImpl<CTrialEnd>'}
.text:5B8E1D81 C7 46 64	90 13 8E 5B					       mov     dword ptr [esi+64h], offset ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@ ; const ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IDispatchImpl<ITrialEnd,&_GUID const IID_ITrialEnd,&_GUID const LIBID_TRIALOCLib,1,0,ATL::CComTypeInfoHolder>'}
.text:5B8E1D88 C7 46 68	6C 13 8E 5B					       mov     dword ptr [esi+68h], offset ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IPersistStreamInitImpl@VCTrialEnd@@@1@@ ; const ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IPersistStreamInitImpl<CTrialEnd>'}
.text:5B8E1D8F C7 46 6C	50 13 8E 5B					       mov     dword ptr [esi+6Ch], offset ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IOleControlImpl@VCTrialEnd@@@1@@ ; const ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IOleControlImpl<CTrialEnd>'}
.text:5B8E1D96 C7 46 70	F0 12 8E 5B					       mov     dword ptr [esi+70h], offset ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IOleObjectImpl@VCTrialEnd@@@1@@ ; const ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IOleObjectImpl<CTrialEnd>'}
.text:5B8E1D9D C7 46 74	C8 12 8E 5B					       mov     dword ptr [esi+74h], offset ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@1@@ ; const ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IOleInPlaceActiveObjectImpl<CTrialEnd>'}
.text:5B8E1DA4 C7 46 78	8C 12 8E 5B					       mov     dword ptr [esi+78h], offset ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IViewObjectExImpl@VCTrialEnd@@@1@@ ; const ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IViewObjectExImpl<CTrialEnd>'}
.text:5B8E1DAB C7 46 7C	60 12 8E 5B					       mov     dword ptr [esi+7Ch], offset ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@1@@ ; const ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>'}
.text:5B8E1DB2 C7 86 80	00 00 00 4C 12 8E 5B				       mov     dword ptr [esi+80h], offset ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IObjectSafetyImpl@VCTrialEnd@@@1@@ ; const ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IObjectSafetyImpl<CTrialEnd>'}
.text:5B8E1DBC FF 15 90	10 8E 5B					       call    ds:__imp__InterlockedIncrement@4	; InterlockedIncrement(x)
.text:5B8E1DC2 8B C6							       mov     eax, esi
.text:5B8E1DC4 5E							       pop     esi
.text:5B8E1DC5 C2 04 00							       retn    4
.text:5B8E1DC5						       ??0?$CComObject@VCTrialEnd@@@ATL@@QAE@PAX@Z endp
.text:5B8E1DC5
.text:5B8E1DC8
.text:5B8E1DC8						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1DC8
.text:5B8E1DC8
.text:5B8E1DC8						       ; public: virtual long __stdcall	ATL::IDispatchImpl<struct ITrialEnd, &struct _GUID const IID_ITrialEnd,	&struct	_GUID const LIBID_TRIALOCLib, 1, 0, class ATL::CComTypeInfoHolder>::GetTypeInfoCount(unsigned int *)
.text:5B8E1DC8						       ?GetTypeInfoCount@?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAI@Z proc	near
.text:5B8E1DC8											       ; DATA XREF: .text:5B8E139Co
.text:5B8E1DC8											       ; .text:5B8E15CCo
.text:5B8E1DC8
.text:5B8E1DC8						       arg_4	       = dword ptr  8
.text:5B8E1DC8
.text:5B8E1DC8 8B 44 24	08						       mov     eax, [esp+arg_4]
.text:5B8E1DCC C7 00 01	00 00 00					       mov     dword ptr [eax],	1
.text:5B8E1DD2 33 C0							       xor     eax, eax
.text:5B8E1DD4 C2 08 00							       retn    8
.text:5B8E1DD4						       ?GetTypeInfoCount@?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJPAI@Z endp
.text:5B8E1DD4
.text:5B8E1DD7
.text:5B8E1DD7						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1DD7
.text:5B8E1DD7
.text:5B8E1DD7						       ; int __stdcall ATL::IDispatchImpl<ITrialEnd,&_GUID const IID_ITrialEnd,&_GUID const LIBID_TRIALOCLib,1,0,ATL::CComTypeInfoHolder>::GetTypeInfo(int, unsigned int, LCID lcid, struct ITypeInfo **)
.text:5B8E1DD7						       ?GetTypeInfo@?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJIKPAPAUITypeInfo@@@Z proc near
.text:5B8E1DD7											       ; DATA XREF: .text:5B8E13A0o
.text:5B8E1DD7											       ; .text:5B8E15D0o
.text:5B8E1DD7
.text:5B8E1DD7						       arg_4	       = dword ptr  8
.text:5B8E1DD7						       lcid	       = dword ptr  0Ch
.text:5B8E1DD7						       arg_C	       = dword ptr  10h
.text:5B8E1DD7
.text:5B8E1DD7 FF 74 24	10						       push    [esp+arg_C]     ; struct	ITypeInfo **
.text:5B8E1DDB B9 38 70	8E 5B						       mov     ecx, offset ?_tih@?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A ; this
.text:5B8E1DE0 FF 74 24	10						       push    [esp+4+lcid]    ; lcid
.text:5B8E1DE4 FF 74 24	10						       push    [esp+8+arg_4]   ; unsigned int
.text:5B8E1DE8 E8 57 13	00 00						       call    ?GetTypeInfo@CComTypeInfoHolder@ATL@@QAEJIKPAPAUITypeInfo@@@Z ; ATL::CComTypeInfoHolder::GetTypeInfo(uint,ulong,ITypeInfo * *)
.text:5B8E1DED C2 10 00							       retn    10h
.text:5B8E1DED						       ?GetTypeInfo@?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJIKPAPAUITypeInfo@@@Z endp
.text:5B8E1DED
.text:5B8E1DF0
.text:5B8E1DF0						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1DF0
.text:5B8E1DF0						       ; Attributes: bp-based frame
.text:5B8E1DF0
.text:5B8E1DF0						       ; int __stdcall ATL::IDispatchImpl<ITrialEnd,&_GUID const IID_ITrialEnd,&_GUID const LIBID_TRIALOCLib,1,0,ATL::CComTypeInfoHolder>::GetIDsOfNames(int, struct _GUID *, unsigned __int16 **, unsigned int, LCID lcid, __int32 *)
.text:5B8E1DF0						       ?GetIDsOfNames@?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJABU_GUID@@PAPAGIKPAJ@Z proc near
.text:5B8E1DF0											       ; DATA XREF: .text:5B8E13A4o
.text:5B8E1DF0											       ; .text:5B8E15D4o
.text:5B8E1DF0
.text:5B8E1DF0						       arg_4	       = dword ptr  0Ch
.text:5B8E1DF0						       arg_8	       = dword ptr  10h
.text:5B8E1DF0						       arg_C	       = dword ptr  14h
.text:5B8E1DF0						       lcid	       = dword ptr  18h
.text:5B8E1DF0						       arg_14	       = dword ptr  1Ch
.text:5B8E1DF0
.text:5B8E1DF0 55							       push    ebp
.text:5B8E1DF1 8B EC							       mov     ebp, esp
.text:5B8E1DF3 FF 75 1C							       push    [ebp+arg_14]    ; __int32 *
.text:5B8E1DF6 B9 38 70	8E 5B						       mov     ecx, offset ?_tih@?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A ; this
.text:5B8E1DFB FF 75 18							       push    [ebp+lcid]      ; lcid
.text:5B8E1DFE FF 75 14							       push    [ebp+arg_C]     ; unsigned int
.text:5B8E1E01 FF 75 10							       push    [ebp+arg_8]     ; unsigned __int16 **
.text:5B8E1E04 FF 75 0C							       push    [ebp+arg_4]     ; struct	_GUID *
.text:5B8E1E07 E8 54 13	00 00						       call    ?GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPAGIKPAJ@Z ; ATL::CComTypeInfoHolder::GetIDsOfNames(_GUID	const &,ushort * *,uint,ulong,long *)
.text:5B8E1E0C 5D							       pop     ebp
.text:5B8E1E0D C2 18 00							       retn    18h
.text:5B8E1E0D						       ?GetIDsOfNames@?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJABU_GUID@@PAPAGIKPAJ@Z endp
.text:5B8E1E0D
.text:5B8E1E10
.text:5B8E1E10						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1E10
.text:5B8E1E10						       ; Attributes: bp-based frame
.text:5B8E1E10
.text:5B8E1E10						       ; public: virtual long __stdcall	ATL::IDispatchImpl<struct ITrialEnd, &struct _GUID const IID_ITrialEnd,	&struct	_GUID const LIBID_TRIALOCLib, 1, 0, class ATL::CComTypeInfoHolder>::Invoke(long, struct	_GUID const &, unsigned	long, unsigned short, struct tagDISPPARAMS *, struct tagVARIANT	*, struct tagEXCEPINFO *, unsigned int *)
.text:5B8E1E10						       ?Invoke@?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z	proc near
.text:5B8E1E10											       ; DATA XREF: .text:5B8E13A8o
.text:5B8E1E10											       ; .text:5B8E15D8o
.text:5B8E1E10 55							       push    ebp
.text:5B8E1E11 8B EC							       mov     ebp, esp
.text:5B8E1E13 5D							       pop     ebp
.text:5B8E1E14 B9 38 70	8E 5B						       mov     ecx, offset ?_tih@?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A ; this
.text:5B8E1E19 E9 7B 13	00 00						       jmp     ?Invoke@CComTypeInfoHolder@ATL@@QAEJPAUIDispatch@@JABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z ;	ATL::CComTypeInfoHolder::Invoke(IDispatch *,long,_GUID const &,ulong,ushort,tagDISPPARAMS *,tagVARIANT *,tagEXCEPINFO *,uint *)
.text:5B8E1E19						       ?Invoke@?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@UAGJJABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z	endp
.text:5B8E1E19
.text:5B8E1E1E
.text:5B8E1E1E						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1E1E
.text:5B8E1E1E
.text:5B8E1E1E						       ; public: virtual long __stdcall	ATL::IOleObjectImpl<class CTrialEnd>::InitFromData(struct IDataObject *, int, unsigned long)
.text:5B8E1E1E						       ?InitFromData@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAUIDataObject@@HK@Z proc near
.text:5B8E1E1E											       ; DATA XREF: .text:5B8E1310o
.text:5B8E1E1E											       ; .text:5B8E1314o ...
.text:5B8E1E1E B8 01 40	00 80						       mov     eax, 80004001h
.text:5B8E1E23 C2 10 00							       retn    10h
.text:5B8E1E23						       ?InitFromData@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAUIDataObject@@HK@Z endp
.text:5B8E1E23
.text:5B8E1E26
.text:5B8E1E26						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1E26
.text:5B8E1E26
.text:5B8E1E26						       ; public: virtual long __stdcall	ATL::IOleObjectImpl<class CTrialEnd>::IsUpToDate(void)
.text:5B8E1E26						       ?IsUpToDate@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJXZ proc near
.text:5B8E1E26											       ; DATA XREF: .text:5B8E1324o
.text:5B8E1E26											       ; .text:5B8E1328o ...
.text:5B8E1E26 33 C0							       xor     eax, eax
.text:5B8E1E28 C2 04 00							       retn    4
.text:5B8E1E28						       ?IsUpToDate@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJXZ endp
.text:5B8E1E28
.text:5B8E1E2B
.text:5B8E1E2B						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1E2B
.text:5B8E1E2B
.text:5B8E1E2B						       ; int __stdcall ATL::IOleObjectImpl<CTrialEnd>::SetExtent(int, unsigned __int32,	struct tagSIZE *)
.text:5B8E1E2B						       ?SetExtent@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAUtagSIZE@@@Z proc near
.text:5B8E1E2B											       ; DATA XREF: .text:5B8E1334o
.text:5B8E1E2B											       ; .text:5B8E1564o
.text:5B8E1E2B
.text:5B8E1E2B						       arg_0	       = dword ptr  4
.text:5B8E1E2B						       arg_4	       = dword ptr  8
.text:5B8E1E2B						       arg_8	       = dword ptr  0Ch
.text:5B8E1E2B
.text:5B8E1E2B 8B 4C 24	04						       mov     ecx, [esp+arg_0]
.text:5B8E1E2F FF 74 24	0C						       push    [esp+arg_8]     ; struct	tagSIZE	*
.text:5B8E1E33 8D 41 90							       lea     eax, [ecx-70h]
.text:5B8E1E36 FF 74 24	0C						       push    [esp+4+arg_4]   ; unsigned __int32
.text:5B8E1E3A F7 D9							       neg     ecx
.text:5B8E1E3C 1B C9							       sbb     ecx, ecx
.text:5B8E1E3E 23 C8							       and     ecx, eax	       ; this
.text:5B8E1E40 E8 5E 38	00 00						       call    ?IOleObject_SetExtent@CComControlBase@ATL@@QAEJKPAUtagSIZE@@@Z ;	ATL::CComControlBase::IOleObject_SetExtent(ulong,tagSIZE *)
.text:5B8E1E45 C2 0C 00							       retn    0Ch
.text:5B8E1E45						       ?SetExtent@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAUtagSIZE@@@Z endp
.text:5B8E1E45
.text:5B8E1E48
.text:5B8E1E48						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1E48
.text:5B8E1E48
.text:5B8E1E48						       ; public: virtual long __stdcall	ATL::IOleObjectImpl<class CTrialEnd>::GetExtent(unsigned long, struct tagSIZE *)
.text:5B8E1E48						       ?GetExtent@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAUtagSIZE@@@Z proc near
.text:5B8E1E48											       ; DATA XREF: .text:5B8E1338o
.text:5B8E1E48											       ; .text:5B8E1568o
.text:5B8E1E48
.text:5B8E1E48						       arg_0	       = dword ptr  4
.text:5B8E1E48						       arg_4	       = dword ptr  8
.text:5B8E1E48						       arg_8	       = dword ptr  0Ch
.text:5B8E1E48
.text:5B8E1E48 83 7C 24	08 01						       cmp     [esp+arg_4], 1
.text:5B8E1E4D 74 07							       jz      short loc_5B8E1E56
.text:5B8E1E4F B8 05 40	00 80						       mov     eax, 80004005h
.text:5B8E1E54 EB 2B							       jmp     short locret_5B8E1E81
.text:5B8E1E56						       ; ---------------------------------------------------------------------------
.text:5B8E1E56
.text:5B8E1E56						       loc_5B8E1E56:			       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::GetExtent(ulong,tagSIZE *)+5j
.text:5B8E1E56 8B 44 24	0C						       mov     eax, [esp+arg_8]
.text:5B8E1E5A 85 C0							       test    eax, eax
.text:5B8E1E5C 75 07							       jnz     short loc_5B8E1E65
.text:5B8E1E5E B8 03 40	00 80						       mov     eax, 80004003h
.text:5B8E1E63 EB 1C							       jmp     short locret_5B8E1E81
.text:5B8E1E65						       ; ---------------------------------------------------------------------------
.text:5B8E1E65
.text:5B8E1E65						       loc_5B8E1E65:			       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::GetExtent(ulong,tagSIZE *)+14j
.text:5B8E1E65 8B 4C 24	04						       mov     ecx, [esp+arg_0]
.text:5B8E1E69 8B D1							       mov     edx, ecx
.text:5B8E1E6B 83 C1 90							       add     ecx, 0FFFFFF90h
.text:5B8E1E6E F7 DA							       neg     edx
.text:5B8E1E70 1B D2							       sbb     edx, edx
.text:5B8E1E72 23 D1							       and     edx, ecx
.text:5B8E1E74 8B 4A 24							       mov     ecx, [edx+24h]
.text:5B8E1E77 89 08							       mov     [eax], ecx
.text:5B8E1E79 8B 4A 28							       mov     ecx, [edx+28h]
.text:5B8E1E7C 89 48 04							       mov     [eax+4],	ecx
.text:5B8E1E7F 33 C0							       xor     eax, eax
.text:5B8E1E81
.text:5B8E1E81						       locret_5B8E1E81:			       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::GetExtent(ulong,tagSIZE *)+Cj
.text:5B8E1E81											       ; ATL::IOleObjectImpl<CTrialEnd>::GetExtent(ulong,tagSIZE *)+1Bj
.text:5B8E1E81 C2 0C 00							       retn    0Ch
.text:5B8E1E81						       ?GetExtent@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAUtagSIZE@@@Z endp
.text:5B8E1E81
.text:5B8E1E84
.text:5B8E1E84						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1E84
.text:5B8E1E84
.text:5B8E1E84						       ; int __stdcall ATL::IOleObjectImpl<CTrialEnd>::Advise(int, struct IAdviseSink *, unsigned __int32 *)
.text:5B8E1E84						       ?Advise@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAUIAdviseSink@@PAK@Z proc near
.text:5B8E1E84											       ; DATA XREF: .text:5B8E133Co
.text:5B8E1E84											       ; .text:5B8E156Co
.text:5B8E1E84
.text:5B8E1E84						       arg_0	       = dword ptr  4
.text:5B8E1E84						       arg_4	       = dword ptr  8
.text:5B8E1E84						       arg_8	       = dword ptr  0Ch
.text:5B8E1E84
.text:5B8E1E84 8B 4C 24	04						       mov     ecx, [esp+arg_0]
.text:5B8E1E88 FF 74 24	0C						       push    [esp+arg_8]     ; unsigned __int32 *
.text:5B8E1E8C 8D 41 90							       lea     eax, [ecx-70h]
.text:5B8E1E8F FF 74 24	0C						       push    [esp+4+arg_4]   ; struct	IAdviseSink *
.text:5B8E1E93 F7 D9							       neg     ecx
.text:5B8E1E95 1B C9							       sbb     ecx, ecx
.text:5B8E1E97 23 C8							       and     ecx, eax	       ; this
.text:5B8E1E99 E8 30 2C	00 00						       call    ?IOleObject_Advise@CComControlBase@ATL@@QAEJPAUIAdviseSink@@PAK@Z ; ATL::CComControlBase::IOleObject_Advise(IAdviseSink *,ulong *)
.text:5B8E1E9E C2 0C 00							       retn    0Ch
.text:5B8E1E9E						       ?Advise@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAUIAdviseSink@@PAK@Z endp
.text:5B8E1E9E
.text:5B8E1EA1
.text:5B8E1EA1						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1EA1
.text:5B8E1EA1
.text:5B8E1EA1						       ; public: virtual long __stdcall	ATL::IOleInPlaceActiveObjectImpl<class CTrialEnd>::GetWindow(struct HWND__ * *)
.text:5B8E1EA1						       ?GetWindow@?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@ATL@@UAGJPAPAUHWND__@@@Z proc near
.text:5B8E1EA1											       ; DATA XREF: .text:5B8E12D4o
.text:5B8E1EA1											       ; .text:5B8E1504o
.text:5B8E1EA1
.text:5B8E1EA1						       arg_0	       = dword ptr  4
.text:5B8E1EA1						       arg_4	       = dword ptr  8
.text:5B8E1EA1
.text:5B8E1EA1 8B 4C 24	04						       mov     ecx, [esp+arg_0]
.text:5B8E1EA5 8D 41 8C							       lea     eax, [ecx-74h]
.text:5B8E1EA8 F7 D9							       neg     ecx
.text:5B8E1EAA 1B C9							       sbb     ecx, ecx
.text:5B8E1EAC 23 C8							       and     ecx, eax
.text:5B8E1EAE F6 41 45	01						       test    byte ptr	[ecx+45h], 1
.text:5B8E1EB2 B8 03 40	00 80						       mov     eax, 80004003h
.text:5B8E1EB7 74 05							       jz      short loc_5B8E1EBE
.text:5B8E1EB9 83 C0 02							       add     eax, 2
.text:5B8E1EBC EB 1B							       jmp     short locret_5B8E1ED9
.text:5B8E1EBE						       ; ---------------------------------------------------------------------------
.text:5B8E1EBE
.text:5B8E1EBE						       loc_5B8E1EBE:			       ; CODE XREF: ATL::IOleInPlaceActiveObjectImpl<CTrialEnd>::GetWindow(HWND__ * *)+16j
.text:5B8E1EBE 8B 54 24	08						       mov     edx, [esp+arg_4]
.text:5B8E1EC2 85 D2							       test    edx, edx
.text:5B8E1EC4 74 13							       jz      short locret_5B8E1ED9
.text:5B8E1EC6 8B 41 4C							       mov     eax, [ecx+4Ch]
.text:5B8E1EC9 89 02							       mov     [edx], eax
.text:5B8E1ECB F7 D8							       neg     eax
.text:5B8E1ECD 1B C0							       sbb     eax, eax
.text:5B8E1ECF 25 01 00	FF 7F						       and     eax, 7FFF0001h
.text:5B8E1ED4 05 FF FF	00 80						       add     eax, 8000FFFFh
.text:5B8E1ED9
.text:5B8E1ED9						       locret_5B8E1ED9:			       ; CODE XREF: ATL::IOleInPlaceActiveObjectImpl<CTrialEnd>::GetWindow(HWND__ * *)+1Bj
.text:5B8E1ED9											       ; ATL::IOleInPlaceActiveObjectImpl<CTrialEnd>::GetWindow(HWND__ * *)+23j
.text:5B8E1ED9 C2 08 00							       retn    8
.text:5B8E1ED9						       ?GetWindow@?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@ATL@@UAGJPAPAUHWND__@@@Z endp
.text:5B8E1ED9
.text:5B8E1EDC
.text:5B8E1EDC						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1EDC
.text:5B8E1EDC
.text:5B8E1EDC						       ; public: virtual long __stdcall	ATL::IOleInPlaceActiveObjectImpl<class CTrialEnd>::ResizeBorder(struct tagRECT const *,	struct IOleInPlaceUIWindow *, int)
.text:5B8E1EDC						       ?ResizeBorder@?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@ATL@@UAGJPBUtagRECT@@PAUIOleInPlaceUIWindow@@H@Z proc near
.text:5B8E1EDC											       ; DATA XREF: .text:5B8E12E8o
.text:5B8E1EDC											       ; .text:5B8E1518o
.text:5B8E1EDC 33 C0							       xor     eax, eax
.text:5B8E1EDE C2 10 00							       retn    10h
.text:5B8E1EDE						       ?ResizeBorder@?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@ATL@@UAGJPBUtagRECT@@PAUIOleInPlaceUIWindow@@H@Z endp
.text:5B8E1EDE
.text:5B8E1EE1
.text:5B8E1EE1						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1EE1
.text:5B8E1EE1						       ; Attributes: bp-based frame
.text:5B8E1EE1
.text:5B8E1EE1						       ; int __stdcall ATL::IViewObjectExImpl<CTrialEnd>::Draw(int, unsigned __int32, __int32, void *, struct tagDVTARGETDEVICE	*, HDC,	HDC, struct _RECTL *, struct _RECTL *, int, int)
.text:5B8E1EE1						       ?Draw@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@2PBU_RECTL@@3P6GHK@ZK@Z proc near
.text:5B8E1EE1											       ; DATA XREF: .text:5B8E1298o
.text:5B8E1EE1											       ; .text:5B8E14C8o
.text:5B8E1EE1
.text:5B8E1EE1						       arg_0	       = dword ptr  8
.text:5B8E1EE1						       arg_4	       = dword ptr  0Ch
.text:5B8E1EE1						       arg_8	       = dword ptr  10h
.text:5B8E1EE1						       arg_C	       = dword ptr  14h
.text:5B8E1EE1						       arg_10	       = dword ptr  18h
.text:5B8E1EE1						       arg_14	       = dword ptr  1Ch
.text:5B8E1EE1						       arg_18	       = dword ptr  20h
.text:5B8E1EE1						       arg_1C	       = dword ptr  24h
.text:5B8E1EE1						       arg_20	       = dword ptr  28h
.text:5B8E1EE1
.text:5B8E1EE1 55							       push    ebp
.text:5B8E1EE2 8B EC							       mov     ebp, esp
.text:5B8E1EE4 FF 75 28							       push    [ebp+arg_20]    ; struct	_RECTL *
.text:5B8E1EE7 8B 4D 08							       mov     ecx, [ebp+arg_0]
.text:5B8E1EEA FF 75 24							       push    [ebp+arg_1C]    ; struct	_RECTL *
.text:5B8E1EED 8D 41 88							       lea     eax, [ecx-78h]
.text:5B8E1EF0 FF 75 20							       push    [ebp+arg_18]    ; HDC
.text:5B8E1EF3 F7 D9							       neg     ecx
.text:5B8E1EF5 FF 75 1C							       push    [ebp+arg_14]    ; HDC
.text:5B8E1EF8 1B C9							       sbb     ecx, ecx
.text:5B8E1EFA FF 75 18							       push    [ebp+arg_10]    ; struct	tagDVTARGETDEVICE *
.text:5B8E1EFD 23 C8							       and     ecx, eax	       ; this
.text:5B8E1EFF FF 75 14							       push    [ebp+arg_C]     ; void *
.text:5B8E1F02 FF 75 10							       push    [ebp+arg_8]     ; __int32
.text:5B8E1F05 FF 75 0C							       push    [ebp+arg_4]     ; unsigned __int32
.text:5B8E1F08 E8 99 1A	00 00						       call    ?IViewObject_Draw@CComControlBase@ATL@@QAEJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@2PBU_RECTL@@3@Z ; ATL::CComControlBase::IViewObject_Draw(ulong,long,void	*,tagDVTARGETDEVICE *,HDC__ *,HDC__ *,_RECTL const *,_RECTL const *)
.text:5B8E1F0D 5D							       pop     ebp
.text:5B8E1F0E C2 2C 00							       retn    2Ch
.text:5B8E1F0E						       ?Draw@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@2PBU_RECTL@@3P6GHK@ZK@Z endp
.text:5B8E1F0E
.text:5B8E1F11
.text:5B8E1F11						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1F11
.text:5B8E1F11
.text:5B8E1F11						       ; public: virtual long __stdcall	ATL::IViewObjectExImpl<class CTrialEnd>::GetColorSet(unsigned long, long, void *, struct tagDVTARGETDEVICE *, struct HDC__ *, struct tagLOGPALETTE * *)
.text:5B8E1F11						       ?GetColorSet@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@PAPAUtagLOGPALETTE@@@Z proc near
.text:5B8E1F11											       ; DATA XREF: .text:5B8E129Co
.text:5B8E1F11											       ; .text:5B8E14CCo
.text:5B8E1F11 B8 01 40	00 80						       mov     eax, 80004001h
.text:5B8E1F16 C2 1C 00							       retn    1Ch
.text:5B8E1F16						       ?GetColorSet@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@PAPAUtagLOGPALETTE@@@Z endp
.text:5B8E1F16
.text:5B8E1F19
.text:5B8E1F19						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1F19
.text:5B8E1F19
.text:5B8E1F19						       ; public: virtual long __stdcall	ATL::IViewObjectExImpl<class CTrialEnd>::Freeze(unsigned long, long, void *, unsigned long *)
.text:5B8E1F19						       ?Freeze@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKJPAXPAK@Z proc near
.text:5B8E1F19											       ; DATA XREF: .text:5B8E12A0o
.text:5B8E1F19											       ; .text:5B8E14D0o
.text:5B8E1F19 B8 01 40	00 80						       mov     eax, 80004001h
.text:5B8E1F1E C2 14 00							       retn    14h
.text:5B8E1F1E						       ?Freeze@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKJPAXPAK@Z endp
.text:5B8E1F1E
.text:5B8E1F21
.text:5B8E1F21						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1F21
.text:5B8E1F21
.text:5B8E1F21						       ; public: virtual long __stdcall	ATL::IViewObjectExImpl<class CTrialEnd>::GetExtent(unsigned long, long,	struct tagDVTARGETDEVICE *, struct tagSIZE *)
.text:5B8E1F21						       ?GetExtent@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKJPAUtagDVTARGETDEVICE@@PAUtagSIZE@@@Z proc	near
.text:5B8E1F21											       ; DATA XREF: .text:5B8E12B0o
.text:5B8E1F21											       ; .text:5B8E14E0o
.text:5B8E1F21
.text:5B8E1F21						       arg_0	       = dword ptr  4
.text:5B8E1F21						       arg_10	       = dword ptr  14h
.text:5B8E1F21
.text:5B8E1F21 8B 44 24	04						       mov     eax, [esp+arg_0]
.text:5B8E1F25 8B C8							       mov     ecx, eax
.text:5B8E1F27 83 C0 88							       add     eax, 0FFFFFF88h
.text:5B8E1F2A F7 D9							       neg     ecx
.text:5B8E1F2C 1B C9							       sbb     ecx, ecx
.text:5B8E1F2E 23 C8							       and     ecx, eax
.text:5B8E1F30 8B 51 24							       mov     edx, [ecx+24h]
.text:5B8E1F33 8B 44 24	14						       mov     eax, [esp+arg_10]
.text:5B8E1F37 89 10							       mov     [eax], edx
.text:5B8E1F39 8B 49 28							       mov     ecx, [ecx+28h]
.text:5B8E1F3C 89 48 04							       mov     [eax+4],	ecx
.text:5B8E1F3F 33 C0							       xor     eax, eax
.text:5B8E1F41 C2 14 00							       retn    14h
.text:5B8E1F41						       ?GetExtent@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKJPAUtagDVTARGETDEVICE@@PAUtagSIZE@@@Z endp
.text:5B8E1F41
.text:5B8E1F44
.text:5B8E1F44						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1F44
.text:5B8E1F44
.text:5B8E1F44						       ; public: virtual long __stdcall	ATL::IOleObjectImpl<class CTrialEnd>::GetClipboardData(unsigned	long, struct IDataObject * *)
.text:5B8E1F44						       ?GetClipboardData@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAPAUIDataObject@@@Z proc near
.text:5B8E1F44											       ; DATA XREF: .text:5B8E12B4o
.text:5B8E1F44											       ; .text:5B8E130Co ...
.text:5B8E1F44 B8 01 40	00 80						       mov     eax, 80004001h
.text:5B8E1F49 C2 0C 00							       retn    0Ch
.text:5B8E1F49						       ?GetClipboardData@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAPAUIDataObject@@@Z endp
.text:5B8E1F49
.text:5B8E1F4C
.text:5B8E1F4C						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1F4C
.text:5B8E1F4C						       ; Attributes: bp-based frame
.text:5B8E1F4C
.text:5B8E1F4C						       ; int __stdcall ATL::IViewObjectExImpl<CTrialEnd>::QueryHitPoint(int, int, RECT *lprc, POINT pt,	int, int)
.text:5B8E1F4C						       ?QueryHitPoint@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKPBUtagRECT@@UtagPOINT@@JPAK@Z proc near
.text:5B8E1F4C											       ; DATA XREF: .text:5B8E12BCo
.text:5B8E1F4C											       ; .text:5B8E14ECo
.text:5B8E1F4C
.text:5B8E1F4C						       arg_4	       = dword ptr  0Ch
.text:5B8E1F4C						       lprc	       = dword ptr  10h
.text:5B8E1F4C						       pt	       = POINT ptr  14h
.text:5B8E1F4C						       arg_18	       = dword ptr  20h
.text:5B8E1F4C
.text:5B8E1F4C 55							       push    ebp
.text:5B8E1F4D 8B EC							       mov     ebp, esp
.text:5B8E1F4F 83 7D 0C	01						       cmp     [ebp+arg_4], 1
.text:5B8E1F53 75 1F							       jnz     short loc_5B8E1F74
.text:5B8E1F55 FF 75 18							       push    [ebp+pt.y]
.text:5B8E1F58 FF 75 14							       push    [ebp+pt.x]      ; pt
.text:5B8E1F5B FF 75 10							       push    [ebp+lprc]      ; lprc
.text:5B8E1F5E FF 15 5C	11 8E 5B					       call    ds:__imp__PtInRect@12 ; PtInRect(x,x,x)
.text:5B8E1F64 8B 4D 20							       mov     ecx, [ebp+arg_18]
.text:5B8E1F67 F7 D8							       neg     eax
.text:5B8E1F69 1B C0							       sbb     eax, eax
.text:5B8E1F6B 83 E0 03							       and     eax, 3
.text:5B8E1F6E 89 01							       mov     [ecx], eax
.text:5B8E1F70 33 C0							       xor     eax, eax
.text:5B8E1F72 EB 05							       jmp     short loc_5B8E1F79
.text:5B8E1F74						       ; ---------------------------------------------------------------------------
.text:5B8E1F74
.text:5B8E1F74						       loc_5B8E1F74:			       ; CODE XREF: ATL::IViewObjectExImpl<CTrialEnd>::QueryHitPoint(ulong,tagRECT const *,tagPOINT,long,ulong *)+7j
.text:5B8E1F74 B8 05 40	00 80						       mov     eax, 80004005h
.text:5B8E1F79
.text:5B8E1F79						       loc_5B8E1F79:			       ; CODE XREF: ATL::IViewObjectExImpl<CTrialEnd>::QueryHitPoint(ulong,tagRECT const *,tagPOINT,long,ulong *)+26j
.text:5B8E1F79 5D							       pop     ebp
.text:5B8E1F7A C2 1C 00							       retn    1Ch
.text:5B8E1F7A						       ?QueryHitPoint@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKPBUtagRECT@@UtagPOINT@@JPAK@Z endp
.text:5B8E1F7A
.text:5B8E1F7D
.text:5B8E1F7D						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1F7D
.text:5B8E1F7D						       ; Attributes: bp-based frame
.text:5B8E1F7D
.text:5B8E1F7D						       ; int __stdcall ATL::IViewObjectExImpl<CTrialEnd>::QueryHitRect(int, int, RECT *lprcSrc1, RECT *lprcSrc2, int, int)
.text:5B8E1F7D						       ?QueryHitRect@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKPBUtagRECT@@0JPAK@Z proc near
.text:5B8E1F7D											       ; DATA XREF: .text:5B8E12C0o
.text:5B8E1F7D											       ; .text:5B8E14F0o
.text:5B8E1F7D
.text:5B8E1F7D						       rcDst	       = tagRECT ptr -10h
.text:5B8E1F7D						       arg_4	       = dword ptr  0Ch
.text:5B8E1F7D						       lprcSrc1	       = dword ptr  10h
.text:5B8E1F7D						       lprcSrc2	       = dword ptr  14h
.text:5B8E1F7D						       arg_14	       = dword ptr  1Ch
.text:5B8E1F7D
.text:5B8E1F7D 55							       push    ebp
.text:5B8E1F7E 8B EC							       mov     ebp, esp
.text:5B8E1F80 83 EC 10							       sub     esp, 10h
.text:5B8E1F83 83 7D 0C	01						       cmp     [ebp+arg_4], 1
.text:5B8E1F87 75 20							       jnz     short loc_5B8E1FA9
.text:5B8E1F89 FF 75 14							       push    [ebp+lprcSrc2]  ; lprcSrc2
.text:5B8E1F8C 8D 45 F0							       lea     eax, [ebp+rcDst]
.text:5B8E1F8F FF 75 10							       push    [ebp+lprcSrc1]  ; lprcSrc1
.text:5B8E1F92 50							       push    eax	       ; lprcDst
.text:5B8E1F93 FF 15 58	11 8E 5B					       call    ds:__imp__UnionRect@12 ;	UnionRect(x,x,x)
.text:5B8E1F99 8B 4D 1C							       mov     ecx, [ebp+arg_14]
.text:5B8E1F9C F7 D8							       neg     eax
.text:5B8E1F9E 1B C0							       sbb     eax, eax
.text:5B8E1FA0 83 E0 03							       and     eax, 3
.text:5B8E1FA3 89 01							       mov     [ecx], eax
.text:5B8E1FA5 33 C0							       xor     eax, eax
.text:5B8E1FA7 EB 05							       jmp     short locret_5B8E1FAE
.text:5B8E1FA9						       ; ---------------------------------------------------------------------------
.text:5B8E1FA9
.text:5B8E1FA9						       loc_5B8E1FA9:			       ; CODE XREF: ATL::IViewObjectExImpl<CTrialEnd>::QueryHitRect(ulong,tagRECT const	*,tagRECT const	*,long,ulong *)+Aj
.text:5B8E1FA9 B8 05 40	00 80						       mov     eax, 80004005h
.text:5B8E1FAE
.text:5B8E1FAE						       locret_5B8E1FAE:			       ; CODE XREF: ATL::IViewObjectExImpl<CTrialEnd>::QueryHitRect(ulong,tagRECT const	*,tagRECT const	*,long,ulong *)+2Aj
.text:5B8E1FAE C9							       leave
.text:5B8E1FAF C2 18 00							       retn    18h
.text:5B8E1FAF						       ?QueryHitRect@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKPBUtagRECT@@0JPAK@Z endp
.text:5B8E1FAF
.text:5B8E1FB2
.text:5B8E1FB2						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1FB2
.text:5B8E1FB2
.text:5B8E1FB2						       ; public: virtual long __stdcall	ATL::IViewObjectExImpl<class CTrialEnd>::GetNaturalExtent(unsigned long, long, struct tagDVTARGETDEVICE	*, struct HDC__	*, struct tagExtentInfo	*, struct tagSIZE *)
.text:5B8E1FB2						       ?GetNaturalExtent@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKJPAUtagDVTARGETDEVICE@@PAUHDC__@@PAUtagExtentInfo@@PAUtagSIZE@@@Z proc near
.text:5B8E1FB2											       ; DATA XREF: .text:5B8E12C4o
.text:5B8E1FB2											       ; .text:5B8E14F4o
.text:5B8E1FB2
.text:5B8E1FB2						       arg_0	       = dword ptr  4
.text:5B8E1FB2						       arg_4	       = dword ptr  8
.text:5B8E1FB2						       arg_14	       = dword ptr  18h
.text:5B8E1FB2						       arg_18	       = dword ptr  1Ch
.text:5B8E1FB2
.text:5B8E1FB2 83 7C 24	08 01						       cmp     [esp+arg_4], 1
.text:5B8E1FB7 B8 05 40	00 80						       mov     eax, 80004005h
.text:5B8E1FBC 75 2A							       jnz     short locret_5B8E1FE8
.text:5B8E1FBE 8B 4C 24	18						       mov     ecx, [esp+arg_14]
.text:5B8E1FC2 83 79 04	00						       cmp     dword ptr [ecx+4], 0
.text:5B8E1FC6 75 20							       jnz     short locret_5B8E1FE8
.text:5B8E1FC8 8B 44 24	04						       mov     eax, [esp+arg_0]
.text:5B8E1FCC 8B C8							       mov     ecx, eax
.text:5B8E1FCE 83 C0 88							       add     eax, 0FFFFFF88h
.text:5B8E1FD1 F7 D9							       neg     ecx
.text:5B8E1FD3 1B C9							       sbb     ecx, ecx
.text:5B8E1FD5 23 C8							       and     ecx, eax
.text:5B8E1FD7 8B 51 1C							       mov     edx, [ecx+1Ch]
.text:5B8E1FDA 8B 44 24	1C						       mov     eax, [esp+arg_18]
.text:5B8E1FDE 89 10							       mov     [eax], edx
.text:5B8E1FE0 8B 49 20							       mov     ecx, [ecx+20h]
.text:5B8E1FE3 89 48 04							       mov     [eax+4],	ecx
.text:5B8E1FE6 33 C0							       xor     eax, eax
.text:5B8E1FE8
.text:5B8E1FE8						       locret_5B8E1FE8:			       ; CODE XREF: ATL::IViewObjectExImpl<CTrialEnd>::GetNaturalExtent(ulong,long,tagDVTARGETDEVICE *,HDC__ *,tagExtentInfo *,tagSIZE *)+Aj
.text:5B8E1FE8											       ; ATL::IViewObjectExImpl<CTrialEnd>::GetNaturalExtent(ulong,long,tagDVTARGETDEVICE *,HDC__ *,tagExtentInfo *,tagSIZE *)+14j
.text:5B8E1FE8 C2 1C 00							       retn    1Ch
.text:5B8E1FE8						       ?GetNaturalExtent@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKJPAUtagDVTARGETDEVICE@@PAUHDC__@@PAUtagExtentInfo@@PAUtagSIZE@@@Z endp
.text:5B8E1FE8
.text:5B8E1FEB
.text:5B8E1FEB						       ; =============== S U B R O U T I N E =======================================
.text:5B8E1FEB
.text:5B8E1FEB
.text:5B8E1FEB						       ; public: virtual long __stdcall	ATL::IOleInPlaceObjectWindowlessImpl<class CTrialEnd>::GetWindow(struct	HWND__ * *)
.text:5B8E1FEB						       ?GetWindow@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJPAPAUHWND__@@@Z proc near
.text:5B8E1FEB											       ; DATA XREF: .text:5B8E126Co
.text:5B8E1FEB											       ; .text:5B8E149Co
.text:5B8E1FEB
.text:5B8E1FEB						       arg_0	       = dword ptr  4
.text:5B8E1FEB						       arg_4	       = dword ptr  8
.text:5B8E1FEB
.text:5B8E1FEB 8B 4C 24	04						       mov     ecx, [esp+arg_0]
.text:5B8E1FEF 8D 41 84							       lea     eax, [ecx-7Ch]
.text:5B8E1FF2 F7 D9							       neg     ecx
.text:5B8E1FF4 1B C9							       sbb     ecx, ecx
.text:5B8E1FF6 23 C8							       and     ecx, eax
.text:5B8E1FF8 F6 41 45	01						       test    byte ptr	[ecx+45h], 1
.text:5B8E1FFC B8 03 40	00 80						       mov     eax, 80004003h
.text:5B8E2001 74 05							       jz      short loc_5B8E2008
.text:5B8E2003 83 C0 02							       add     eax, 2
.text:5B8E2006 EB 1B							       jmp     short locret_5B8E2023
.text:5B8E2008						       ; ---------------------------------------------------------------------------
.text:5B8E2008
.text:5B8E2008						       loc_5B8E2008:			       ; CODE XREF: ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::GetWindow(HWND__ *	*)+16j
.text:5B8E2008 8B 54 24	08						       mov     edx, [esp+arg_4]
.text:5B8E200C 85 D2							       test    edx, edx
.text:5B8E200E 74 13							       jz      short locret_5B8E2023
.text:5B8E2010 8B 41 4C							       mov     eax, [ecx+4Ch]
.text:5B8E2013 89 02							       mov     [edx], eax
.text:5B8E2015 F7 D8							       neg     eax
.text:5B8E2017 1B C0							       sbb     eax, eax
.text:5B8E2019 25 01 00	FF 7F						       and     eax, 7FFF0001h
.text:5B8E201E 05 FF FF	00 80						       add     eax, 8000FFFFh
.text:5B8E2023
.text:5B8E2023						       locret_5B8E2023:			       ; CODE XREF: ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::GetWindow(HWND__ *	*)+1Bj
.text:5B8E2023											       ; ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::GetWindow(HWND__ * *)+23j
.text:5B8E2023 C2 08 00							       retn    8
.text:5B8E2023						       ?GetWindow@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJPAPAUHWND__@@@Z endp
.text:5B8E2023
.text:5B8E2026
.text:5B8E2026						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2026
.text:5B8E2026
.text:5B8E2026						       ; public: virtual long __stdcall	ATL::IOleInPlaceObjectWindowlessImpl<class CTrialEnd>::ContextSensitiveHelp(int)
.text:5B8E2026						       ?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJH@Z proc near
.text:5B8E2026											       ; DATA XREF: .text:5B8E1270o
.text:5B8E2026											       ; .text:5B8E1288o ...
.text:5B8E2026 B8 01 40	00 80						       mov     eax, 80004001h
.text:5B8E202B C2 08 00							       retn    8
.text:5B8E202B						       ?ContextSensitiveHelp@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJH@Z endp
.text:5B8E202B
.text:5B8E202E
.text:5B8E202E						       ; =============== S U B R O U T I N E =======================================
.text:5B8E202E
.text:5B8E202E
.text:5B8E202E						       ; public: virtual long __stdcall	ATL::IOleInPlaceObjectWindowlessImpl<class CTrialEnd>::InPlaceDeactivate(void)
.text:5B8E202E						       ?InPlaceDeactivate@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJXZ proc near
.text:5B8E202E											       ; DATA XREF: .text:5B8E1274o
.text:5B8E202E											       ; .text:5B8E14A4o
.text:5B8E202E
.text:5B8E202E						       arg_0	       = dword ptr  4
.text:5B8E202E
.text:5B8E202E 8B 4C 24	04						       mov     ecx, [esp+arg_0]
.text:5B8E2032 8D 41 84							       lea     eax, [ecx-7Ch]
.text:5B8E2035 F7 D9							       neg     ecx
.text:5B8E2037 1B C9							       sbb     ecx, ecx
.text:5B8E2039 23 C8							       and     ecx, eax	       ; this
.text:5B8E203B E8 88 2B	00 00						       call    ?IOleInPlaceObject_InPlaceDeactivate@CComControlBase@ATL@@QAEJXZ	; ATL::CComControlBase::IOleInPlaceObject_InPlaceDeactivate(void)
.text:5B8E2040 C2 04 00							       retn    4
.text:5B8E2040						       ?InPlaceDeactivate@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJXZ endp
.text:5B8E2040
.text:5B8E2043
.text:5B8E2043						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2043
.text:5B8E2043
.text:5B8E2043						       ; public: virtual long __stdcall	ATL::IOleInPlaceObjectWindowlessImpl<class CTrialEnd>::UIDeactivate(void)
.text:5B8E2043						       ?UIDeactivate@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJXZ	proc near
.text:5B8E2043											       ; DATA XREF: .text:5B8E1278o
.text:5B8E2043											       ; .text:5B8E14A8o
.text:5B8E2043
.text:5B8E2043						       arg_0	       = dword ptr  4
.text:5B8E2043
.text:5B8E2043 8B 4C 24	04						       mov     ecx, [esp+arg_0]
.text:5B8E2047 8D 41 84							       lea     eax, [ecx-7Ch]
.text:5B8E204A F7 D9							       neg     ecx
.text:5B8E204C 1B C9							       sbb     ecx, ecx
.text:5B8E204E 23 C8							       and     ecx, eax	       ; this
.text:5B8E2050 E8 E5 2B	00 00						       call    ?IOleInPlaceObject_UIDeactivate@CComControlBase@ATL@@QAEJXZ ; ATL::CComControlBase::IOleInPlaceObject_UIDeactivate(void)
.text:5B8E2055 C2 04 00							       retn    4
.text:5B8E2055						       ?UIDeactivate@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJXZ	endp
.text:5B8E2055
.text:5B8E2058
.text:5B8E2058						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2058
.text:5B8E2058
.text:5B8E2058						       ; int __stdcall ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::SetObjectRects(int, RECT *lprcSrc1, struct tagRECT *)
.text:5B8E2058						       ?SetObjectRects@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJPBUtagRECT@@0@Z proc near
.text:5B8E2058											       ; DATA XREF: .text:5B8E127Co
.text:5B8E2058											       ; .text:5B8E14ACo
.text:5B8E2058
.text:5B8E2058						       arg_0	       = dword ptr  4
.text:5B8E2058						       lprcSrc1	       = dword ptr  8
.text:5B8E2058						       arg_8	       = dword ptr  0Ch
.text:5B8E2058
.text:5B8E2058 8B 4C 24	04						       mov     ecx, [esp+arg_0]
.text:5B8E205C FF 74 24	0C						       push    [esp+arg_8]     ; struct	tagRECT	*
.text:5B8E2060 8D 41 84							       lea     eax, [ecx-7Ch]
.text:5B8E2063 FF 74 24	0C						       push    [esp+4+lprcSrc1]	; lprcSrc1
.text:5B8E2067 F7 D9							       neg     ecx
.text:5B8E2069 1B C9							       sbb     ecx, ecx
.text:5B8E206B 23 C8							       and     ecx, eax	       ; this
.text:5B8E206D E8 7B 18	00 00						       call    ?IOleInPlaceObject_SetObjectRects@CComControlBase@ATL@@QAEJPBUtagRECT@@0@Z ; ATL::CComControlBase::IOleInPlaceObject_SetObjectRects(tagRECT const *,tagRECT const *)
.text:5B8E2072 C2 0C 00							       retn    0Ch
.text:5B8E2072						       ?SetObjectRects@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJPBUtagRECT@@0@Z endp
.text:5B8E2072
.text:5B8E2075
.text:5B8E2075						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2075
.text:5B8E2075
.text:5B8E2075						       ; public: virtual long __stdcall	ATL::IOleInPlaceObjectWindowlessImpl<class CTrialEnd>::ReactivateAndUndo(void)
.text:5B8E2075						       ?ReactivateAndUndo@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJXZ proc near
.text:5B8E2075											       ; DATA XREF: .text:5B8E1280o
.text:5B8E2075											       ; .text:5B8E14B0o
.text:5B8E2075 B8 01 40	00 80						       mov     eax, 80004001h
.text:5B8E207A C2 04 00							       retn    4
.text:5B8E207A						       ?ReactivateAndUndo@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJXZ endp
.text:5B8E207A
.text:5B8E207D
.text:5B8E207D						       ; =============== S U B R O U T I N E =======================================
.text:5B8E207D
.text:5B8E207D						       ; Attributes: bp-based frame
.text:5B8E207D
.text:5B8E207D						       ; public: virtual long __stdcall	ATL::IOleInPlaceObjectWindowlessImpl<class CTrialEnd>::OnWindowMessage(unsigned	int, unsigned int, long, long *)
.text:5B8E207D						       ?OnWindowMessage@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJIIJPAJ@Z proc near
.text:5B8E207D											       ; DATA XREF: .text:5B8E1284o
.text:5B8E207D											       ; .text:5B8E14B4o
.text:5B8E207D
.text:5B8E207D						       arg_0	       = dword ptr  8
.text:5B8E207D						       arg_4	       = dword ptr  0Ch
.text:5B8E207D						       arg_8	       = dword ptr  10h
.text:5B8E207D						       arg_C	       = dword ptr  14h
.text:5B8E207D						       arg_10	       = dword ptr  18h
.text:5B8E207D
.text:5B8E207D 55							       push    ebp
.text:5B8E207E 8B EC							       mov     ebp, esp
.text:5B8E2080 8B 45 08							       mov     eax, [ebp+arg_0]
.text:5B8E2083 6A 00							       push    0
.text:5B8E2085 FF 75 18							       push    [ebp+arg_10]
.text:5B8E2088 8D 48 84							       lea     ecx, [eax-7Ch]
.text:5B8E208B FF 75 14							       push    [ebp+arg_C]
.text:5B8E208E F7 D8							       neg     eax
.text:5B8E2090 FF 75 10							       push    [ebp+arg_8]
.text:5B8E2093 1B C0							       sbb     eax, eax
.text:5B8E2095 FF 75 0C							       push    [ebp+arg_4]
.text:5B8E2098 23 C1							       and     eax, ecx
.text:5B8E209A FF 70 4C							       push    dword ptr [eax+4Ch]
.text:5B8E209D 8D 48 48							       lea     ecx, [eax+48h]
.text:5B8E20A0 8B 11							       mov     edx, [ecx]
.text:5B8E20A2 FF 12							       call    dword ptr [edx]
.text:5B8E20A4 F7 D8							       neg     eax
.text:5B8E20A6 1B C0							       sbb     eax, eax
.text:5B8E20A8 40							       inc     eax
.text:5B8E20A9 5D							       pop     ebp
.text:5B8E20AA C2 14 00							       retn    14h
.text:5B8E20AA						       ?OnWindowMessage@?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@ATL@@UAGJIIJPAJ@Z endp
.text:5B8E20AA
.text:5B8E20AD
.text:5B8E20AD						       ; =============== S U B R O U T I N E =======================================
.text:5B8E20AD
.text:5B8E20AD						       ; Attributes: bp-based frame
.text:5B8E20AD
.text:5B8E20AD						       ; public: virtual long __stdcall	ATL::IObjectSafetyImpl<class CTrialEnd>::GetInterfaceSafetyOptions(struct _GUID	const &, unsigned long *, unsigned long	*)
.text:5B8E20AD						       ?GetInterfaceSafetyOptions@?$IObjectSafetyImpl@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAK1@Z proc near
.text:5B8E20AD											       ; DATA XREF: .text:5B8E1258o
.text:5B8E20AD											       ; .text:5B8E1488o
.text:5B8E20AD
.text:5B8E20AD						       arg_0	       = dword ptr  8
.text:5B8E20AD						       arg_4	       = dword ptr  0Ch
.text:5B8E20AD						       arg_8	       = dword ptr  10h
.text:5B8E20AD						       arg_C	       = dword ptr  14h
.text:5B8E20AD
.text:5B8E20AD 55							       push    ebp
.text:5B8E20AE 8B EC							       mov     ebp, esp
.text:5B8E20B0 53							       push    ebx
.text:5B8E20B1 8B 5D 10							       mov     ebx, [ebp+arg_8]
.text:5B8E20B4 85 DB							       test    ebx, ebx
.text:5B8E20B6 74 41							       jz      short loc_5B8E20F9
.text:5B8E20B8 8B 55 14							       mov     edx, [ebp+arg_C]
.text:5B8E20BB 85 D2							       test    edx, edx
.text:5B8E20BD 74 3A							       jz      short loc_5B8E20F9
.text:5B8E20BF 83 65 10	00						       and     [ebp+arg_8], 0
.text:5B8E20C3 56							       push    esi
.text:5B8E20C4 8B 75 0C							       mov     esi, [ebp+arg_4]
.text:5B8E20C7 57							       push    edi
.text:5B8E20C8 6A 04							       push    4
.text:5B8E20CA 59							       pop     ecx
.text:5B8E20CB BF 1C 19	8E 5B						       mov     edi, offset _IID_IDispatch
.text:5B8E20D0 33 C0							       xor     eax, eax
.text:5B8E20D2 F3 A7							       repe cmpsd
.text:5B8E20D4 5F							       pop     edi
.text:5B8E20D5 5E							       pop     esi
.text:5B8E20D6 75 0F							       jnz     short loc_5B8E20E7
.text:5B8E20D8 8B 4D 08							       mov     ecx, [ebp+arg_0]
.text:5B8E20DB 40							       inc     eax
.text:5B8E20DC 89 03							       mov     [ebx], eax
.text:5B8E20DE 8B 49 04							       mov     ecx, [ecx+4]
.text:5B8E20E1 23 C8							       and     ecx, eax
.text:5B8E20E3 89 0A							       mov     [edx], ecx
.text:5B8E20E5 EB 0D							       jmp     short loc_5B8E20F4
.text:5B8E20E7						       ; ---------------------------------------------------------------------------
.text:5B8E20E7
.text:5B8E20E7						       loc_5B8E20E7:			       ; CODE XREF: ATL::IObjectSafetyImpl<CTrialEnd>::GetInterfaceSafetyOptions(_GUID const &,ulong *,ulong *)+29j
.text:5B8E20E7 83 23 00							       and     dword ptr [ebx],	0
.text:5B8E20EA 83 22 00							       and     dword ptr [edx],	0
.text:5B8E20ED C7 45 10	02 40 00 80					       mov     [ebp+arg_8], 80004002h
.text:5B8E20F4
.text:5B8E20F4						       loc_5B8E20F4:			       ; CODE XREF: ATL::IObjectSafetyImpl<CTrialEnd>::GetInterfaceSafetyOptions(_GUID const &,ulong *,ulong *)+38j
.text:5B8E20F4 8B 45 10							       mov     eax, [ebp+arg_8]
.text:5B8E20F7 EB 05							       jmp     short loc_5B8E20FE
.text:5B8E20F9						       ; ---------------------------------------------------------------------------
.text:5B8E20F9
.text:5B8E20F9						       loc_5B8E20F9:			       ; CODE XREF: ATL::IObjectSafetyImpl<CTrialEnd>::GetInterfaceSafetyOptions(_GUID const &,ulong *,ulong *)+9j
.text:5B8E20F9											       ; ATL::IObjectSafetyImpl<CTrialEnd>::GetInterfaceSafetyOptions(_GUID const &,ulong *,ulong *)+10j
.text:5B8E20F9 B8 03 40	00 80						       mov     eax, 80004003h
.text:5B8E20FE
.text:5B8E20FE						       loc_5B8E20FE:			       ; CODE XREF: ATL::IObjectSafetyImpl<CTrialEnd>::GetInterfaceSafetyOptions(_GUID const &,ulong *,ulong *)+4Aj
.text:5B8E20FE 5B							       pop     ebx
.text:5B8E20FF 5D							       pop     ebp
.text:5B8E2100 C2 10 00							       retn    10h
.text:5B8E2100						       ?GetInterfaceSafetyOptions@?$IObjectSafetyImpl@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAK1@Z endp
.text:5B8E2100
.text:5B8E2103
.text:5B8E2103						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2103
.text:5B8E2103
.text:5B8E2103						       ; public: virtual long __stdcall	ATL::IObjectSafetyImpl<class CTrialEnd>::SetInterfaceSafetyOptions(struct _GUID	const &, unsigned long,	unsigned long)
.text:5B8E2103						       ?SetInterfaceSafetyOptions@?$IObjectSafetyImpl@VCTrialEnd@@@ATL@@UAGJABU_GUID@@KK@Z proc	near
.text:5B8E2103											       ; DATA XREF: .text:5B8E125Co
.text:5B8E2103											       ; .text:5B8E148Co
.text:5B8E2103
.text:5B8E2103						       arg_0	       = dword ptr  4
.text:5B8E2103						       arg_4	       = dword ptr  8
.text:5B8E2103						       arg_8	       = dword ptr  0Ch
.text:5B8E2103						       arg_C	       = dword ptr  10h
.text:5B8E2103
.text:5B8E2103 56							       push    esi
.text:5B8E2104 8B 74 24	0C						       mov     esi, [esp+4+arg_4]
.text:5B8E2108 57							       push    edi
.text:5B8E2109 6A 04							       push    4
.text:5B8E210B 59							       pop     ecx
.text:5B8E210C BF 1C 19	8E 5B						       mov     edi, offset _IID_IDispatch
.text:5B8E2111 33 C0							       xor     eax, eax
.text:5B8E2113 F3 A7							       repe cmpsd
.text:5B8E2115 5F							       pop     edi
.text:5B8E2116 5E							       pop     esi
.text:5B8E2117 75 13							       jnz     short loc_5B8E212C
.text:5B8E2119 8B 44 24	0C						       mov     eax, [esp+arg_8]
.text:5B8E211D 23 44 24	10						       and     eax, [esp+arg_C]
.text:5B8E2121 8B 4C 24	04						       mov     ecx, [esp+arg_0]
.text:5B8E2125 89 41 04							       mov     [ecx+4],	eax
.text:5B8E2128 33 C0							       xor     eax, eax
.text:5B8E212A EB 05							       jmp     short locret_5B8E2131
.text:5B8E212C						       ; ---------------------------------------------------------------------------
.text:5B8E212C
.text:5B8E212C						       loc_5B8E212C:			       ; CODE XREF: ATL::IObjectSafetyImpl<CTrialEnd>::SetInterfaceSafetyOptions(_GUID const &,ulong,ulong)+14j
.text:5B8E212C B8 02 40	00 80						       mov     eax, 80004002h
.text:5B8E2131
.text:5B8E2131						       locret_5B8E2131:			       ; CODE XREF: ATL::IObjectSafetyImpl<CTrialEnd>::SetInterfaceSafetyOptions(_GUID const &,ulong,ulong)+27j
.text:5B8E2131 C2 10 00							       retn    10h
.text:5B8E2131						       ?SetInterfaceSafetyOptions@?$IObjectSafetyImpl@VCTrialEnd@@@ATL@@UAGJABU_GUID@@KK@Z endp
.text:5B8E2131
.text:5B8E2134
.text:5B8E2134						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2134
.text:5B8E2134
.text:5B8E2134						       ; public: virtual unsigned long __stdcall ATL::CComObject<class CTrialEnd>::AddRef(void)
.text:5B8E2134						       ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@UAGKXZ proc near
.text:5B8E2134											       ; CODE XREF: [thunk]:ATL::CComObject<CTrialEnd>::AddRef`adjustor{4}' (void)+5j
.text:5B8E2134											       ; [thunk]:ATL::CComObject<CTrialEnd>::AddRef`adjustor{8}' (void)+5j ...
.text:5B8E2134
.text:5B8E2134						       arg_0	       = dword ptr  4
.text:5B8E2134
.text:5B8E2134 8B 44 24	04						       mov     eax, [esp+arg_0]
.text:5B8E2138 FF 40 24							       inc     dword ptr [eax+24h]
.text:5B8E213B 8B 40 24							       mov     eax, [eax+24h]
.text:5B8E213E C2 04 00							       retn    4
.text:5B8E213E						       ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@UAGKXZ endp
.text:5B8E213E
.text:5B8E2141
.text:5B8E2141						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2141
.text:5B8E2141
.text:5B8E2141						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComObject<class CTrialEnd>::AddRef`adjustor{4}' (void)
.text:5B8E2141						       ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@W3AGKXZ proc near
.text:5B8E2141											       ; DATA XREF: .text:5B8E1370o
.text:5B8E2141
.text:5B8E2141						       arg_0	       = dword ptr  4
.text:5B8E2141
.text:5B8E2141 83 6C 24	04 04						       sub     [esp+arg_0], 4
.text:5B8E2146 E9 E9 FF	FF FF						       jmp     ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@UAGKXZ ; ATL::CComObject<CTrialEnd>::AddRef(void)
.text:5B8E2146						       ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@W3AGKXZ endp
.text:5B8E2146
.text:5B8E214B
.text:5B8E214B						       ; =============== S U B R O U T I N E =======================================
.text:5B8E214B
.text:5B8E214B
.text:5B8E214B						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComObject<class CTrialEnd>::AddRef`adjustor{8}' (void)
.text:5B8E214B						       ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@W7AGKXZ proc near
.text:5B8E214B											       ; DATA XREF: .text:5B8E1354o
.text:5B8E214B
.text:5B8E214B						       arg_0	       = dword ptr  4
.text:5B8E214B
.text:5B8E214B 83 6C 24	04 08						       sub     [esp+arg_0], 8
.text:5B8E2150 E9 DF FF	FF FF						       jmp     ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@UAGKXZ ; ATL::CComObject<CTrialEnd>::AddRef(void)
.text:5B8E2150						       ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@W7AGKXZ endp
.text:5B8E2150
.text:5B8E2155
.text:5B8E2155						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2155
.text:5B8E2155
.text:5B8E2155						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComObject<class CTrialEnd>::AddRef`adjustor{12}' (void)
.text:5B8E2155						       ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@WM@AGKXZ proc near
.text:5B8E2155											       ; DATA XREF: .text:5B8E12F4o
.text:5B8E2155
.text:5B8E2155						       arg_0	       = dword ptr  4
.text:5B8E2155
.text:5B8E2155 83 6C 24	04 0C						       sub     [esp+arg_0], 0Ch
.text:5B8E215A E9 D5 FF	FF FF						       jmp     ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@UAGKXZ ; ATL::CComObject<CTrialEnd>::AddRef(void)
.text:5B8E215A						       ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@WM@AGKXZ endp
.text:5B8E215A
.text:5B8E215F
.text:5B8E215F						       ; =============== S U B R O U T I N E =======================================
.text:5B8E215F
.text:5B8E215F
.text:5B8E215F						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComObject<class CTrialEnd>::AddRef`adjustor{16}' (void)
.text:5B8E215F						       ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@WBA@AGKXZ	proc near
.text:5B8E215F											       ; DATA XREF: .text:5B8E12CCo
.text:5B8E215F
.text:5B8E215F						       arg_0	       = dword ptr  4
.text:5B8E215F
.text:5B8E215F 83 6C 24	04 10						       sub     [esp+arg_0], 10h
.text:5B8E2164 E9 CB FF	FF FF						       jmp     ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@UAGKXZ ; ATL::CComObject<CTrialEnd>::AddRef(void)
.text:5B8E2164						       ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@WBA@AGKXZ	endp
.text:5B8E2164
.text:5B8E2169
.text:5B8E2169						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2169
.text:5B8E2169
.text:5B8E2169						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComObject<class CTrialEnd>::AddRef`adjustor{20}' (void)
.text:5B8E2169						       ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@WBE@AGKXZ	proc near
.text:5B8E2169											       ; DATA XREF: .text:5B8E1290o
.text:5B8E2169
.text:5B8E2169						       arg_0	       = dword ptr  4
.text:5B8E2169
.text:5B8E2169 83 6C 24	04 14						       sub     [esp+arg_0], 14h
.text:5B8E216E E9 C1 FF	FF FF						       jmp     ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@UAGKXZ ; ATL::CComObject<CTrialEnd>::AddRef(void)
.text:5B8E216E						       ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@WBE@AGKXZ	endp
.text:5B8E216E
.text:5B8E2173
.text:5B8E2173						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2173
.text:5B8E2173
.text:5B8E2173						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComObject<class CTrialEnd>::AddRef`adjustor{24}' (void)
.text:5B8E2173						       ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@WBI@AGKXZ	proc near
.text:5B8E2173											       ; DATA XREF: .text:5B8E1264o
.text:5B8E2173
.text:5B8E2173						       arg_0	       = dword ptr  4
.text:5B8E2173
.text:5B8E2173 83 6C 24	04 18						       sub     [esp+arg_0], 18h
.text:5B8E2178 E9 B7 FF	FF FF						       jmp     ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@UAGKXZ ; ATL::CComObject<CTrialEnd>::AddRef(void)
.text:5B8E2178						       ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@WBI@AGKXZ	endp
.text:5B8E2178
.text:5B8E217D
.text:5B8E217D						       ; =============== S U B R O U T I N E =======================================
.text:5B8E217D
.text:5B8E217D
.text:5B8E217D						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComObject<class CTrialEnd>::AddRef`adjustor{28}' (void)
.text:5B8E217D						       ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@WBM@AGKXZ	proc near
.text:5B8E217D											       ; DATA XREF: .text:5B8E1250o
.text:5B8E217D
.text:5B8E217D						       arg_0	       = dword ptr  4
.text:5B8E217D
.text:5B8E217D 83 6C 24	04 1C						       sub     [esp+arg_0], 1Ch
.text:5B8E2182 E9 AD FF	FF FF						       jmp     ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@UAGKXZ ; ATL::CComObject<CTrialEnd>::AddRef(void)
.text:5B8E2182						       ?AddRef@?$CComObject@VCTrialEnd@@@ATL@@WBM@AGKXZ	endp
.text:5B8E2182
.text:5B8E2187
.text:5B8E2187						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2187
.text:5B8E2187
.text:5B8E2187						       ; __int32 __stdcall CTrialEnd::GetViewStatus(CTrialEnd *this, unsigned __int32 *)
.text:5B8E2187						       ?GetViewStatus@CTrialEnd@@UAGJPAK@Z proc	near
.text:5B8E2187											       ; DATA XREF: .text:5B8E12B8o
.text:5B8E2187											       ; .text:5B8E14E8o
.text:5B8E2187
.text:5B8E2187						       this	       = dword ptr  4
.text:5B8E2187						       arg_4	       = dword ptr  8
.text:5B8E2187
.text:5B8E2187 8B 44 24	08						       mov     eax, [esp+arg_4]
.text:5B8E218B 83 20 00							       and     dword ptr [eax],	0
.text:5B8E218E 33 C0							       xor     eax, eax
.text:5B8E2190 C2 08 00							       retn    8
.text:5B8E2190						       ?GetViewStatus@CTrialEnd@@UAGJPAK@Z endp
.text:5B8E2190
.text:5B8E2193
.text:5B8E2193						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2193
.text:5B8E2193
.text:5B8E2193						       ; int __thiscall	ATL::CComControl<CTrialEnd>::ControlQueryInterface(void	*, struct _GUID	*, void	**)
.text:5B8E2193						       ?ControlQueryInterface@?$CComControl@VCTrialEnd@@@ATL@@UAEJABU_GUID@@PAPAX@Z proc near
.text:5B8E2193											       ; DATA XREF: .text:5B8E13B8o
.text:5B8E2193
.text:5B8E2193						       arg_0	       = dword ptr  4
.text:5B8E2193						       arg_4	       = dword ptr  8
.text:5B8E2193
.text:5B8E2193 FF 74 24	08						       push    [esp+arg_4]     ; void **
.text:5B8E2197 FF 74 24	08						       push    [esp+4+arg_0]   ; struct	_GUID *
.text:5B8E219B 68 C8 13	8E 5B						       push    offset ?_entries@?1??_GetEntries@CTrialEnd@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ@4QBU34@B ; struct ATL::_ATL_INTMAP_ENTRY *
.text:5B8E21A0 51							       push    ecx	       ; void *
.text:5B8E21A1 E8 C3 12	00 00						       call    ?AtlInternalQueryInterface@ATL@@YGJPAXPBU_ATL_INTMAP_ENTRY@1@ABU_GUID@@PAPAX@Z ;	ATL::AtlInternalQueryInterface(void *,ATL::_ATL_INTMAP_ENTRY const *,_GUID const &,void	* *)
.text:5B8E21A6 C2 08 00							       retn    8
.text:5B8E21A6						       ?ControlQueryInterface@?$CComControl@VCTrialEnd@@@ATL@@UAEJABU_GUID@@PAPAX@Z endp
.text:5B8E21A6
.text:5B8E21A9
.text:5B8E21A9						       ; =============== S U B R O U T I N E =======================================
.text:5B8E21A9
.text:5B8E21A9
.text:5B8E21A9						       ; public: virtual long __stdcall	ATL::IPersistStreamInitImpl<class CTrialEnd>::GetClassID(struct	_GUID *)
.text:5B8E21A9						       ?GetClassID@?$IPersistStreamInitImpl@VCTrialEnd@@@ATL@@UAGJPAU_GUID@@@Z proc near
.text:5B8E21A9											       ; DATA XREF: .text:5B8E1378o
.text:5B8E21A9											       ; .text:5B8E15A8o
.text:5B8E21A9
.text:5B8E21A9						       arg_4	       = dword ptr  8
.text:5B8E21A9
.text:5B8E21A9 56							       push    esi
.text:5B8E21AA 57							       push    edi
.text:5B8E21AB 8B 7C 24	10						       mov     edi, [esp+8+arg_4]
.text:5B8E21AF BE FC 11	8E 5B						       mov     esi, offset _CLSID_TrialEnd
.text:5B8E21B4 A5							       movsd
.text:5B8E21B5 A5							       movsd
.text:5B8E21B6 A5							       movsd
.text:5B8E21B7 A5							       movsd
.text:5B8E21B8 5F							       pop     edi
.text:5B8E21B9 33 C0							       xor     eax, eax
.text:5B8E21BB 5E							       pop     esi
.text:5B8E21BC C2 08 00							       retn    8
.text:5B8E21BC						       ?GetClassID@?$IPersistStreamInitImpl@VCTrialEnd@@@ATL@@UAGJPAU_GUID@@@Z endp
.text:5B8E21BC
.text:5B8E21BF
.text:5B8E21BF						       ; =============== S U B R O U T I N E =======================================
.text:5B8E21BF
.text:5B8E21BF
.text:5B8E21BF						       ; public: virtual long __stdcall	ATL::IPersistStreamInitImpl<class CTrialEnd>::IsDirty(void)
.text:5B8E21BF						       ?IsDirty@?$IPersistStreamInitImpl@VCTrialEnd@@@ATL@@UAGJXZ proc near
.text:5B8E21BF											       ; DATA XREF: .text:5B8E137Co
.text:5B8E21BF											       ; .text:5B8E15ACo
.text:5B8E21BF
.text:5B8E21BF						       arg_0	       = dword ptr  4
.text:5B8E21BF
.text:5B8E21BF 8B 44 24	04						       mov     eax, [esp+arg_0]
.text:5B8E21C3 8B C8							       mov     ecx, eax
.text:5B8E21C5 83 C0 98							       add     eax, 0FFFFFF98h
.text:5B8E21C8 F7 D9							       neg     ecx
.text:5B8E21CA 1B C9							       sbb     ecx, ecx
.text:5B8E21CC 23 C8							       and     ecx, eax
.text:5B8E21CE 8B 41 44							       mov     eax, [ecx+44h]
.text:5B8E21D1 C1 E8 07							       shr     eax, 7
.text:5B8E21D4 F7 D0							       not     eax
.text:5B8E21D6 83 E0 01							       and     eax, 1
.text:5B8E21D9 C2 04 00							       retn    4
.text:5B8E21D9						       ?IsDirty@?$IPersistStreamInitImpl@VCTrialEnd@@@ATL@@UAGJXZ endp
.text:5B8E21D9
.text:5B8E21DC
.text:5B8E21DC						       ; =============== S U B R O U T I N E =======================================
.text:5B8E21DC
.text:5B8E21DC
.text:5B8E21DC						       ; int __stdcall ATL::IPersistStreamInitImpl<CTrialEnd>::Load(int, LPSTREAM pStm)
.text:5B8E21DC						       ?Load@?$IPersistStreamInitImpl@VCTrialEnd@@@ATL@@UAGJPAUIStream@@@Z proc	near
.text:5B8E21DC											       ; DATA XREF: .text:5B8E1380o
.text:5B8E21DC											       ; .text:5B8E15B0o
.text:5B8E21DC
.text:5B8E21DC						       arg_0	       = dword ptr  4
.text:5B8E21DC						       pStm	       = dword ptr  8
.text:5B8E21DC
.text:5B8E21DC 8B 4C 24	04						       mov     ecx, [esp+arg_0]
.text:5B8E21E0 8D 41 98							       lea     eax, [ecx-68h]
.text:5B8E21E3 F7 D9							       neg     ecx
.text:5B8E21E5 68 4C 70	8E 5B						       push    offset ?pPropMap@?1??GetPropertyMap@CTrialEnd@@SIPAUATL_PROPMAP_ENTRY@ATL@@XZ@4PAU34@A ;	struct ATL::ATL_PROPMAP_ENTRY *
.text:5B8E21EA FF 74 24	0C						       push    [esp+4+pStm]    ; pStm
.text:5B8E21EE 1B C9							       sbb     ecx, ecx
.text:5B8E21F0 23 C8							       and     ecx, eax	       ; this
.text:5B8E21F2 E8 4A 26	00 00						       call    ?IPersistStreamInit_Load@CComControlBase@ATL@@QAEJPAUIStream@@PAUATL_PROPMAP_ENTRY@2@@Z ; ATL::CComControlBase::IPersistStreamInit_Load(IStream *,ATL::ATL_PROPMAP_ENTRY	*)
.text:5B8E21F7 C2 08 00							       retn    8
.text:5B8E21F7						       ?Load@?$IPersistStreamInitImpl@VCTrialEnd@@@ATL@@UAGJPAUIStream@@@Z endp
.text:5B8E21F7
.text:5B8E21FA
.text:5B8E21FA						       ; =============== S U B R O U T I N E =======================================
.text:5B8E21FA
.text:5B8E21FA
.text:5B8E21FA						       ; int __stdcall ATL::IPersistStreamInitImpl<CTrialEnd>::Save(int, LPPERSISTSTREAM pPStm,	int)
.text:5B8E21FA						       ?Save@?$IPersistStreamInitImpl@VCTrialEnd@@@ATL@@UAGJPAUIStream@@H@Z proc near
.text:5B8E21FA											       ; DATA XREF: .text:5B8E1384o
.text:5B8E21FA											       ; .text:5B8E15B4o
.text:5B8E21FA
.text:5B8E21FA						       arg_0	       = dword ptr  4
.text:5B8E21FA						       pPStm	       = dword ptr  8
.text:5B8E21FA						       arg_8	       = dword ptr  0Ch
.text:5B8E21FA
.text:5B8E21FA 8B 4C 24	04						       mov     ecx, [esp+arg_0]
.text:5B8E21FE 68 4C 70	8E 5B						       push    offset ?pPropMap@?1??GetPropertyMap@CTrialEnd@@SIPAUATL_PROPMAP_ENTRY@ATL@@XZ@4PAU34@A ;	struct ATL::ATL_PROPMAP_ENTRY *
.text:5B8E2203 FF 74 24	10						       push    [esp+4+arg_8]   ; int
.text:5B8E2207 8D 41 98							       lea     eax, [ecx-68h]
.text:5B8E220A FF 74 24	10						       push    [esp+8+pPStm]   ; pPStm
.text:5B8E220E F7 D9							       neg     ecx
.text:5B8E2210 1B C9							       sbb     ecx, ecx
.text:5B8E2212 23 C8							       and     ecx, eax	       ; this
.text:5B8E2214 E8 17 27	00 00						       call    ?IPersistStreamInit_Save@CComControlBase@ATL@@QAEJPAUIStream@@HPAUATL_PROPMAP_ENTRY@2@@Z	; ATL::CComControlBase::IPersistStreamInit_Save(IStream	*,int,ATL::ATL_PROPMAP_ENTRY *)
.text:5B8E2219 C2 0C 00							       retn    0Ch
.text:5B8E2219						       ?Save@?$IPersistStreamInitImpl@VCTrialEnd@@@ATL@@UAGJPAUIStream@@H@Z endp
.text:5B8E2219
.text:5B8E221C
.text:5B8E221C						       ; =============== S U B R O U T I N E =======================================
.text:5B8E221C
.text:5B8E221C
.text:5B8E221C						       ; public: virtual long __stdcall	ATL::IPersistStreamInitImpl<class CTrialEnd>::InitNew(void)
.text:5B8E221C						       ?InitNew@?$IPersistStreamInitImpl@VCTrialEnd@@@ATL@@UAGJXZ proc near
.text:5B8E221C											       ; DATA XREF: .text:5B8E138Co
.text:5B8E221C											       ; .text:5B8E15BCo
.text:5B8E221C
.text:5B8E221C						       arg_0	       = dword ptr  4
.text:5B8E221C
.text:5B8E221C 8B 4C 24	04						       mov     ecx, [esp+arg_0]
.text:5B8E2220 8D 41 98							       lea     eax, [ecx-68h]
.text:5B8E2223 F7 D9							       neg     ecx
.text:5B8E2225 1B C9							       sbb     ecx, ecx
.text:5B8E2227 6A 00							       push    0	       ; unsigned __int32
.text:5B8E2229 23 C8							       and     ecx, eax	       ; this
.text:5B8E222B E8 FA 27	00 00						       call    ?SendOnDataChange@CComControlBase@ATL@@QAEJK@Z ;	ATL::CComControlBase::SendOnDataChange(ulong)
.text:5B8E2230 33 C0							       xor     eax, eax
.text:5B8E2232 C2 04 00							       retn    4
.text:5B8E2232						       ?InitNew@?$IPersistStreamInitImpl@VCTrialEnd@@@ATL@@UAGJXZ endp
.text:5B8E2232
.text:5B8E2235
.text:5B8E2235						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2235
.text:5B8E2235
.text:5B8E2235						       ; public: virtual long __stdcall	ATL::IOleInPlaceActiveObjectImpl<class CTrialEnd>::OnDocWindowActivate(int)
.text:5B8E2235						       ?OnDocWindowActivate@?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@ATL@@UAGJH@Z proc near
.text:5B8E2235											       ; DATA XREF: .text:5B8E12E0o
.text:5B8E2235											       ; .text:5B8E12E4o ...
.text:5B8E2235 33 C0							       xor     eax, eax
.text:5B8E2237 C2 08 00							       retn    8
.text:5B8E2237						       ?OnDocWindowActivate@?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@ATL@@UAGJH@Z endp
.text:5B8E2237
.text:5B8E223A
.text:5B8E223A						       ; =============== S U B R O U T I N E =======================================
.text:5B8E223A
.text:5B8E223A
.text:5B8E223A						       ; public: virtual long __stdcall	ATL::IOleControlImpl<class CTrialEnd>::FreezeEvents(int)
.text:5B8E223A						       ?FreezeEvents@?$IOleControlImpl@VCTrialEnd@@@ATL@@UAGJH@Z proc near
.text:5B8E223A											       ; DATA XREF: .text:5B8E1368o
.text:5B8E223A											       ; .text:5B8E1598o
.text:5B8E223A
.text:5B8E223A						       arg_0	       = dword ptr  4
.text:5B8E223A						       arg_4	       = dword ptr  8
.text:5B8E223A
.text:5B8E223A 8B 44 24	04						       mov     eax, [esp+arg_0]
.text:5B8E223E 8D 48 94							       lea     ecx, [eax-6Ch]
.text:5B8E2241 F7 D8							       neg     eax
.text:5B8E2243 1B C0							       sbb     eax, eax
.text:5B8E2245 23 C1							       and     eax, ecx
.text:5B8E2247 83 7C 24	08 00						       cmp     [esp+arg_4], 0
.text:5B8E224C 74 05							       jz      short loc_5B8E2253
.text:5B8E224E FF 40 40							       inc     dword ptr [eax+40h]
.text:5B8E2251 EB 03							       jmp     short loc_5B8E2256
.text:5B8E2253						       ; ---------------------------------------------------------------------------
.text:5B8E2253
.text:5B8E2253						       loc_5B8E2253:			       ; CODE XREF: ATL::IOleControlImpl<CTrialEnd>::FreezeEvents(int)+12j
.text:5B8E2253 FF 48 40							       dec     dword ptr [eax+40h]
.text:5B8E2256
.text:5B8E2256						       loc_5B8E2256:			       ; CODE XREF: ATL::IOleControlImpl<CTrialEnd>::FreezeEvents(int)+17j
.text:5B8E2256 33 C0							       xor     eax, eax
.text:5B8E2258 C2 08 00							       retn    8
.text:5B8E2258						       ?FreezeEvents@?$IOleControlImpl@VCTrialEnd@@@ATL@@UAGJH@Z endp
.text:5B8E2258
.text:5B8E225B
.text:5B8E225B						       ; =============== S U B R O U T I N E =======================================
.text:5B8E225B
.text:5B8E225B
.text:5B8E225B						       ; int __stdcall ATL::IOleObjectImpl<CTrialEnd>::SetClientSite(int, struct IOleClientSite	*)
.text:5B8E225B						       ?SetClientSite@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAUIOleClientSite@@@Z proc	near
.text:5B8E225B											       ; DATA XREF: .text:5B8E12FCo
.text:5B8E225B											       ; .text:5B8E152Co
.text:5B8E225B
.text:5B8E225B						       arg_0	       = dword ptr  4
.text:5B8E225B						       arg_4	       = dword ptr  8
.text:5B8E225B
.text:5B8E225B 8B 4C 24	04						       mov     ecx, [esp+arg_0]
.text:5B8E225F FF 74 24	08						       push    [esp+arg_4]     ; struct	IOleClientSite *
.text:5B8E2263 8D 41 90							       lea     eax, [ecx-70h]
.text:5B8E2266 F7 D9							       neg     ecx
.text:5B8E2268 1B C9							       sbb     ecx, ecx
.text:5B8E226A 23 C8							       and     ecx, eax	       ; this
.text:5B8E226C E8 06 28	00 00						       call    ?IOleObject_SetClientSite@CComControlBase@ATL@@QAEJPAUIOleClientSite@@@Z	; ATL::CComControlBase::IOleObject_SetClientSite(IOleClientSite	*)
.text:5B8E2271 C2 08 00							       retn    8
.text:5B8E2271						       ?SetClientSite@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAUIOleClientSite@@@Z endp
.text:5B8E2271
.text:5B8E2274
.text:5B8E2274						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2274
.text:5B8E2274
.text:5B8E2274						       ; int __stdcall ATL::IOleObjectImpl<CTrialEnd>::GetClientSite(int, struct IOleClientSite	**)
.text:5B8E2274						       ?GetClientSite@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAPAUIOleClientSite@@@Z proc near
.text:5B8E2274											       ; DATA XREF: .text:5B8E1300o
.text:5B8E2274											       ; .text:5B8E1530o
.text:5B8E2274
.text:5B8E2274						       arg_0	       = dword ptr  4
.text:5B8E2274						       arg_4	       = dword ptr  8
.text:5B8E2274
.text:5B8E2274 8B 4C 24	04						       mov     ecx, [esp+arg_0]
.text:5B8E2278 FF 74 24	08						       push    [esp+arg_4]     ; struct	IOleClientSite **
.text:5B8E227C 8D 41 90							       lea     eax, [ecx-70h]
.text:5B8E227F F7 D9							       neg     ecx
.text:5B8E2281 1B C9							       sbb     ecx, ecx
.text:5B8E2283 23 C8							       and     ecx, eax	       ; this
.text:5B8E2285 E8 20 28	00 00						       call    ?IOleObject_GetClientSite@CComControlBase@ATL@@QAEJPAPAUIOleClientSite@@@Z ; ATL::CComControlBase::IOleObject_GetClientSite(IOleClientSite * *)
.text:5B8E228A C2 08 00							       retn    8
.text:5B8E228A						       ?GetClientSite@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAPAUIOleClientSite@@@Z endp
.text:5B8E228A
.text:5B8E228D
.text:5B8E228D						       ; =============== S U B R O U T I N E =======================================
.text:5B8E228D
.text:5B8E228D
.text:5B8E228D						       ; public: virtual long __stdcall	ATL::IOleObjectImpl<class CTrialEnd>::SetHostNames(unsigned short const	*, unsigned short const	*)
.text:5B8E228D						       ?SetHostNames@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPBG0@Z proc	near
.text:5B8E228D											       ; DATA XREF: .text:5B8E1304o
.text:5B8E228D											       ; .text:5B8E1534o
.text:5B8E228D 33 C0							       xor     eax, eax
.text:5B8E228F C2 0C 00							       retn    0Ch
.text:5B8E228F						       ?SetHostNames@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPBG0@Z endp
.text:5B8E228F
.text:5B8E2292
.text:5B8E2292						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2292
.text:5B8E2292
.text:5B8E2292						       ; public: virtual long __stdcall	ATL::IOleObjectImpl<class CTrialEnd>::Close(unsigned long)
.text:5B8E2292						       ?Close@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJK@Z proc near
.text:5B8E2292											       ; DATA XREF: .text:5B8E1308o
.text:5B8E2292											       ; .text:5B8E1538o
.text:5B8E2292
.text:5B8E2292						       arg_0	       = dword ptr  4
.text:5B8E2292						       arg_4	       = dword ptr  8
.text:5B8E2292
.text:5B8E2292 8B 4C 24	04						       mov     ecx, [esp+arg_0]
.text:5B8E2296 FF 74 24	08						       push    [esp+arg_4]     ; unsigned __int32
.text:5B8E229A 8D 41 90							       lea     eax, [ecx-70h]
.text:5B8E229D F7 D9							       neg     ecx
.text:5B8E229F 1B C9							       sbb     ecx, ecx
.text:5B8E22A1 23 C8							       and     ecx, eax	       ; this
.text:5B8E22A3 E8 4E 28	00 00						       call    ?IOleObject_Close@CComControlBase@ATL@@QAEJK@Z ;	ATL::CComControlBase::IOleObject_Close(ulong)
.text:5B8E22A8 C2 08 00							       retn    8
.text:5B8E22A8						       ?Close@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJK@Z endp
.text:5B8E22A8
.text:5B8E22AB
.text:5B8E22AB						       ; =============== S U B R O U T I N E =======================================
.text:5B8E22AB
.text:5B8E22AB
.text:5B8E22AB						       ; int __stdcall ATL::IOleObjectImpl<CTrialEnd>::EnumVerbs(int, LPENUMOLEVERB *ppenum)
.text:5B8E22AB						       ?EnumVerbs@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAPAUIEnumOLEVERB@@@Z proc near
.text:5B8E22AB											       ; DATA XREF: .text:5B8E1320o
.text:5B8E22AB											       ; .text:5B8E1550o
.text:5B8E22AB
.text:5B8E22AB						       ppenum	       = dword ptr  8
.text:5B8E22AB
.text:5B8E22AB 83 7C 24	08 00						       cmp     [esp+ppenum], 0
.text:5B8E22B0 75 07							       jnz     short loc_5B8E22B9
.text:5B8E22B2 B8 03 40	00 80						       mov     eax, 80004003h
.text:5B8E22B7 EB 0F							       jmp     short locret_5B8E22C8
.text:5B8E22B9						       ; ---------------------------------------------------------------------------
.text:5B8E22B9
.text:5B8E22B9						       loc_5B8E22B9:			       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::EnumVerbs(IEnumOLEVERB * *)+5j
.text:5B8E22B9 FF 74 24	08						       push    [esp+ppenum]    ; ppenum
.text:5B8E22BD 68 FC 11	8E 5B						       push    offset _CLSID_TrialEnd ;	clsid
.text:5B8E22C2 FF 15 A4	11 8E 5B					       call    ds:__imp__OleRegEnumVerbs@8 ; OleRegEnumVerbs(x,x)
.text:5B8E22C8
.text:5B8E22C8						       locret_5B8E22C8:			       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::EnumVerbs(IEnumOLEVERB * *)+Cj
.text:5B8E22C8 C2 08 00							       retn    8
.text:5B8E22C8						       ?EnumVerbs@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAPAUIEnumOLEVERB@@@Z endp
.text:5B8E22C8
.text:5B8E22CB
.text:5B8E22CB						       ; =============== S U B R O U T I N E =======================================
.text:5B8E22CB
.text:5B8E22CB
.text:5B8E22CB						       ; public: virtual long __stdcall	ATL::IOleObjectImpl<class CTrialEnd>::GetUserClassID(struct _GUID *)
.text:5B8E22CB						       ?GetUserClassID@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAU_GUID@@@Z proc	near
.text:5B8E22CB											       ; DATA XREF: .text:5B8E132Co
.text:5B8E22CB											       ; .text:5B8E155Co
.text:5B8E22CB
.text:5B8E22CB						       arg_4	       = dword ptr  8
.text:5B8E22CB
.text:5B8E22CB 57							       push    edi
.text:5B8E22CC 8B 7C 24	0C						       mov     edi, [esp+4+arg_4]
.text:5B8E22D0 85 FF							       test    edi, edi
.text:5B8E22D2 75 07							       jnz     short loc_5B8E22DB
.text:5B8E22D4 B8 03 40	00 80						       mov     eax, 80004003h
.text:5B8E22D9 EB 0D							       jmp     short loc_5B8E22E8
.text:5B8E22DB						       ; ---------------------------------------------------------------------------
.text:5B8E22DB
.text:5B8E22DB						       loc_5B8E22DB:			       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::GetUserClassID(_GUID *)+7j
.text:5B8E22DB 56							       push    esi
.text:5B8E22DC BE FC 11	8E 5B						       mov     esi, offset _CLSID_TrialEnd
.text:5B8E22E1 A5							       movsd
.text:5B8E22E2 A5							       movsd
.text:5B8E22E3 A5							       movsd
.text:5B8E22E4 A5							       movsd
.text:5B8E22E5 33 C0							       xor     eax, eax
.text:5B8E22E7 5E							       pop     esi
.text:5B8E22E8
.text:5B8E22E8						       loc_5B8E22E8:			       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::GetUserClassID(_GUID *)+Ej
.text:5B8E22E8 5F							       pop     edi
.text:5B8E22E9 C2 08 00							       retn    8
.text:5B8E22E9						       ?GetUserClassID@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAU_GUID@@@Z endp
.text:5B8E22E9
.text:5B8E22EC
.text:5B8E22EC						       ; =============== S U B R O U T I N E =======================================
.text:5B8E22EC
.text:5B8E22EC
.text:5B8E22EC						       ; int __stdcall ATL::IOleObjectImpl<CTrialEnd>::GetUserType(int,	DWORD dwFormOfType, LPOLESTR *pszUserType)
.text:5B8E22EC						       ?GetUserType@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAPAG@Z proc near
.text:5B8E22EC											       ; DATA XREF: .text:5B8E1330o
.text:5B8E22EC											       ; .text:5B8E1560o
.text:5B8E22EC
.text:5B8E22EC						       dwFormOfType    = dword ptr  8
.text:5B8E22EC						       pszUserType     = dword ptr  0Ch
.text:5B8E22EC
.text:5B8E22EC FF 74 24	0C						       push    [esp+pszUserType] ; pszUserType
.text:5B8E22F0 FF 74 24	0C						       push    [esp+4+dwFormOfType] ; dwFormOfType
.text:5B8E22F4 68 FC 11	8E 5B						       push    offset _CLSID_TrialEnd ;	clsid
.text:5B8E22F9 FF 15 A0	11 8E 5B					       call    ds:__imp__OleRegGetUserType@12 ;	OleRegGetUserType(x,x,x)
.text:5B8E22FF C2 0C 00							       retn    0Ch
.text:5B8E22FF						       ?GetUserType@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAPAG@Z endp
.text:5B8E22FF
.text:5B8E2302
.text:5B8E2302						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2302
.text:5B8E2302
.text:5B8E2302						       ; public: virtual long __stdcall	ATL::IOleObjectImpl<class CTrialEnd>::Unadvise(unsigned	long)
.text:5B8E2302						       ?Unadvise@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJK@Z proc near
.text:5B8E2302											       ; DATA XREF: .text:5B8E1340o
.text:5B8E2302											       ; .text:5B8E1570o
.text:5B8E2302
.text:5B8E2302						       arg_0	       = dword ptr  4
.text:5B8E2302						       arg_4	       = dword ptr  8
.text:5B8E2302
.text:5B8E2302 8B 4C 24	04						       mov     ecx, [esp+arg_0]
.text:5B8E2306 8D 41 90							       lea     eax, [ecx-70h]
.text:5B8E2309 F7 D9							       neg     ecx
.text:5B8E230B 1B C9							       sbb     ecx, ecx
.text:5B8E230D 23 C8							       and     ecx, eax
.text:5B8E230F 8B 49 0C							       mov     ecx, [ecx+0Ch]
.text:5B8E2312 85 C9							       test    ecx, ecx
.text:5B8E2314 B8 05 40	00 80						       mov     eax, 80004005h
.text:5B8E2319 74 0A							       jz      short locret_5B8E2325
.text:5B8E231B FF 74 24	08						       push    [esp+arg_4]
.text:5B8E231F 8B 01							       mov     eax, [ecx]
.text:5B8E2321 51							       push    ecx
.text:5B8E2322 FF 50 10							       call    dword ptr [eax+10h]
.text:5B8E2325
.text:5B8E2325						       locret_5B8E2325:			       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::Unadvise(ulong)+17j
.text:5B8E2325 C2 08 00							       retn    8
.text:5B8E2325						       ?Unadvise@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJK@Z endp
.text:5B8E2325
.text:5B8E2328
.text:5B8E2328						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2328
.text:5B8E2328
.text:5B8E2328						       ; public: virtual long __stdcall	ATL::IOleObjectImpl<class CTrialEnd>::EnumAdvise(struct	IEnumSTATDATA *	*)
.text:5B8E2328						       ?EnumAdvise@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAPAUIEnumSTATDATA@@@Z proc near
.text:5B8E2328											       ; DATA XREF: .text:5B8E1344o
.text:5B8E2328											       ; .text:5B8E1574o
.text:5B8E2328
.text:5B8E2328						       arg_0	       = dword ptr  4
.text:5B8E2328						       arg_4	       = dword ptr  8
.text:5B8E2328
.text:5B8E2328 8B 4C 24	04						       mov     ecx, [esp+arg_0]
.text:5B8E232C 8D 41 90							       lea     eax, [ecx-70h]
.text:5B8E232F F7 D9							       neg     ecx
.text:5B8E2331 1B C9							       sbb     ecx, ecx
.text:5B8E2333 23 C8							       and     ecx, eax
.text:5B8E2335 8B 49 0C							       mov     ecx, [ecx+0Ch]
.text:5B8E2338 85 C9							       test    ecx, ecx
.text:5B8E233A B8 05 40	00 80						       mov     eax, 80004005h
.text:5B8E233F 74 0A							       jz      short locret_5B8E234B
.text:5B8E2341 FF 74 24	08						       push    [esp+arg_4]
.text:5B8E2345 8B 01							       mov     eax, [ecx]
.text:5B8E2347 51							       push    ecx
.text:5B8E2348 FF 50 14							       call    dword ptr [eax+14h]
.text:5B8E234B
.text:5B8E234B						       locret_5B8E234B:			       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::EnumAdvise(IEnumSTATDATA * *)+17j
.text:5B8E234B C2 08 00							       retn    8
.text:5B8E234B						       ?EnumAdvise@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJPAPAUIEnumSTATDATA@@@Z endp
.text:5B8E234B
.text:5B8E234E
.text:5B8E234E						       ; =============== S U B R O U T I N E =======================================
.text:5B8E234E
.text:5B8E234E
.text:5B8E234E						       ; int __stdcall ATL::IOleObjectImpl<CTrialEnd>::GetMiscStatus(int, DWORD	dwAspect, DWORD	*pdwStatus)
.text:5B8E234E						       ?GetMiscStatus@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAK@Z proc near
.text:5B8E234E											       ; DATA XREF: .text:5B8E1348o
.text:5B8E234E											       ; .text:5B8E1578o
.text:5B8E234E
.text:5B8E234E						       dwAspect	       = dword ptr  8
.text:5B8E234E						       pdwStatus       = dword ptr  0Ch
.text:5B8E234E
.text:5B8E234E FF 74 24	0C						       push    [esp+pdwStatus] ; pdwStatus
.text:5B8E2352 FF 74 24	0C						       push    [esp+4+dwAspect]	; dwAspect
.text:5B8E2356 68 FC 11	8E 5B						       push    offset _CLSID_TrialEnd ;	clsid
.text:5B8E235B FF 15 9C	11 8E 5B					       call    ds:__imp__OleRegGetMiscStatus@12	; OleRegGetMiscStatus(x,x,x)
.text:5B8E2361 C2 0C 00							       retn    0Ch
.text:5B8E2361						       ?GetMiscStatus@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJKPAK@Z endp
.text:5B8E2361
.text:5B8E2364
.text:5B8E2364						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2364
.text:5B8E2364
.text:5B8E2364						       ; int __stdcall ATL::IViewObjectExImpl<CTrialEnd>::SetAdvise(int, int, int, struct IUnknown *)
.text:5B8E2364						       ?SetAdvise@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKKPAUIAdviseSink@@@Z proc near
.text:5B8E2364											       ; DATA XREF: .text:5B8E12A8o
.text:5B8E2364											       ; .text:5B8E14D8o
.text:5B8E2364
.text:5B8E2364						       arg_0	       = dword ptr  4
.text:5B8E2364						       arg_C	       = dword ptr  10h
.text:5B8E2364
.text:5B8E2364 8B 44 24	04						       mov     eax, [esp+arg_0]
.text:5B8E2368 FF 74 24	10						       push    [esp+arg_C]     ; struct	IUnknown *
.text:5B8E236C 8B C8							       mov     ecx, eax
.text:5B8E236E 83 C0 88							       add     eax, 0FFFFFF88h
.text:5B8E2371 F7 D9							       neg     ecx
.text:5B8E2373 1B C9							       sbb     ecx, ecx
.text:5B8E2375 23 C8							       and     ecx, eax
.text:5B8E2377 83 C1 14							       add     ecx, 14h
.text:5B8E237A 51							       push    ecx	       ; struct	IUnknown **
.text:5B8E237B E8 7C 11	00 00						       call    ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z ; ATL::AtlComPtrAssign(IUnknown * *,IUnknown	*)
.text:5B8E2380 33 C0							       xor     eax, eax
.text:5B8E2382 C2 10 00							       retn    10h
.text:5B8E2382						       ?SetAdvise@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJKKPAUIAdviseSink@@@Z endp
.text:5B8E2382
.text:5B8E2385
.text:5B8E2385						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2385
.text:5B8E2385
.text:5B8E2385						       ; public: virtual long __stdcall	ATL::IViewObjectExImpl<class CTrialEnd>::GetAdvise(unsigned long *, unsigned long *, struct IAdviseSink	* *)
.text:5B8E2385						       ?GetAdvise@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJPAK0PAPAUIAdviseSink@@@Z proc near
.text:5B8E2385											       ; DATA XREF: .text:5B8E12ACo
.text:5B8E2385											       ; .text:5B8E14DCo
.text:5B8E2385
.text:5B8E2385						       arg_0	       = dword ptr  4
.text:5B8E2385						       arg_C	       = dword ptr  10h
.text:5B8E2385
.text:5B8E2385 8B 44 24	04						       mov     eax, [esp+arg_0]
.text:5B8E2389 8D 48 88							       lea     ecx, [eax-78h]
.text:5B8E238C F7 D8							       neg     eax
.text:5B8E238E 1B C0							       sbb     eax, eax
.text:5B8E2390 23 C1							       and     eax, ecx
.text:5B8E2392 8B 4C 24	10						       mov     ecx, [esp+arg_C]
.text:5B8E2396 85 C9							       test    ecx, ecx
.text:5B8E2398 74 12							       jz      short loc_5B8E23AC
.text:5B8E239A 8B 50 14							       mov     edx, [eax+14h]
.text:5B8E239D 89 11							       mov     [ecx], edx
.text:5B8E239F 8B 40 14							       mov     eax, [eax+14h]
.text:5B8E23A2 85 C0							       test    eax, eax
.text:5B8E23A4 74 06							       jz      short loc_5B8E23AC
.text:5B8E23A6 8B 08							       mov     ecx, [eax]
.text:5B8E23A8 50							       push    eax
.text:5B8E23A9 FF 51 04							       call    dword ptr [ecx+4]
.text:5B8E23AC
.text:5B8E23AC						       loc_5B8E23AC:			       ; CODE XREF: ATL::IViewObjectExImpl<CTrialEnd>::GetAdvise(ulong *,ulong *,IAdviseSink * *)+13j
.text:5B8E23AC											       ; ATL::IViewObjectExImpl<CTrialEnd>::GetAdvise(ulong *,ulong *,IAdviseSink * *)+1Fj
.text:5B8E23AC 33 C0							       xor     eax, eax
.text:5B8E23AE C2 10 00							       retn    10h
.text:5B8E23AE						       ?GetAdvise@?$IViewObjectExImpl@VCTrialEnd@@@ATL@@UAGJPAK0PAPAUIAdviseSink@@@Z endp
.text:5B8E23AE
.text:5B8E23B1
.text:5B8E23B1						       ; =============== S U B R O U T I N E =======================================
.text:5B8E23B1
.text:5B8E23B1
.text:5B8E23B1						       ; int __stdcall ATL::CComObject<CTrialEnd>::QueryInterface(int, struct _GUID *, void **)
.text:5B8E23B1						       ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z proc near
.text:5B8E23B1											       ; CODE XREF: [thunk]:ATL::CComObject<CTrialEnd>::QueryInterface`adjustor{4}' (_GUID const &,void * *)+5j
.text:5B8E23B1											       ; [thunk]:ATL::CComObject<CTrialEnd>::QueryInterface`adjustor{8}' (_GUID const &,void * *)+5j ...
.text:5B8E23B1
.text:5B8E23B1						       arg_0	       = dword ptr  4
.text:5B8E23B1						       arg_4	       = dword ptr  8
.text:5B8E23B1						       arg_8	       = dword ptr  0Ch
.text:5B8E23B1
.text:5B8E23B1 FF 74 24	0C						       push    [esp+arg_8]     ; void **
.text:5B8E23B5 8B 44 24	08						       mov     eax, [esp+4+arg_0]
.text:5B8E23B9 FF 74 24	0C						       push    [esp+4+arg_4]   ; struct	_GUID *
.text:5B8E23BD 83 C0 9C							       add     eax, 0FFFFFF9Ch
.text:5B8E23C0 68 C8 13	8E 5B						       push    offset ?_entries@?1??_GetEntries@CTrialEnd@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ@4QBU34@B ; struct ATL::_ATL_INTMAP_ENTRY *
.text:5B8E23C5 50							       push    eax	       ; void *
.text:5B8E23C6 E8 9E 10	00 00						       call    ?AtlInternalQueryInterface@ATL@@YGJPAXPBU_ATL_INTMAP_ENTRY@1@ABU_GUID@@PAPAX@Z ;	ATL::AtlInternalQueryInterface(void *,ATL::_ATL_INTMAP_ENTRY const *,_GUID const &,void	* *)
.text:5B8E23CB C2 0C 00							       retn    0Ch
.text:5B8E23CB						       ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z endp
.text:5B8E23CB
.text:5B8E23CE
.text:5B8E23CE						       ; =============== S U B R O U T I N E =======================================
.text:5B8E23CE
.text:5B8E23CE
.text:5B8E23CE						       ; [thunk]:public: virtual long __stdcall	ATL::CComObject<class CTrialEnd>::QueryInterface`adjustor{4}' (struct _GUID const &, void * *)
.text:5B8E23CE						       ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@W3AGJABU_GUID@@PAPAX@Z proc near
.text:5B8E23CE											       ; DATA XREF: .text:const	ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IPersistStreamInitImpl<CTrialEnd>'}o
.text:5B8E23CE
.text:5B8E23CE						       arg_0	       = dword ptr  4
.text:5B8E23CE
.text:5B8E23CE 83 6C 24	04 04						       sub     [esp+arg_0], 4
.text:5B8E23D3 E9 D9 FF	FF FF						       jmp     ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<CTrialEnd>::QueryInterface(_GUID const &,void * *)
.text:5B8E23D3						       ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@W3AGJABU_GUID@@PAPAX@Z endp
.text:5B8E23D3
.text:5B8E23D8
.text:5B8E23D8						       ; =============== S U B R O U T I N E =======================================
.text:5B8E23D8
.text:5B8E23D8
.text:5B8E23D8						       ; [thunk]:public: virtual long __stdcall	ATL::CComObject<class CTrialEnd>::QueryInterface`adjustor{8}' (struct _GUID const &, void * *)
.text:5B8E23D8						       ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@W7AGJABU_GUID@@PAPAX@Z proc near
.text:5B8E23D8											       ; DATA XREF: .text:const	ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IOleControlImpl<CTrialEnd>'}o
.text:5B8E23D8
.text:5B8E23D8						       arg_0	       = dword ptr  4
.text:5B8E23D8
.text:5B8E23D8 83 6C 24	04 08						       sub     [esp+arg_0], 8
.text:5B8E23DD E9 CF FF	FF FF						       jmp     ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<CTrialEnd>::QueryInterface(_GUID const &,void * *)
.text:5B8E23DD						       ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@W7AGJABU_GUID@@PAPAX@Z endp
.text:5B8E23DD
.text:5B8E23E2
.text:5B8E23E2						       ; =============== S U B R O U T I N E =======================================
.text:5B8E23E2
.text:5B8E23E2
.text:5B8E23E2						       ; [thunk]:public: virtual long __stdcall	ATL::CComObject<class CTrialEnd>::QueryInterface`adjustor{12}' (struct _GUID const &, void * *)
.text:5B8E23E2						       ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@WM@AGJABU_GUID@@PAPAX@Z proc near
.text:5B8E23E2											       ; DATA XREF: .text:const	ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IOleObjectImpl<CTrialEnd>'}o
.text:5B8E23E2
.text:5B8E23E2						       arg_0	       = dword ptr  4
.text:5B8E23E2
.text:5B8E23E2 83 6C 24	04 0C						       sub     [esp+arg_0], 0Ch
.text:5B8E23E7 E9 C5 FF	FF FF						       jmp     ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<CTrialEnd>::QueryInterface(_GUID const &,void * *)
.text:5B8E23E7						       ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@WM@AGJABU_GUID@@PAPAX@Z endp
.text:5B8E23E7
.text:5B8E23EC
.text:5B8E23EC						       ; =============== S U B R O U T I N E =======================================
.text:5B8E23EC
.text:5B8E23EC
.text:5B8E23EC						       ; [thunk]:public: virtual long __stdcall	ATL::CComObject<class CTrialEnd>::QueryInterface`adjustor{16}' (struct _GUID const &, void * *)
.text:5B8E23EC						       ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@WBA@AGJABU_GUID@@PAPAX@Z proc near
.text:5B8E23EC											       ; DATA XREF: .text:const	ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IOleInPlaceActiveObjectImpl<CTrialEnd>'}o
.text:5B8E23EC
.text:5B8E23EC						       arg_0	       = dword ptr  4
.text:5B8E23EC
.text:5B8E23EC 83 6C 24	04 10						       sub     [esp+arg_0], 10h
.text:5B8E23F1 E9 BB FF	FF FF						       jmp     ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<CTrialEnd>::QueryInterface(_GUID const &,void * *)
.text:5B8E23F1						       ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@WBA@AGJABU_GUID@@PAPAX@Z endp
.text:5B8E23F1
.text:5B8E23F6
.text:5B8E23F6						       ; =============== S U B R O U T I N E =======================================
.text:5B8E23F6
.text:5B8E23F6
.text:5B8E23F6						       ; [thunk]:public: virtual long __stdcall	ATL::CComObject<class CTrialEnd>::QueryInterface`adjustor{20}' (struct _GUID const &, void * *)
.text:5B8E23F6						       ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@WBE@AGJABU_GUID@@PAPAX@Z proc near
.text:5B8E23F6											       ; DATA XREF: .text:const	ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IViewObjectExImpl<CTrialEnd>'}o
.text:5B8E23F6
.text:5B8E23F6						       arg_0	       = dword ptr  4
.text:5B8E23F6
.text:5B8E23F6 83 6C 24	04 14						       sub     [esp+arg_0], 14h
.text:5B8E23FB E9 B1 FF	FF FF						       jmp     ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<CTrialEnd>::QueryInterface(_GUID const &,void * *)
.text:5B8E23FB						       ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@WBE@AGJABU_GUID@@PAPAX@Z endp
.text:5B8E23FB
.text:5B8E2400
.text:5B8E2400						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2400
.text:5B8E2400
.text:5B8E2400						       ; [thunk]:public: virtual long __stdcall	ATL::CComObject<class CTrialEnd>::QueryInterface`adjustor{24}' (struct _GUID const &, void * *)
.text:5B8E2400						       ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@WBI@AGJABU_GUID@@PAPAX@Z proc near
.text:5B8E2400											       ; DATA XREF: .text:const	ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>'}o
.text:5B8E2400
.text:5B8E2400						       arg_0	       = dword ptr  4
.text:5B8E2400
.text:5B8E2400 83 6C 24	04 18						       sub     [esp+arg_0], 18h
.text:5B8E2405 E9 A7 FF	FF FF						       jmp     ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<CTrialEnd>::QueryInterface(_GUID const &,void * *)
.text:5B8E2405						       ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@WBI@AGJABU_GUID@@PAPAX@Z endp
.text:5B8E2405
.text:5B8E240A
.text:5B8E240A						       ; =============== S U B R O U T I N E =======================================
.text:5B8E240A
.text:5B8E240A
.text:5B8E240A						       ; [thunk]:public: virtual long __stdcall	ATL::CComObject<class CTrialEnd>::QueryInterface`adjustor{28}' (struct _GUID const &, void * *)
.text:5B8E240A						       ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@WBM@AGJABU_GUID@@PAPAX@Z proc near
.text:5B8E240A											       ; DATA XREF: .text:const	ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IObjectSafetyImpl<CTrialEnd>'}o
.text:5B8E240A
.text:5B8E240A						       arg_0	       = dword ptr  4
.text:5B8E240A
.text:5B8E240A 83 6C 24	04 1C						       sub     [esp+arg_0], 1Ch
.text:5B8E240F E9 9D FF	FF FF						       jmp     ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComObject<CTrialEnd>::QueryInterface(_GUID const &,void * *)
.text:5B8E240F						       ?QueryInterface@?$CComObject@VCTrialEnd@@@ATL@@WBM@AGJABU_GUID@@PAPAX@Z endp
.text:5B8E240F
.text:5B8E2414
.text:5B8E2414						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2414
.text:5B8E2414						       ; Attributes: bp-based frame
.text:5B8E2414
.text:5B8E2414						       ; int __thiscall	CTrialEnd::ProcessWindowMessage(CTrialEnd *this, HWND, unsigned	int, unsigned int, __int32, __int32 *, unsigned	__int32)
.text:5B8E2414						       ?ProcessWindowMessage@CTrialEnd@@UAEHPAUHWND__@@IIJAAJK@Z proc near
.text:5B8E2414											       ; DATA XREF: .text:const	ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::CWindowImpl<CTrialEnd>'}o
.text:5B8E2414
.text:5B8E2414						       arg_4	       = dword ptr  0Ch
.text:5B8E2414						       arg_8	       = dword ptr  10h
.text:5B8E2414						       arg_C	       = dword ptr  14h
.text:5B8E2414						       arg_10	       = dword ptr  18h
.text:5B8E2414						       arg_14	       = dword ptr  1Ch
.text:5B8E2414
.text:5B8E2414 55							       push    ebp
.text:5B8E2415 8B EC							       mov     ebp, esp
.text:5B8E2417 83 7D 1C	00						       cmp     [ebp+arg_14], 0
.text:5B8E241B 56							       push    esi
.text:5B8E241C 75 73							       jnz     short loc_5B8E2491
.text:5B8E241E 83 7D 0C	0F						       cmp     [ebp+arg_4], 0Fh
.text:5B8E2422 75 1C							       jnz     short loc_5B8E2440
.text:5B8E2424 8D 45 0C							       lea     eax, [ebp+arg_4]
.text:5B8E2427 50							       push    eax	       ; int *
.text:5B8E2428 FF 75 14							       push    [ebp+arg_C]     ; __int32
.text:5B8E242B 33 F6							       xor     esi, esi
.text:5B8E242D FF 75 10							       push    [ebp+arg_8]     ; unsigned int
.text:5B8E2430 46							       inc     esi
.text:5B8E2431 6A 0F							       push    0Fh	       ; unsigned int
.text:5B8E2433 83 C1 B8							       add     ecx, 0FFFFFFB8h ; this
.text:5B8E2436 89 75 0C							       mov     [ebp+arg_4], esi
.text:5B8E2439 E8 11 16	00 00						       call    ?OnPaint@CComControlBase@ATL@@QAEJIIJAAH@Z ; ATL::CComControlBase::OnPaint(uint,uint,long,int &)
.text:5B8E243E EB 42							       jmp     short loc_5B8E2482
.text:5B8E2440						       ; ---------------------------------------------------------------------------
.text:5B8E2440
.text:5B8E2440						       loc_5B8E2440:			       ; CODE XREF: CTrialEnd::ProcessWindowMessage(HWND__ *,uint,uint,long,long &,ulong)+Ej
.text:5B8E2440 83 7D 0C	07						       cmp     [ebp+arg_4], 7
.text:5B8E2444 75 1C							       jnz     short loc_5B8E2462
.text:5B8E2446 8D 45 0C							       lea     eax, [ebp+arg_4]
.text:5B8E2449 50							       push    eax	       ; int *
.text:5B8E244A FF 75 14							       push    [ebp+arg_C]     ; __int32
.text:5B8E244D 33 F6							       xor     esi, esi
.text:5B8E244F FF 75 10							       push    [ebp+arg_8]     ; unsigned int
.text:5B8E2452 46							       inc     esi
.text:5B8E2453 6A 07							       push    7	       ; unsigned int
.text:5B8E2455 83 C1 B8							       add     ecx, 0FFFFFFB8h ; this
.text:5B8E2458 89 75 0C							       mov     [ebp+arg_4], esi
.text:5B8E245B E8 38 00	00 00						       call    ?OnSetFocus@CComControlBase@ATL@@QAEJIIJAAH@Z ; ATL::CComControlBase::OnSetFocus(uint,uint,long,int &)
.text:5B8E2460 EB 20							       jmp     short loc_5B8E2482
.text:5B8E2462						       ; ---------------------------------------------------------------------------
.text:5B8E2462
.text:5B8E2462						       loc_5B8E2462:			       ; CODE XREF: CTrialEnd::ProcessWindowMessage(HWND__ *,uint,uint,long,long &,ulong)+30j
.text:5B8E2462 83 7D 0C	08						       cmp     [ebp+arg_4], 8
.text:5B8E2466 75 29							       jnz     short loc_5B8E2491
.text:5B8E2468 8D 45 0C							       lea     eax, [ebp+arg_4]
.text:5B8E246B 50							       push    eax	       ; int *
.text:5B8E246C FF 75 14							       push    [ebp+arg_C]     ; __int32
.text:5B8E246F 33 F6							       xor     esi, esi
.text:5B8E2471 FF 75 10							       push    [ebp+arg_8]     ; unsigned int
.text:5B8E2474 46							       inc     esi
.text:5B8E2475 6A 08							       push    8	       ; unsigned int
.text:5B8E2477 83 C1 B8							       add     ecx, 0FFFFFFB8h ; this
.text:5B8E247A 89 75 0C							       mov     [ebp+arg_4], esi
.text:5B8E247D E8 60 00	00 00						       call    ?OnKillFocus@CComControlBase@ATL@@QAEJIIJAAH@Z ;	ATL::CComControlBase::OnKillFocus(uint,uint,long,int &)
.text:5B8E2482
.text:5B8E2482						       loc_5B8E2482:			       ; CODE XREF: CTrialEnd::ProcessWindowMessage(HWND__ *,uint,uint,long,long &,ulong)+2Aj
.text:5B8E2482											       ; CTrialEnd::ProcessWindowMessage(HWND__	*,uint,uint,long,long &,ulong)+4Cj
.text:5B8E2482 83 7D 0C	00						       cmp     [ebp+arg_4], 0
.text:5B8E2486 8B 4D 18							       mov     ecx, [ebp+arg_10]
.text:5B8E2489 89 01							       mov     [ecx], eax
.text:5B8E248B 74 04							       jz      short loc_5B8E2491
.text:5B8E248D 8B C6							       mov     eax, esi
.text:5B8E248F EB 02							       jmp     short loc_5B8E2493
.text:5B8E2491						       ; ---------------------------------------------------------------------------
.text:5B8E2491
.text:5B8E2491						       loc_5B8E2491:			       ; CODE XREF: CTrialEnd::ProcessWindowMessage(HWND__ *,uint,uint,long,long &,ulong)+8j
.text:5B8E2491											       ; CTrialEnd::ProcessWindowMessage(HWND__	*,uint,uint,long,long &,ulong)+52j ...
.text:5B8E2491 33 C0							       xor     eax, eax
.text:5B8E2493
.text:5B8E2493						       loc_5B8E2493:			       ; CODE XREF: CTrialEnd::ProcessWindowMessage(HWND__ *,uint,uint,long,long &,ulong)+7Bj
.text:5B8E2493 5E							       pop     esi
.text:5B8E2494 5D							       pop     ebp
.text:5B8E2495 C2 18 00							       retn    18h
.text:5B8E2495						       ?ProcessWindowMessage@CTrialEnd@@UAEHPAUHWND__@@IIJAAJK@Z endp
.text:5B8E2495
.text:5B8E2498
.text:5B8E2498						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2498
.text:5B8E2498						       ; Attributes: bp-based frame
.text:5B8E2498
.text:5B8E2498						       ; __int32 __thiscall ATL::CComControlBase::OnSetFocus(ATL::CComControlBase *this, unsigned int, unsigned	int, __int32, int *)
.text:5B8E2498						       ?OnSetFocus@CComControlBase@ATL@@QAEJIIJAAH@Z proc near
.text:5B8E2498											       ; CODE XREF: CTrialEnd::ProcessWindowMessage(HWND__ *,uint,uint,long,long &,ulong)+47p
.text:5B8E2498
.text:5B8E2498						       var_4	       = dword ptr -4
.text:5B8E2498
.text:5B8E2498 55							       push    ebp
.text:5B8E2499 8B EC							       mov     ebp, esp
.text:5B8E249B 51							       push    ecx
.text:5B8E249C 56							       push    esi
.text:5B8E249D 8B F1							       mov     esi, ecx
.text:5B8E249F 8B 46 10							       mov     eax, [esi+10h]
.text:5B8E24A2 33 C9							       xor     ecx, ecx
.text:5B8E24A4 85 C0							       test    eax, eax
.text:5B8E24A6 89 4D FC							       mov     [ebp+var_4], ecx
.text:5B8E24A9 74 11							       jz      short loc_5B8E24BC
.text:5B8E24AB 8B 08							       mov     ecx, [eax]
.text:5B8E24AD 8D 55 FC							       lea     edx, [ebp+var_4]
.text:5B8E24B0 52							       push    edx
.text:5B8E24B1 68 9C 19	8E 5B						       push    offset _IID_IOleControlSite
.text:5B8E24B6 50							       push    eax
.text:5B8E24B7 FF 11							       call    dword ptr [ecx]
.text:5B8E24B9 8B 4D FC							       mov     ecx, [ebp+var_4]
.text:5B8E24BC
.text:5B8E24BC						       loc_5B8E24BC:			       ; CODE XREF: ATL::CComControlBase::OnSetFocus(uint,uint,long,int	&)+11j
.text:5B8E24BC F6 46 44	04						       test    byte ptr	[esi+44h], 4
.text:5B8E24C0 5E							       pop     esi
.text:5B8E24C1 74 0F							       jz      short loc_5B8E24D2
.text:5B8E24C3 85 C9							       test    ecx, ecx
.text:5B8E24C5 74 15							       jz      short loc_5B8E24DC
.text:5B8E24C7 8B 01							       mov     eax, [ecx]
.text:5B8E24C9 6A 01							       push    1
.text:5B8E24CB 51							       push    ecx
.text:5B8E24CC FF 50 20							       call    dword ptr [eax+20h]
.text:5B8E24CF 8B 4D FC							       mov     ecx, [ebp+var_4]
.text:5B8E24D2
.text:5B8E24D2						       loc_5B8E24D2:			       ; CODE XREF: ATL::CComControlBase::OnSetFocus(uint,uint,long,int	&)+29j
.text:5B8E24D2 85 C9							       test    ecx, ecx
.text:5B8E24D4 74 06							       jz      short loc_5B8E24DC
.text:5B8E24D6 8B 01							       mov     eax, [ecx]
.text:5B8E24D8 51							       push    ecx
.text:5B8E24D9 FF 50 08							       call    dword ptr [eax+8]
.text:5B8E24DC
.text:5B8E24DC						       loc_5B8E24DC:			       ; CODE XREF: ATL::CComControlBase::OnSetFocus(uint,uint,long,int	&)+2Dj
.text:5B8E24DC											       ; ATL::CComControlBase::OnSetFocus(uint,uint,long,int &)+3Cj
.text:5B8E24DC 33 C0							       xor     eax, eax
.text:5B8E24DE C9							       leave
.text:5B8E24DF C2 10 00							       retn    10h
.text:5B8E24DF						       ?OnSetFocus@CComControlBase@ATL@@QAEJIIJAAH@Z endp
.text:5B8E24DF
.text:5B8E24E2
.text:5B8E24E2						       ; =============== S U B R O U T I N E =======================================
.text:5B8E24E2
.text:5B8E24E2						       ; Attributes: bp-based frame
.text:5B8E24E2
.text:5B8E24E2						       ; __int32 __thiscall ATL::CComControlBase::OnKillFocus(ATL::CComControlBase *this, unsigned int,	unsigned int, __int32, int *)
.text:5B8E24E2						       ?OnKillFocus@CComControlBase@ATL@@QAEJIIJAAH@Z proc near
.text:5B8E24E2											       ; CODE XREF: CTrialEnd::ProcessWindowMessage(HWND__ *,uint,uint,long,long &,ulong)+69p
.text:5B8E24E2
.text:5B8E24E2						       var_4	       = dword ptr -4
.text:5B8E24E2
.text:5B8E24E2 55							       push    ebp
.text:5B8E24E3 8B EC							       mov     ebp, esp
.text:5B8E24E5 51							       push    ecx
.text:5B8E24E6 56							       push    esi
.text:5B8E24E7 8B F1							       mov     esi, ecx
.text:5B8E24E9 8B 46 10							       mov     eax, [esi+10h]
.text:5B8E24EC 33 C9							       xor     ecx, ecx
.text:5B8E24EE 85 C0							       test    eax, eax
.text:5B8E24F0 89 4D FC							       mov     [ebp+var_4], ecx
.text:5B8E24F3 74 11							       jz      short loc_5B8E2506
.text:5B8E24F5 8B 08							       mov     ecx, [eax]
.text:5B8E24F7 8D 55 FC							       lea     edx, [ebp+var_4]
.text:5B8E24FA 52							       push    edx
.text:5B8E24FB 68 9C 19	8E 5B						       push    offset _IID_IOleControlSite
.text:5B8E2500 50							       push    eax
.text:5B8E2501 FF 11							       call    dword ptr [ecx]
.text:5B8E2503 8B 4D FC							       mov     ecx, [ebp+var_4]
.text:5B8E2506
.text:5B8E2506						       loc_5B8E2506:			       ; CODE XREF: ATL::CComControlBase::OnKillFocus(uint,uint,long,int &)+11j
.text:5B8E2506 F6 46 44	04						       test    byte ptr	[esi+44h], 4
.text:5B8E250A 5E							       pop     esi
.text:5B8E250B 74 0F							       jz      short loc_5B8E251C
.text:5B8E250D 85 C9							       test    ecx, ecx
.text:5B8E250F 74 15							       jz      short loc_5B8E2526
.text:5B8E2511 8B 01							       mov     eax, [ecx]
.text:5B8E2513 6A 00							       push    0
.text:5B8E2515 51							       push    ecx
.text:5B8E2516 FF 50 20							       call    dword ptr [eax+20h]
.text:5B8E2519 8B 4D FC							       mov     ecx, [ebp+var_4]
.text:5B8E251C
.text:5B8E251C						       loc_5B8E251C:			       ; CODE XREF: ATL::CComControlBase::OnKillFocus(uint,uint,long,int &)+29j
.text:5B8E251C 85 C9							       test    ecx, ecx
.text:5B8E251E 74 06							       jz      short loc_5B8E2526
.text:5B8E2520 8B 01							       mov     eax, [ecx]
.text:5B8E2522 51							       push    ecx
.text:5B8E2523 FF 50 08							       call    dword ptr [eax+8]
.text:5B8E2526
.text:5B8E2526						       loc_5B8E2526:			       ; CODE XREF: ATL::CComControlBase::OnKillFocus(uint,uint,long,int &)+2Dj
.text:5B8E2526											       ; ATL::CComControlBase::OnKillFocus(uint,uint,long,int &)+3Cj
.text:5B8E2526 33 C0							       xor     eax, eax
.text:5B8E2528 C9							       leave
.text:5B8E2529 C2 10 00							       retn    10h
.text:5B8E2529						       ?OnKillFocus@CComControlBase@ATL@@QAEJIIJAAH@Z endp
.text:5B8E2529
.text:5B8E252C
.text:5B8E252C						       ; =============== S U B R O U T I N E =======================================
.text:5B8E252C
.text:5B8E252C
.text:5B8E252C						       ; int __stdcall ATL::CComControl<CTrialEnd>::CreateControlWindow(HWND hWndParent, struct	tagRECT	*)
.text:5B8E252C						       ?CreateControlWindow@?$CComControl@VCTrialEnd@@@ATL@@UAEPAUHWND__@@PAU3@AAUtagRECT@@@Z proc near
.text:5B8E252C											       ; DATA XREF: .text:const	ATL::CComContainedObject<CTrialEnd>::`vftable'{for `ATL::CComControlBase'}o
.text:5B8E252C
.text:5B8E252C						       hWndParent      = dword ptr  4
.text:5B8E252C						       arg_4	       = dword ptr  8
.text:5B8E252C
.text:5B8E252C 56							       push    esi
.text:5B8E252D 8D 71 48							       lea     esi, [ecx+48h]
.text:5B8E2530 8D 46 18							       lea     eax, [esi+18h]
.text:5B8E2533 50							       push    eax	       ; __int32 (__stdcall **)(HWND, unsigned int, unsigned int, __int32)
.text:5B8E2534 B9 60 70	8E 5B						       mov     ecx, offset ?wc@?1??GetWndClassInfo@?$CWindowImpl@VCTrialEnd@@@ATL@@SIAAVCWndClassInfo@3@XZ@4V43@A ; this
.text:5B8E2539 E8 68 16	00 00						       call    ?Register@CWndClassInfo@ATL@@QAEGPAP6GJPAUHWND__@@IIJ@Z@Z ; ATL::CWndClassInfo::Register(long (**)(HWND__ *,uint,uint,long))
.text:5B8E253E 8B CE							       mov     ecx, esi	       ; this
.text:5B8E2540 50							       push    eax	       ; unsigned __int16
.text:5B8E2541 33 C0							       xor     eax, eax
.text:5B8E2543 50							       push    eax	       ; hMenu
.text:5B8E2544 50							       push    eax	       ; dwExStyle
.text:5B8E2545 68 00 00	00 50						       push    50000000h       ; unsigned __int32
.text:5B8E254A 50							       push    eax	       ; lpWindowName
.text:5B8E254B FF 74 24	20						       push    [esp+18h+arg_4] ; struct	tagRECT	*
.text:5B8E254F FF 74 24	20						       push    [esp+1Ch+hWndParent] ; hWndParent
.text:5B8E2553 E8 BA 17	00 00						       call    ?Create@CWindowImplBase@ATL@@QAEPAUHWND__@@PAU3@AAUtagRECT@@PBGKKIG@Z ; ATL::CWindowImplBase::Create(HWND__ *,tagRECT &,ushort const *,ulong,ulong,uint,ushort)
.text:5B8E2558 5E							       pop     esi
.text:5B8E2559 C2 08 00							       retn    8
.text:5B8E2559						       ?CreateControlWindow@?$CComControl@VCTrialEnd@@@ATL@@UAEPAUHWND__@@PAU3@AAUtagRECT@@@Z endp
.text:5B8E2559
.text:5B8E255C
.text:5B8E255C						       ; =============== S U B R O U T I N E =======================================
.text:5B8E255C
.text:5B8E255C						       ; Attributes: bp-based frame
.text:5B8E255C
.text:5B8E255C						       ; int __stdcall ATL::IOleObjectImpl<CTrialEnd>::DoVerb(int, int,	int, int, int, HWND, struct tagRECT *)
.text:5B8E255C						       ?DoVerb@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJJPAUtagMSG@@PAUIOleClientSite@@JPAUHWND__@@PBUtagRECT@@@Z	proc near
.text:5B8E255C											       ; DATA XREF: .text:5B8E131Co
.text:5B8E255C											       ; .text:5B8E154Co
.text:5B8E255C
.text:5B8E255C						       arg_0	       = dword ptr  8
.text:5B8E255C						       arg_4	       = dword ptr  0Ch
.text:5B8E255C						       arg_14	       = dword ptr  1Ch
.text:5B8E255C						       arg_18	       = dword ptr  20h
.text:5B8E255C
.text:5B8E255C 55							       push    ebp
.text:5B8E255D 8B EC							       mov     ebp, esp
.text:5B8E255F 8B 4D 08							       mov     ecx, [ebp+arg_0]
.text:5B8E2562 8B 55 0C							       mov     edx, [ebp+arg_4]
.text:5B8E2565 8D 41 90							       lea     eax, [ecx-70h]
.text:5B8E2568 F7 D9							       neg     ecx
.text:5B8E256A 1B C9							       sbb     ecx, ecx
.text:5B8E256C 23 C8							       and     ecx, eax	       ; this
.text:5B8E256E 83 C2 07							       add     edx, 7
.text:5B8E2571 83 FA 07							       cmp     edx, 7	       ; switch	8 cases
.text:5B8E2574 B8 01 40	00 80						       mov     eax, 80004001h
.text:5B8E2579 77 5C							       ja      short loc_5B8E25D7 ; jumptable 5B8E257B default case
.text:5B8E257B FF 24 95	DB 25 8E 5B					       jmp     ds:off_5B8E25DB[edx*4] ;	switch jump
.text:5B8E2582						       ; ---------------------------------------------------------------------------
.text:5B8E2582
.text:5B8E2582						       loc_5B8E2582:			       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::DoVerb(long,tagMSG *,IOleClientSite	*,long,HWND__ *,tagRECT	const *)+1Fj
.text:5B8E2582											       ; DATA XREF: .text:off_5B8E25DBo
.text:5B8E2582 FF 75 1C							       push    [ebp+arg_14]    ; jumptable 5B8E257B case 7
.text:5B8E2585 83 C1 70							       add     ecx, 70h
.text:5B8E2588 FF 75 20							       push    [ebp+arg_18]    ; struct	tagRECT	*
.text:5B8E258B E8 6B 00	00 00						       call    ?DoVerbPrimary@?$IOleObjectImpl@VCTrialEnd@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::IOleObjectImpl<CTrialEnd>::DoVerbPrimary(tagRECT const *,HWND__ *)
.text:5B8E2590 EB 45							       jmp     short loc_5B8E25D7 ; jumptable 5B8E257B default case
.text:5B8E2592						       ; ---------------------------------------------------------------------------
.text:5B8E2592
.text:5B8E2592						       loc_5B8E2592:			       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::DoVerb(long,tagMSG *,IOleClientSite	*,long,HWND__ *,tagRECT	const *)+1Fj
.text:5B8E2592											       ; DATA XREF: .text:off_5B8E25DBo
.text:5B8E2592 FF 75 20							       push    [ebp+arg_18]    ; jumptable 5B8E257B case 6
.text:5B8E2595 6A FF							       push    0FFFFFFFFh
.text:5B8E2597 EB 0C							       jmp     short loc_5B8E25A5
.text:5B8E2599						       ; ---------------------------------------------------------------------------
.text:5B8E2599
.text:5B8E2599						       loc_5B8E2599:			       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::DoVerb(long,tagMSG *,IOleClientSite	*,long,HWND__ *,tagRECT	const *)+1Fj
.text:5B8E2599											       ; DATA XREF: .text:off_5B8E25DBo
.text:5B8E2599 FF 75 20							       push    [ebp+arg_18]    ; jumptable 5B8E257B case 2
.text:5B8E259C 6A FB							       push    0FFFFFFFBh
.text:5B8E259E EB 05							       jmp     short loc_5B8E25A5
.text:5B8E25A0						       ; ---------------------------------------------------------------------------
.text:5B8E25A0
.text:5B8E25A0						       loc_5B8E25A0:			       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::DoVerb(long,tagMSG *,IOleClientSite	*,long,HWND__ *,tagRECT	const *)+1Fj
.text:5B8E25A0											       ; DATA XREF: .text:off_5B8E25DBo
.text:5B8E25A0 FF 75 20							       push    [ebp+arg_18]    ; jumptable 5B8E257B case 3
.text:5B8E25A3 6A FC							       push    0FFFFFFFCh      ; __int32
.text:5B8E25A5
.text:5B8E25A5						       loc_5B8E25A5:			       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::DoVerb(long,tagMSG *,IOleClientSite	*,long,HWND__ *,tagRECT	const *)+3Bj
.text:5B8E25A5											       ; ATL::IOleObjectImpl<CTrialEnd>::DoVerb(long,tagMSG *,IOleClientSite *,long,HWND__ *,tagRECT const *)+42j
.text:5B8E25A5 83 C1 70							       add     ecx, 70h
.text:5B8E25A8 8D 41 90							       lea     eax, [ecx-70h]
.text:5B8E25AB F7 D9							       neg     ecx
.text:5B8E25AD 1B C9							       sbb     ecx, ecx
.text:5B8E25AF 23 C8							       and     ecx, eax	       ; this
.text:5B8E25B1 E8 DD 1F	00 00						       call    ?InPlaceActivate@CComControlBase@ATL@@QAEJJPBUtagRECT@@@Z ; ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)
.text:5B8E25B6 EB 1F							       jmp     short loc_5B8E25D7 ; jumptable 5B8E257B default case
.text:5B8E25B8						       ; ---------------------------------------------------------------------------
.text:5B8E25B8
.text:5B8E25B8						       loc_5B8E25B8:			       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::DoVerb(long,tagMSG *,IOleClientSite	*,long,HWND__ *,tagRECT	const *)+1Fj
.text:5B8E25B8											       ; DATA XREF: .text:off_5B8E25DBo
.text:5B8E25B8 FF 75 1C							       push    [ebp+arg_14]    ; jumptable 5B8E257B case 4
.text:5B8E25BB 83 C1 70							       add     ecx, 70h
.text:5B8E25BE FF 75 20							       push    [ebp+arg_18]
.text:5B8E25C1 E8 B0 00	00 00						       call    ?DoVerbHide@?$IOleObjectImpl@VCTrialEnd@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::IOleObjectImpl<CTrialEnd>::DoVerbHide(tagRECT const *,HWND__	*)
.text:5B8E25C6 EB 0F							       jmp     short loc_5B8E25D7 ; jumptable 5B8E257B default case
.text:5B8E25C8						       ; ---------------------------------------------------------------------------
.text:5B8E25C8
.text:5B8E25C8						       loc_5B8E25C8:			       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::DoVerb(long,tagMSG *,IOleClientSite	*,long,HWND__ *,tagRECT	const *)+1Fj
.text:5B8E25C8											       ; DATA XREF: .text:off_5B8E25DBo
.text:5B8E25C8 33 C0							       xor     eax, eax	       ; jumptable 5B8E257B cases 1,5
.text:5B8E25CA EB 0B							       jmp     short loc_5B8E25D7 ; jumptable 5B8E257B default case
.text:5B8E25CC						       ; ---------------------------------------------------------------------------
.text:5B8E25CC
.text:5B8E25CC						       loc_5B8E25CC:			       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::DoVerb(long,tagMSG *,IOleClientSite	*,long,HWND__ *,tagRECT	const *)+1Fj
.text:5B8E25CC											       ; DATA XREF: .text:off_5B8E25DBo
.text:5B8E25CC FF 75 1C							       push    [ebp+arg_14]    ; jumptable 5B8E257B case 0
.text:5B8E25CF FF 75 20							       push    [ebp+arg_18]    ; struct	tagRECT	*
.text:5B8E25D2 E8 8D 1E	00 00						       call    ?DoVerbProperties@CComControlBase@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::CComControlBase::DoVerbProperties(tagRECT const *,HWND__ *)
.text:5B8E25D7
.text:5B8E25D7						       loc_5B8E25D7:			       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::DoVerb(long,tagMSG *,IOleClientSite	*,long,HWND__ *,tagRECT	const *)+1Dj
.text:5B8E25D7											       ; ATL::IOleObjectImpl<CTrialEnd>::DoVerb(long,tagMSG *,IOleClientSite *,long,HWND__ *,tagRECT const *)+34j ...
.text:5B8E25D7 5D							       pop     ebp	       ; jumptable 5B8E257B default case
.text:5B8E25D8 C2 1C 00							       retn    1Ch
.text:5B8E25D8						       ?DoVerb@?$IOleObjectImpl@VCTrialEnd@@@ATL@@UAGJJPAUtagMSG@@PAUIOleClientSite@@JPAUHWND__@@PBUtagRECT@@@Z	endp
.text:5B8E25D8
.text:5B8E25D8						       ; ---------------------------------------------------------------------------
.text:5B8E25DB CC 25 8E	5B C8 25 8E 5B 99 25 8E	5B A0 25 8E 5B+off_5B8E25DB    dd offset loc_5B8E25CC  ; DATA XREF: ATL::IOleObjectImpl<CTrialEnd>::DoVerb(long,tagMSG *,IOleClientSite	*,long,HWND__ *,tagRECT	const *)+1Fr
.text:5B8E25DB B8 25 8E	5B C8 25 8E 5B 92 25 8E	5B 82 25 8E 5B		       dd offset loc_5B8E25C8  ; jump table for	switch statement
.text:5B8E25DB								       dd offset loc_5B8E2599
.text:5B8E25DB								       dd offset loc_5B8E25A0
.text:5B8E25DB								       dd offset loc_5B8E25B8
.text:5B8E25DB								       dd offset loc_5B8E25C8
.text:5B8E25DB								       dd offset loc_5B8E2592
.text:5B8E25DB								       dd offset loc_5B8E2582
.text:5B8E25FB
.text:5B8E25FB						       ; =============== S U B R O U T I N E =======================================
.text:5B8E25FB
.text:5B8E25FB						       ; Attributes: bp-based frame
.text:5B8E25FB
.text:5B8E25FB						       ; int __stdcall ATL::IOleObjectImpl<CTrialEnd>::DoVerbPrimary(struct tagRECT *, HWND)
.text:5B8E25FB						       ?DoVerbPrimary@?$IOleObjectImpl@VCTrialEnd@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z proc near
.text:5B8E25FB											       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::DoVerb(long,tagMSG *,IOleClientSite	*,long,HWND__ *,tagRECT	const *)+2Fp
.text:5B8E25FB
.text:5B8E25FB						       pvarg	       = VARIANTARG ptr	-10h
.text:5B8E25FB						       arg_0	       = dword ptr  8
.text:5B8E25FB						       arg_4	       = dword ptr  0Ch
.text:5B8E25FB
.text:5B8E25FB 55							       push    ebp
.text:5B8E25FC 8B EC							       mov     ebp, esp
.text:5B8E25FE 83 EC 10							       sub     esp, 10h
.text:5B8E2601 56							       push    esi
.text:5B8E2602 8B F1							       mov     esi, ecx
.text:5B8E2604 83 C1 90							       add     ecx, 0FFFFFF90h
.text:5B8E2607 F7 DE							       neg     esi
.text:5B8E2609 8D 45 F0							       lea     eax, [ebp+pvarg]
.text:5B8E260C 1B F6							       sbb     esi, esi
.text:5B8E260E 50							       push    eax	       ; pvarg
.text:5B8E260F 23 F1							       and     esi, ecx
.text:5B8E2611 FF 15 E4	10 8E 5B					       call    ds:__imp__VariantInit@4 ; VariantInit(x)
.text:5B8E2617 8B 4E 18							       mov     ecx, [esi+18h]  ; struct	IDispatch *
.text:5B8E261A 85 C9							       test    ecx, ecx
.text:5B8E261C 74 2F							       jz      short loc_5B8E264D
.text:5B8E261E 8D 45 F0							       lea     eax, [ebp+pvarg]
.text:5B8E2621 50							       push    eax	       ; struct	tagVARIANT *
.text:5B8E2622 BA 3B FD	FF FF						       mov     edx, 0FFFFFD3Bh ; __int32
.text:5B8E2627 E8 0E 12	00 00						       call    ?GetProperty@CComDispatchDriver@ATL@@SIJPAUIDispatch@@JPAUtagVARIANT@@@Z	; ATL::CComDispatchDriver::GetProperty(IDispatch *,long,tagVARIANT *)
.text:5B8E262C 85 C0							       test    eax, eax
.text:5B8E262E 7C 1D							       jl      short loc_5B8E264D
.text:5B8E2630 66 83 7D	F0 0B						       cmp     word ptr	[ebp+pvarg.anonymous_0], 0Bh
.text:5B8E2635 75 16							       jnz     short loc_5B8E264D
.text:5B8E2637 66 83 7D	F8 00						       cmp     word ptr	[ebp+pvarg.anonymous_0+8], 0
.text:5B8E263C 75 0F							       jnz     short loc_5B8E264D
.text:5B8E263E FF 75 0C							       push    [ebp+arg_4]     ; HWND
.text:5B8E2641 8B CE							       mov     ecx, esi	       ; this
.text:5B8E2643 FF 75 08							       push    [ebp+arg_0]     ; struct	tagRECT	*
.text:5B8E2646 E8 19 1E	00 00						       call    ?DoVerbProperties@CComControlBase@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z ; ATL::CComControlBase::DoVerbProperties(tagRECT const *,HWND__ *)
.text:5B8E264B EB 16							       jmp     short loc_5B8E2663
.text:5B8E264D						       ; ---------------------------------------------------------------------------
.text:5B8E264D
.text:5B8E264D						       loc_5B8E264D:			       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::DoVerbPrimary(tagRECT const	*,HWND__ *)+21j
.text:5B8E264D											       ; ATL::IOleObjectImpl<CTrialEnd>::DoVerbPrimary(tagRECT const *,HWND__ *)+33j ...
.text:5B8E264D FF 75 08							       push    [ebp+arg_0]     ; struct	tagRECT	*
.text:5B8E2650 8D 4E 70							       lea     ecx, [esi+70h]
.text:5B8E2653 8D 41 90							       lea     eax, [ecx-70h]
.text:5B8E2656 F7 D9							       neg     ecx
.text:5B8E2658 1B C9							       sbb     ecx, ecx
.text:5B8E265A 6A FB							       push    0FFFFFFFBh      ; __int32
.text:5B8E265C 23 C8							       and     ecx, eax	       ; this
.text:5B8E265E E8 30 1F	00 00						       call    ?InPlaceActivate@CComControlBase@ATL@@QAEJJPBUtagRECT@@@Z ; ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)
.text:5B8E2663
.text:5B8E2663						       loc_5B8E2663:			       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::DoVerbPrimary(tagRECT const	*,HWND__ *)+50j
.text:5B8E2663 8B F0							       mov     esi, eax
.text:5B8E2665 8D 45 F0							       lea     eax, [ebp+pvarg]
.text:5B8E2668 50							       push    eax	       ; pvarg
.text:5B8E2669 FF 15 C8	10 8E 5B					       call    ds:__imp__VariantClear@4	; VariantClear(x)
.text:5B8E266F 8B C6							       mov     eax, esi
.text:5B8E2671 5E							       pop     esi
.text:5B8E2672 C9							       leave
.text:5B8E2673 C2 08 00							       retn    8
.text:5B8E2673						       ?DoVerbPrimary@?$IOleObjectImpl@VCTrialEnd@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z endp
.text:5B8E2673
.text:5B8E2676
.text:5B8E2676						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2676
.text:5B8E2676
.text:5B8E2676						       ; public: long __thiscall ATL::IOleObjectImpl<class CTrialEnd>::DoVerbHide(struct tagRECT const *, struct HWND__	*)
.text:5B8E2676						       ?DoVerbHide@?$IOleObjectImpl@VCTrialEnd@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z proc near
.text:5B8E2676											       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::DoVerb(long,tagMSG *,IOleClientSite	*,long,HWND__ *,tagRECT	const *)+65p
.text:5B8E2676 56							       push    esi
.text:5B8E2677 8B F1							       mov     esi, ecx
.text:5B8E2679 83 C1 90							       add     ecx, 0FFFFFF90h
.text:5B8E267C F7 DE							       neg     esi
.text:5B8E267E 1B F6							       sbb     esi, esi
.text:5B8E2680 23 F1							       and     esi, ecx
.text:5B8E2682 8D 46 7C							       lea     eax, [esi+7Ch]
.text:5B8E2685 8B 08							       mov     ecx, [eax]
.text:5B8E2687 50							       push    eax
.text:5B8E2688 FF 51 18							       call    dword ptr [ecx+18h]
.text:5B8E268B 8B 76 4C							       mov     esi, [esi+4Ch]
.text:5B8E268E 85 F6							       test    esi, esi
.text:5B8E2690 74 09							       jz      short loc_5B8E269B
.text:5B8E2692 6A 00							       push    0	       ; nCmdShow
.text:5B8E2694 56							       push    esi	       ; hWnd
.text:5B8E2695 FF 15 54	11 8E 5B					       call    ds:__imp__ShowWindow@8 ;	ShowWindow(x,x)
.text:5B8E269B
.text:5B8E269B						       loc_5B8E269B:			       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::DoVerbHide(tagRECT const *,HWND__ *)+1Aj
.text:5B8E269B 33 C0							       xor     eax, eax
.text:5B8E269D 5E							       pop     esi
.text:5B8E269E C2 08 00							       retn    8
.text:5B8E269E						       ?DoVerbHide@?$IOleObjectImpl@VCTrialEnd@@@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z endp
.text:5B8E269E
.text:5B8E26A1
.text:5B8E26A1						       ; =============== S U B R O U T I N E =======================================
.text:5B8E26A1
.text:5B8E26A1
.text:5B8E26A1						       ; public: __thiscall ATL::CComObject<class CTrialEnd>::~CComObject<class	CTrialEnd>(void)
.text:5B8E26A1						       ??1?$CComObject@VCTrialEnd@@@ATL@@QAE@XZ	proc near
.text:5B8E26A1											       ; CODE XREF: ATL::CComObject<CTrialEnd>::`scalar	deleting destructor'(uint)+3p
.text:5B8E26A1 56							       push    esi
.text:5B8E26A2 8B F1							       mov     esi, ecx
.text:5B8E26A4 68 EC 70	8E 5B						       push    offset Addend   ; lpAddend
.text:5B8E26A9 C7 06 B4	13 8E 5B					       mov     dword ptr [esi],	offset ??_7?$CComContainedObject@VCTrialEnd@@@ATL@@6BCComControlBase@1@@ ; const ATL::CComContainedObject<CTrialEnd>::`vftable'{for `ATL::CComControlBase'}
.text:5B8E26AF C7 46 48	B0 13 8E 5B					       mov     dword ptr [esi+48h], offset ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$CWindowImpl@VCTrialEnd@@@1@@ ; const ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::CWindowImpl<CTrialEnd>'}
.text:5B8E26B6 C7 46 64	90 13 8E 5B					       mov     dword ptr [esi+64h], offset ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@ ; const ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IDispatchImpl<ITrialEnd,&_GUID const IID_ITrialEnd,&_GUID const LIBID_TRIALOCLib,1,0,ATL::CComTypeInfoHolder>'}
.text:5B8E26BD C7 46 68	6C 13 8E 5B					       mov     dword ptr [esi+68h], offset ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IPersistStreamInitImpl@VCTrialEnd@@@1@@ ; const ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IPersistStreamInitImpl<CTrialEnd>'}
.text:5B8E26C4 C7 46 6C	50 13 8E 5B					       mov     dword ptr [esi+6Ch], offset ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IOleControlImpl@VCTrialEnd@@@1@@ ; const ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IOleControlImpl<CTrialEnd>'}
.text:5B8E26CB C7 46 70	F0 12 8E 5B					       mov     dword ptr [esi+70h], offset ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IOleObjectImpl@VCTrialEnd@@@1@@ ; const ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IOleObjectImpl<CTrialEnd>'}
.text:5B8E26D2 C7 46 74	C8 12 8E 5B					       mov     dword ptr [esi+74h], offset ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@1@@ ; const ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IOleInPlaceActiveObjectImpl<CTrialEnd>'}
.text:5B8E26D9 C7 46 78	8C 12 8E 5B					       mov     dword ptr [esi+78h], offset ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IViewObjectExImpl@VCTrialEnd@@@1@@ ; const ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IViewObjectExImpl<CTrialEnd>'}
.text:5B8E26E0 C7 46 7C	60 12 8E 5B					       mov     dword ptr [esi+7Ch], offset ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@1@@ ; const ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>'}
.text:5B8E26E7 C7 86 80	00 00 00 4C 12 8E 5B				       mov     dword ptr [esi+80h], offset ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$IObjectSafetyImpl@VCTrialEnd@@@1@@ ; const ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::IObjectSafetyImpl<CTrialEnd>'}
.text:5B8E26F1 C7 86 88	00 00 00 01 00 00 00				       mov     dword ptr [esi+88h], 1
.text:5B8E26FB FF 15 8C	10 8E 5B					       call    ds:__imp__InterlockedDecrement@4	; InterlockedDecrement(x)
.text:5B8E2701 8B CE							       mov     ecx, esi	       ; this
.text:5B8E2703 5E							       pop     esi
.text:5B8E2704 E9 D1 F5	FF FF						       jmp     ??1CTrialEnd@@QAE@XZ ; CTrialEnd::~CTrialEnd(void)
.text:5B8E2704						       ??1?$CComObject@VCTrialEnd@@@ATL@@QAE@XZ	endp
.text:5B8E2704
.text:5B8E2709
.text:5B8E2709						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2709
.text:5B8E2709
.text:5B8E2709						       ; public: __thiscall ATL::CComAggObject<class CTrialEnd>::~CComAggObject<class CTrialEnd>(void)
.text:5B8E2709						       ??1?$CComAggObject@VCTrialEnd@@@ATL@@QAE@XZ proc	near
.text:5B8E2709											       ; CODE XREF: ATL::CComAggObject<CTrialEnd>::`scalar deleting destructor'(uint)+3p
.text:5B8E2709 56							       push    esi
.text:5B8E270A 8B F1							       mov     esi, ecx
.text:5B8E270C 68 EC 70	8E 5B						       push    offset Addend   ; lpAddend
.text:5B8E2711 C7 06 70	14 8E 5B					       mov     dword ptr [esi],	offset ??_7?$CComAggObject@VCTrialEnd@@@ATL@@6B@ ; const ATL::CComAggObject<CTrialEnd>::`vftable'
.text:5B8E2717 C7 46 04	01 00 00 00					       mov     dword ptr [esi+4], 1
.text:5B8E271E FF 15 8C	10 8E 5B					       call    ds:__imp__InterlockedDecrement@4	; InterlockedDecrement(x)
.text:5B8E2724 8D 4E 08							       lea     ecx, [esi+8]    ; this
.text:5B8E2727 5E							       pop     esi
.text:5B8E2728 E9 AD F5	FF FF						       jmp     ??1CTrialEnd@@QAE@XZ ; CTrialEnd::~CTrialEnd(void)
.text:5B8E2728						       ??1?$CComAggObject@VCTrialEnd@@@ATL@@QAE@XZ endp
.text:5B8E2728
.text:5B8E272D
.text:5B8E272D						       ; =============== S U B R O U T I N E =======================================
.text:5B8E272D
.text:5B8E272D
.text:5B8E272D						       ; public: virtual unsigned long __stdcall ATL::CComAggObject<class CTrialEnd>::AddRef(void)
.text:5B8E272D						       ?AddRef@?$CComAggObject@VCTrialEnd@@@ATL@@UAGKXZ	proc near
.text:5B8E272D											       ; DATA XREF: .text:5B8E1474o
.text:5B8E272D
.text:5B8E272D						       arg_0	       = dword ptr  4
.text:5B8E272D
.text:5B8E272D 8B 44 24	04						       mov     eax, [esp+arg_0]
.text:5B8E2731 FF 40 04							       inc     dword ptr [eax+4]
.text:5B8E2734 8B 40 04							       mov     eax, [eax+4]
.text:5B8E2737 C2 04 00							       retn    4
.text:5B8E2737						       ?AddRef@?$CComAggObject@VCTrialEnd@@@ATL@@UAGKXZ	endp
.text:5B8E2737
.text:5B8E273A
.text:5B8E273A						       ; =============== S U B R O U T I N E =======================================
.text:5B8E273A
.text:5B8E273A						       ; Attributes: bp-based frame
.text:5B8E273A
.text:5B8E273A						       ; int __stdcall ATL::CComAggObject<CTrialEnd>::QueryInterface(int, struct _GUID *, void **)
.text:5B8E273A						       ?QueryInterface@?$CComAggObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z proc near
.text:5B8E273A											       ; DATA XREF: .text:const	ATL::CComAggObject<CTrialEnd>::`vftable'o
.text:5B8E273A
.text:5B8E273A						       arg_0	       = dword ptr  8
.text:5B8E273A						       arg_4	       = dword ptr  0Ch
.text:5B8E273A						       arg_8	       = dword ptr  10h
.text:5B8E273A
.text:5B8E273A 55							       push    ebp
.text:5B8E273B 8B EC							       mov     ebp, esp
.text:5B8E273D 8B 45 0C							       mov     eax, [ebp+arg_4]
.text:5B8E2740 56							       push    esi
.text:5B8E2741 33 F6							       xor     esi, esi
.text:5B8E2743 39 30							       cmp     [eax], esi
.text:5B8E2745 75 32							       jnz     short loc_5B8E2779
.text:5B8E2747 39 70 04							       cmp     [eax+4],	esi
.text:5B8E274A 75 2D							       jnz     short loc_5B8E2779
.text:5B8E274C 81 78 08	C0 00 00 00					       cmp     dword ptr [eax+8], 0C0h
.text:5B8E2753 75 24							       jnz     short loc_5B8E2779
.text:5B8E2755 81 78 0C	00 00 00 46					       cmp     dword ptr [eax+0Ch], 46000000h
.text:5B8E275C 75 1B							       jnz     short loc_5B8E2779
.text:5B8E275E 8B 4D 10							       mov     ecx, [ebp+arg_8]
.text:5B8E2761 3B CE							       cmp     ecx, esi
.text:5B8E2763 75 07							       jnz     short loc_5B8E276C
.text:5B8E2765 B8 03 40	00 80						       mov     eax, 80004003h
.text:5B8E276A EB 26							       jmp     short loc_5B8E2792
.text:5B8E276C						       ; ---------------------------------------------------------------------------
.text:5B8E276C
.text:5B8E276C						       loc_5B8E276C:			       ; CODE XREF: ATL::CComAggObject<CTrialEnd>::QueryInterface(_GUID	const &,void * *)+29j
.text:5B8E276C 8B 45 08							       mov     eax, [ebp+arg_0]
.text:5B8E276F 89 01							       mov     [ecx], eax
.text:5B8E2771 8B 08							       mov     ecx, [eax]
.text:5B8E2773 50							       push    eax
.text:5B8E2774 FF 51 04							       call    dword ptr [ecx+4]
.text:5B8E2777 EB 17							       jmp     short loc_5B8E2790
.text:5B8E2779						       ; ---------------------------------------------------------------------------
.text:5B8E2779
.text:5B8E2779						       loc_5B8E2779:			       ; CODE XREF: ATL::CComAggObject<CTrialEnd>::QueryInterface(_GUID	const &,void * *)+Bj
.text:5B8E2779											       ; ATL::CComAggObject<CTrialEnd>::QueryInterface(_GUID const &,void * *)+10j ...
.text:5B8E2779 FF 75 10							       push    [ebp+arg_8]     ; void **
.text:5B8E277C 50							       push    eax	       ; struct	_GUID *
.text:5B8E277D 8B 45 08							       mov     eax, [ebp+arg_0]
.text:5B8E2780 68 C8 13	8E 5B						       push    offset ?_entries@?1??_GetEntries@CTrialEnd@@SGPBU_ATL_INTMAP_ENTRY@ATL@@XZ@4QBU34@B ; struct ATL::_ATL_INTMAP_ENTRY *
.text:5B8E2785 83 C0 08							       add     eax, 8
.text:5B8E2788 50							       push    eax	       ; void *
.text:5B8E2789 E8 DB 0C	00 00						       call    ?AtlInternalQueryInterface@ATL@@YGJPAXPBU_ATL_INTMAP_ENTRY@1@ABU_GUID@@PAPAX@Z ;	ATL::AtlInternalQueryInterface(void *,ATL::_ATL_INTMAP_ENTRY const *,_GUID const &,void	* *)
.text:5B8E278E 8B F0							       mov     esi, eax
.text:5B8E2790
.text:5B8E2790						       loc_5B8E2790:			       ; CODE XREF: ATL::CComAggObject<CTrialEnd>::QueryInterface(_GUID	const &,void * *)+3Dj
.text:5B8E2790 8B C6							       mov     eax, esi
.text:5B8E2792
.text:5B8E2792						       loc_5B8E2792:			       ; CODE XREF: ATL::CComAggObject<CTrialEnd>::QueryInterface(_GUID	const &,void * *)+30j
.text:5B8E2792 5E							       pop     esi
.text:5B8E2793 5D							       pop     ebp
.text:5B8E2794 C2 0C 00							       retn    0Ch
.text:5B8E2794						       ?QueryInterface@?$CComAggObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z endp
.text:5B8E2794
.text:5B8E2797
.text:5B8E2797						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2797
.text:5B8E2797
.text:5B8E2797						       ; public: __thiscall ATL::CComContainedObject<class CTrialEnd>::CComContainedObject<class CTrialEnd>(void *)
.text:5B8E2797						       ??0?$CComContainedObject@VCTrialEnd@@@ATL@@QAE@PAX@Z proc near
.text:5B8E2797											       ; CODE XREF: ATL::CComAggObject<CTrialEnd>::CComAggObject<CTrialEnd>(void *)+14p
.text:5B8E2797
.text:5B8E2797						       arg_0	       = dword ptr  4
.text:5B8E2797
.text:5B8E2797 56							       push    esi
.text:5B8E2798 8B F1							       mov     esi, ecx
.text:5B8E279A E8 50 F5	FF FF						       call    ??0CTrialEnd@@QAE@XZ ; CTrialEnd::CTrialEnd(void)
.text:5B8E279F 8B 44 24	08						       mov     eax, [esp+4+arg_0]
.text:5B8E27A3 89 86 88	00 00 00					       mov     [esi+88h], eax
.text:5B8E27A9 C7 06 B4	13 8E 5B					       mov     dword ptr [esi],	offset ??_7?$CComContainedObject@VCTrialEnd@@@ATL@@6BCComControlBase@1@@ ; const ATL::CComContainedObject<CTrialEnd>::`vftable'{for `ATL::CComControlBase'}
.text:5B8E27AF C7 46 48	B0 13 8E 5B					       mov     dword ptr [esi+48h], offset ??_7?$CComObject@VCTrialEnd@@@ATL@@6B?$CWindowImpl@VCTrialEnd@@@1@@ ; const ATL::CComObject<CTrialEnd>::`vftable'{for `ATL::CWindowImpl<CTrialEnd>'}
.text:5B8E27B6 C7 46 64	C0 15 8E 5B					       mov     dword ptr [esi+64h], offset ??_7?$CComContainedObject@VCTrialEnd@@@ATL@@6B?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@1@@	; const	ATL::CComContainedObject<CTrialEnd>::`vftable'{for `ATL::IDispatchImpl<ITrialEnd,&_GUID const IID_ITrialEnd,&_GUID const LIBID_TRIALOCLib,1,0,ATL::CComTypeInfoHolder>'}
.text:5B8E27BD C7 46 68	9C 15 8E 5B					       mov     dword ptr [esi+68h], offset ??_7?$CComContainedObject@VCTrialEnd@@@ATL@@6B?$IPersistStreamInitImpl@VCTrialEnd@@@1@@ ; const ATL::CComContainedObject<CTrialEnd>::`vftable'{for `ATL::IPersistStreamInitImpl<CTrialEnd>'}
.text:5B8E27C4 C7 46 6C	80 15 8E 5B					       mov     dword ptr [esi+6Ch], offset ??_7?$CComContainedObject@VCTrialEnd@@@ATL@@6B?$IOleControlImpl@VCTrialEnd@@@1@@ ; const ATL::CComContainedObject<CTrialEnd>::`vftable'{for `ATL::IOleControlImpl<CTrialEnd>'}
.text:5B8E27CB C7 46 70	20 15 8E 5B					       mov     dword ptr [esi+70h], offset ??_7?$CComContainedObject@VCTrialEnd@@@ATL@@6B?$IOleObjectImpl@VCTrialEnd@@@1@@ ; const ATL::CComContainedObject<CTrialEnd>::`vftable'{for `ATL::IOleObjectImpl<CTrialEnd>'}
.text:5B8E27D2 C7 46 74	F8 14 8E 5B					       mov     dword ptr [esi+74h], offset ??_7?$CComContainedObject@VCTrialEnd@@@ATL@@6B?$IOleInPlaceActiveObjectImpl@VCTrialEnd@@@1@@	; const	ATL::CComContainedObject<CTrialEnd>::`vftable'{for `ATL::IOleInPlaceActiveObjectImpl<CTrialEnd>'}
.text:5B8E27D9 C7 46 78	BC 14 8E 5B					       mov     dword ptr [esi+78h], offset ??_7?$CComContainedObject@VCTrialEnd@@@ATL@@6B?$IViewObjectExImpl@VCTrialEnd@@@1@@ ;	const ATL::CComContainedObject<CTrialEnd>::`vftable'{for `ATL::IViewObjectExImpl<CTrialEnd>'}
.text:5B8E27E0 C7 46 7C	90 14 8E 5B					       mov     dword ptr [esi+7Ch], offset ??_7?$CComContainedObject@VCTrialEnd@@@ATL@@6B?$IOleInPlaceObjectWindowlessImpl@VCTrialEnd@@@1@@ ; const ATL::CComContainedObject<CTrialEnd>::`vftable'{for `ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>'}
.text:5B8E27E7 C7 86 80	00 00 00 7C 14 8E 5B				       mov     dword ptr [esi+80h], offset ??_7?$CComContainedObject@VCTrialEnd@@@ATL@@6B?$IObjectSafetyImpl@VCTrialEnd@@@1@@ ;	const ATL::CComContainedObject<CTrialEnd>::`vftable'{for `ATL::IObjectSafetyImpl<CTrialEnd>'}
.text:5B8E27F1 8B C6							       mov     eax, esi
.text:5B8E27F3 5E							       pop     esi
.text:5B8E27F4 C2 04 00							       retn    4
.text:5B8E27F4						       ??0?$CComContainedObject@VCTrialEnd@@@ATL@@QAE@PAX@Z endp
.text:5B8E27F4
.text:5B8E27F7
.text:5B8E27F7						       ; =============== S U B R O U T I N E =======================================
.text:5B8E27F7
.text:5B8E27F7
.text:5B8E27F7						       ; public: virtual unsigned long __stdcall ATL::CComContainedObject<class	CTrialEnd>::AddRef(void)
.text:5B8E27F7						       ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGKXZ proc near
.text:5B8E27F7											       ; CODE XREF: [thunk]:ATL::CComContainedObject<CTrialEnd>::AddRef`adjustor{4}' (void)+5j
.text:5B8E27F7											       ; [thunk]:ATL::CComContainedObject<CTrialEnd>::AddRef`adjustor{8}' (void)+5j ...
.text:5B8E27F7
.text:5B8E27F7						       arg_0	       = dword ptr  4
.text:5B8E27F7
.text:5B8E27F7 8B 44 24	04						       mov     eax, [esp+arg_0]
.text:5B8E27FB 8B 40 24							       mov     eax, [eax+24h]
.text:5B8E27FE 8B 08							       mov     ecx, [eax]
.text:5B8E2800 50							       push    eax
.text:5B8E2801 FF 51 04							       call    dword ptr [ecx+4]
.text:5B8E2804 C2 04 00							       retn    4
.text:5B8E2804						       ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGKXZ endp
.text:5B8E2804
.text:5B8E2807
.text:5B8E2807						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2807
.text:5B8E2807
.text:5B8E2807						       ; public: virtual unsigned long __stdcall ATL::CComContainedObject<class	CTrialEnd>::Release(void)
.text:5B8E2807						       ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGKXZ proc near
.text:5B8E2807											       ; CODE XREF: [thunk]:ATL::CComContainedObject<CTrialEnd>::Release`adjustor{4}' (void)+5j
.text:5B8E2807											       ; [thunk]:ATL::CComContainedObject<CTrialEnd>::Release`adjustor{8}' (void)+5j ...
.text:5B8E2807
.text:5B8E2807						       arg_0	       = dword ptr  4
.text:5B8E2807
.text:5B8E2807 8B 44 24	04						       mov     eax, [esp+arg_0]
.text:5B8E280B 8B 40 24							       mov     eax, [eax+24h]
.text:5B8E280E 8B 08							       mov     ecx, [eax]
.text:5B8E2810 50							       push    eax
.text:5B8E2811 FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E2814 C2 04 00							       retn    4
.text:5B8E2814						       ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGKXZ endp
.text:5B8E2814
.text:5B8E2817
.text:5B8E2817						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2817
.text:5B8E2817
.text:5B8E2817						       ; public: virtual long __stdcall	ATL::CComContainedObject<class CTrialEnd>::QueryInterface(struct _GUID const &,	void * *)
.text:5B8E2817						       ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z proc near
.text:5B8E2817											       ; CODE XREF: [thunk]:ATL::CComContainedObject<CTrialEnd>::QueryInterface`adjustor{4}' (_GUID const &,void * *)+5j
.text:5B8E2817											       ; [thunk]:ATL::CComContainedObject<CTrialEnd>::QueryInterface`adjustor{8}' (_GUID const &,void * *)+5j ...
.text:5B8E2817
.text:5B8E2817						       arg_0	       = dword ptr  4
.text:5B8E2817						       arg_4	       = dword ptr  8
.text:5B8E2817						       arg_8	       = dword ptr  0Ch
.text:5B8E2817
.text:5B8E2817 FF 74 24	0C						       push    [esp+arg_8]
.text:5B8E281B 8B 44 24	08						       mov     eax, [esp+4+arg_0]
.text:5B8E281F 8B 40 24							       mov     eax, [eax+24h]
.text:5B8E2822 FF 74 24	0C						       push    [esp+4+arg_4]
.text:5B8E2826 8B 08							       mov     ecx, [eax]
.text:5B8E2828 50							       push    eax
.text:5B8E2829 FF 11							       call    dword ptr [ecx]
.text:5B8E282B C2 0C 00							       retn    0Ch
.text:5B8E282B						       ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z endp
.text:5B8E282B
.text:5B8E282E
.text:5B8E282E						       ; =============== S U B R O U T I N E =======================================
.text:5B8E282E
.text:5B8E282E
.text:5B8E282E						       ; [thunk]:public: virtual long __stdcall	ATL::CComContainedObject<class CTrialEnd>::QueryInterface`adjustor{4}' (struct _GUID const &, void * *)
.text:5B8E282E						       ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@W3AGJABU_GUID@@PAPAX@Z proc near
.text:5B8E282E											       ; DATA XREF: .text:const	ATL::CComContainedObject<CTrialEnd>::`vftable'{for `ATL::IPersistStreamInitImpl<CTrialEnd>'}o
.text:5B8E282E
.text:5B8E282E						       arg_0	       = dword ptr  4
.text:5B8E282E
.text:5B8E282E 83 6C 24	04 04						       sub     [esp+arg_0], 4
.text:5B8E2833 E9 DF FF	FF FF						       jmp     ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<CTrialEnd>::QueryInterface(_GUID const &,void *	*)
.text:5B8E2833						       ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@W3AGJABU_GUID@@PAPAX@Z endp
.text:5B8E2833
.text:5B8E2838
.text:5B8E2838						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2838
.text:5B8E2838
.text:5B8E2838						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComContainedObject<class	CTrialEnd>::AddRef`adjustor{4}' (void)
.text:5B8E2838						       ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@W3AGKXZ proc near
.text:5B8E2838											       ; DATA XREF: .text:5B8E15A0o
.text:5B8E2838
.text:5B8E2838						       arg_0	       = dword ptr  4
.text:5B8E2838
.text:5B8E2838 83 6C 24	04 04						       sub     [esp+arg_0], 4
.text:5B8E283D E9 B5 FF	FF FF						       jmp     ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGKXZ ;	ATL::CComContainedObject<CTrialEnd>::AddRef(void)
.text:5B8E283D						       ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@W3AGKXZ endp
.text:5B8E283D
.text:5B8E2842
.text:5B8E2842						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2842
.text:5B8E2842
.text:5B8E2842						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComContainedObject<class	CTrialEnd>::Release`adjustor{4}' (void)
.text:5B8E2842						       ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@W3AGKXZ	proc near
.text:5B8E2842											       ; DATA XREF: .text:5B8E15A4o
.text:5B8E2842
.text:5B8E2842						       arg_0	       = dword ptr  4
.text:5B8E2842
.text:5B8E2842 83 6C 24	04 04						       sub     [esp+arg_0], 4
.text:5B8E2847 E9 BB FF	FF FF						       jmp     ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGKXZ ; ATL::CComContainedObject<CTrialEnd>::Release(void)
.text:5B8E2847						       ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@W3AGKXZ	endp
.text:5B8E2847
.text:5B8E284C
.text:5B8E284C						       ; =============== S U B R O U T I N E =======================================
.text:5B8E284C
.text:5B8E284C
.text:5B8E284C						       ; [thunk]:public: virtual long __stdcall	ATL::CComContainedObject<class CTrialEnd>::QueryInterface`adjustor{8}' (struct _GUID const &, void * *)
.text:5B8E284C						       ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@W7AGJABU_GUID@@PAPAX@Z proc near
.text:5B8E284C											       ; DATA XREF: .text:const	ATL::CComContainedObject<CTrialEnd>::`vftable'{for `ATL::IOleControlImpl<CTrialEnd>'}o
.text:5B8E284C
.text:5B8E284C						       arg_0	       = dword ptr  4
.text:5B8E284C
.text:5B8E284C 83 6C 24	04 08						       sub     [esp+arg_0], 8
.text:5B8E2851 E9 C1 FF	FF FF						       jmp     ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<CTrialEnd>::QueryInterface(_GUID const &,void *	*)
.text:5B8E2851						       ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@W7AGJABU_GUID@@PAPAX@Z endp
.text:5B8E2851
.text:5B8E2856
.text:5B8E2856						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2856
.text:5B8E2856
.text:5B8E2856						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComContainedObject<class	CTrialEnd>::AddRef`adjustor{8}' (void)
.text:5B8E2856						       ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@W7AGKXZ proc near
.text:5B8E2856											       ; DATA XREF: .text:5B8E1584o
.text:5B8E2856
.text:5B8E2856						       arg_0	       = dword ptr  4
.text:5B8E2856
.text:5B8E2856 83 6C 24	04 08						       sub     [esp+arg_0], 8
.text:5B8E285B E9 97 FF	FF FF						       jmp     ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGKXZ ;	ATL::CComContainedObject<CTrialEnd>::AddRef(void)
.text:5B8E285B						       ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@W7AGKXZ endp
.text:5B8E285B
.text:5B8E2860
.text:5B8E2860						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2860
.text:5B8E2860
.text:5B8E2860						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComContainedObject<class	CTrialEnd>::Release`adjustor{8}' (void)
.text:5B8E2860						       ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@W7AGKXZ	proc near
.text:5B8E2860											       ; DATA XREF: .text:5B8E1588o
.text:5B8E2860
.text:5B8E2860						       arg_0	       = dword ptr  4
.text:5B8E2860
.text:5B8E2860 83 6C 24	04 08						       sub     [esp+arg_0], 8
.text:5B8E2865 E9 9D FF	FF FF						       jmp     ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGKXZ ; ATL::CComContainedObject<CTrialEnd>::Release(void)
.text:5B8E2865						       ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@W7AGKXZ	endp
.text:5B8E2865
.text:5B8E286A
.text:5B8E286A						       ; =============== S U B R O U T I N E =======================================
.text:5B8E286A
.text:5B8E286A
.text:5B8E286A						       ; [thunk]:public: virtual long __stdcall	ATL::CComContainedObject<class CTrialEnd>::QueryInterface`adjustor{12}' (struct _GUID const &, void * *)
.text:5B8E286A						       ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@WM@AGJABU_GUID@@PAPAX@Z proc near
.text:5B8E286A											       ; DATA XREF: .text:const	ATL::CComContainedObject<CTrialEnd>::`vftable'{for `ATL::IOleObjectImpl<CTrialEnd>'}o
.text:5B8E286A
.text:5B8E286A						       arg_0	       = dword ptr  4
.text:5B8E286A
.text:5B8E286A 83 6C 24	04 0C						       sub     [esp+arg_0], 0Ch
.text:5B8E286F E9 A3 FF	FF FF						       jmp     ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<CTrialEnd>::QueryInterface(_GUID const &,void *	*)
.text:5B8E286F						       ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@WM@AGJABU_GUID@@PAPAX@Z endp
.text:5B8E286F
.text:5B8E2874
.text:5B8E2874						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2874
.text:5B8E2874
.text:5B8E2874						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComContainedObject<class	CTrialEnd>::AddRef`adjustor{12}' (void)
.text:5B8E2874						       ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@WM@AGKXZ	proc near
.text:5B8E2874											       ; DATA XREF: .text:5B8E1524o
.text:5B8E2874
.text:5B8E2874						       arg_0	       = dword ptr  4
.text:5B8E2874
.text:5B8E2874 83 6C 24	04 0C						       sub     [esp+arg_0], 0Ch
.text:5B8E2879 E9 79 FF	FF FF						       jmp     ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGKXZ ;	ATL::CComContainedObject<CTrialEnd>::AddRef(void)
.text:5B8E2879						       ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@WM@AGKXZ	endp
.text:5B8E2879
.text:5B8E287E
.text:5B8E287E						       ; =============== S U B R O U T I N E =======================================
.text:5B8E287E
.text:5B8E287E
.text:5B8E287E						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComContainedObject<class	CTrialEnd>::Release`adjustor{12}' (void)
.text:5B8E287E						       ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@WM@AGKXZ proc near
.text:5B8E287E											       ; DATA XREF: .text:5B8E1528o
.text:5B8E287E
.text:5B8E287E						       arg_0	       = dword ptr  4
.text:5B8E287E
.text:5B8E287E 83 6C 24	04 0C						       sub     [esp+arg_0], 0Ch
.text:5B8E2883 E9 7F FF	FF FF						       jmp     ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGKXZ ; ATL::CComContainedObject<CTrialEnd>::Release(void)
.text:5B8E2883						       ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@WM@AGKXZ endp
.text:5B8E2883
.text:5B8E2888
.text:5B8E2888						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2888
.text:5B8E2888
.text:5B8E2888						       ; [thunk]:public: virtual long __stdcall	ATL::CComContainedObject<class CTrialEnd>::QueryInterface`adjustor{16}' (struct _GUID const &, void * *)
.text:5B8E2888						       ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@WBA@AGJABU_GUID@@PAPAX@Z	proc near
.text:5B8E2888											       ; DATA XREF: .text:const	ATL::CComContainedObject<CTrialEnd>::`vftable'{for `ATL::IOleInPlaceActiveObjectImpl<CTrialEnd>'}o
.text:5B8E2888
.text:5B8E2888						       arg_0	       = dword ptr  4
.text:5B8E2888
.text:5B8E2888 83 6C 24	04 10						       sub     [esp+arg_0], 10h
.text:5B8E288D E9 85 FF	FF FF						       jmp     ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<CTrialEnd>::QueryInterface(_GUID const &,void *	*)
.text:5B8E288D						       ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@WBA@AGJABU_GUID@@PAPAX@Z	endp
.text:5B8E288D
.text:5B8E2892
.text:5B8E2892						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2892
.text:5B8E2892
.text:5B8E2892						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComContainedObject<class	CTrialEnd>::AddRef`adjustor{16}' (void)
.text:5B8E2892						       ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@WBA@AGKXZ proc near
.text:5B8E2892											       ; DATA XREF: .text:5B8E14FCo
.text:5B8E2892
.text:5B8E2892						       arg_0	       = dword ptr  4
.text:5B8E2892
.text:5B8E2892 83 6C 24	04 10						       sub     [esp+arg_0], 10h
.text:5B8E2897 E9 5B FF	FF FF						       jmp     ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGKXZ ;	ATL::CComContainedObject<CTrialEnd>::AddRef(void)
.text:5B8E2897						       ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@WBA@AGKXZ endp
.text:5B8E2897
.text:5B8E289C
.text:5B8E289C						       ; =============== S U B R O U T I N E =======================================
.text:5B8E289C
.text:5B8E289C
.text:5B8E289C						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComContainedObject<class	CTrialEnd>::Release`adjustor{16}' (void)
.text:5B8E289C						       ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@WBA@AGKXZ proc near
.text:5B8E289C											       ; DATA XREF: .text:5B8E1500o
.text:5B8E289C
.text:5B8E289C						       arg_0	       = dword ptr  4
.text:5B8E289C
.text:5B8E289C 83 6C 24	04 10						       sub     [esp+arg_0], 10h
.text:5B8E28A1 E9 61 FF	FF FF						       jmp     ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGKXZ ; ATL::CComContainedObject<CTrialEnd>::Release(void)
.text:5B8E28A1						       ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@WBA@AGKXZ endp
.text:5B8E28A1
.text:5B8E28A6
.text:5B8E28A6						       ; =============== S U B R O U T I N E =======================================
.text:5B8E28A6
.text:5B8E28A6
.text:5B8E28A6						       ; [thunk]:public: virtual long __stdcall	ATL::CComContainedObject<class CTrialEnd>::QueryInterface`adjustor{20}' (struct _GUID const &, void * *)
.text:5B8E28A6						       ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@WBE@AGJABU_GUID@@PAPAX@Z	proc near
.text:5B8E28A6											       ; DATA XREF: .text:const	ATL::CComContainedObject<CTrialEnd>::`vftable'{for `ATL::IViewObjectExImpl<CTrialEnd>'}o
.text:5B8E28A6
.text:5B8E28A6						       arg_0	       = dword ptr  4
.text:5B8E28A6
.text:5B8E28A6 83 6C 24	04 14						       sub     [esp+arg_0], 14h
.text:5B8E28AB E9 67 FF	FF FF						       jmp     ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<CTrialEnd>::QueryInterface(_GUID const &,void *	*)
.text:5B8E28AB						       ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@WBE@AGJABU_GUID@@PAPAX@Z	endp
.text:5B8E28AB
.text:5B8E28B0
.text:5B8E28B0						       ; =============== S U B R O U T I N E =======================================
.text:5B8E28B0
.text:5B8E28B0
.text:5B8E28B0						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComContainedObject<class	CTrialEnd>::AddRef`adjustor{20}' (void)
.text:5B8E28B0						       ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@WBE@AGKXZ proc near
.text:5B8E28B0											       ; DATA XREF: .text:5B8E14C0o
.text:5B8E28B0
.text:5B8E28B0						       arg_0	       = dword ptr  4
.text:5B8E28B0
.text:5B8E28B0 83 6C 24	04 14						       sub     [esp+arg_0], 14h
.text:5B8E28B5 E9 3D FF	FF FF						       jmp     ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGKXZ ;	ATL::CComContainedObject<CTrialEnd>::AddRef(void)
.text:5B8E28B5						       ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@WBE@AGKXZ endp
.text:5B8E28B5
.text:5B8E28BA
.text:5B8E28BA						       ; =============== S U B R O U T I N E =======================================
.text:5B8E28BA
.text:5B8E28BA
.text:5B8E28BA						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComContainedObject<class	CTrialEnd>::Release`adjustor{20}' (void)
.text:5B8E28BA						       ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@WBE@AGKXZ proc near
.text:5B8E28BA											       ; DATA XREF: .text:5B8E14C4o
.text:5B8E28BA
.text:5B8E28BA						       arg_0	       = dword ptr  4
.text:5B8E28BA
.text:5B8E28BA 83 6C 24	04 14						       sub     [esp+arg_0], 14h
.text:5B8E28BF E9 43 FF	FF FF						       jmp     ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGKXZ ; ATL::CComContainedObject<CTrialEnd>::Release(void)
.text:5B8E28BF						       ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@WBE@AGKXZ endp
.text:5B8E28BF
.text:5B8E28C4
.text:5B8E28C4						       ; =============== S U B R O U T I N E =======================================
.text:5B8E28C4
.text:5B8E28C4
.text:5B8E28C4						       ; [thunk]:public: virtual long __stdcall	ATL::CComContainedObject<class CTrialEnd>::QueryInterface`adjustor{24}' (struct _GUID const &, void * *)
.text:5B8E28C4						       ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@WBI@AGJABU_GUID@@PAPAX@Z	proc near
.text:5B8E28C4											       ; DATA XREF: .text:const	ATL::CComContainedObject<CTrialEnd>::`vftable'{for `ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>'}o
.text:5B8E28C4
.text:5B8E28C4						       arg_0	       = dword ptr  4
.text:5B8E28C4
.text:5B8E28C4 83 6C 24	04 18						       sub     [esp+arg_0], 18h
.text:5B8E28C9 E9 49 FF	FF FF						       jmp     ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<CTrialEnd>::QueryInterface(_GUID const &,void *	*)
.text:5B8E28C9						       ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@WBI@AGJABU_GUID@@PAPAX@Z	endp
.text:5B8E28C9
.text:5B8E28CE
.text:5B8E28CE						       ; =============== S U B R O U T I N E =======================================
.text:5B8E28CE
.text:5B8E28CE
.text:5B8E28CE						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComContainedObject<class	CTrialEnd>::AddRef`adjustor{24}' (void)
.text:5B8E28CE						       ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@WBI@AGKXZ proc near
.text:5B8E28CE											       ; DATA XREF: .text:5B8E1494o
.text:5B8E28CE
.text:5B8E28CE						       arg_0	       = dword ptr  4
.text:5B8E28CE
.text:5B8E28CE 83 6C 24	04 18						       sub     [esp+arg_0], 18h
.text:5B8E28D3 E9 1F FF	FF FF						       jmp     ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGKXZ ;	ATL::CComContainedObject<CTrialEnd>::AddRef(void)
.text:5B8E28D3						       ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@WBI@AGKXZ endp
.text:5B8E28D3
.text:5B8E28D8
.text:5B8E28D8						       ; =============== S U B R O U T I N E =======================================
.text:5B8E28D8
.text:5B8E28D8
.text:5B8E28D8						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComContainedObject<class	CTrialEnd>::Release`adjustor{24}' (void)
.text:5B8E28D8						       ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@WBI@AGKXZ proc near
.text:5B8E28D8											       ; DATA XREF: .text:5B8E1498o
.text:5B8E28D8
.text:5B8E28D8						       arg_0	       = dword ptr  4
.text:5B8E28D8
.text:5B8E28D8 83 6C 24	04 18						       sub     [esp+arg_0], 18h
.text:5B8E28DD E9 25 FF	FF FF						       jmp     ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGKXZ ; ATL::CComContainedObject<CTrialEnd>::Release(void)
.text:5B8E28DD						       ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@WBI@AGKXZ endp
.text:5B8E28DD
.text:5B8E28E2
.text:5B8E28E2						       ; =============== S U B R O U T I N E =======================================
.text:5B8E28E2
.text:5B8E28E2
.text:5B8E28E2						       ; [thunk]:public: virtual long __stdcall	ATL::CComContainedObject<class CTrialEnd>::QueryInterface`adjustor{28}' (struct _GUID const &, void * *)
.text:5B8E28E2						       ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@WBM@AGJABU_GUID@@PAPAX@Z	proc near
.text:5B8E28E2											       ; DATA XREF: .text:const	ATL::CComContainedObject<CTrialEnd>::`vftable'{for `ATL::IObjectSafetyImpl<CTrialEnd>'}o
.text:5B8E28E2
.text:5B8E28E2						       arg_0	       = dword ptr  4
.text:5B8E28E2
.text:5B8E28E2 83 6C 24	04 1C						       sub     [esp+arg_0], 1Ch
.text:5B8E28E7 E9 2B FF	FF FF						       jmp     ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGJABU_GUID@@PAPAX@Z ; ATL::CComContainedObject<CTrialEnd>::QueryInterface(_GUID const &,void *	*)
.text:5B8E28E7						       ?QueryInterface@?$CComContainedObject@VCTrialEnd@@@ATL@@WBM@AGJABU_GUID@@PAPAX@Z	endp
.text:5B8E28E7
.text:5B8E28EC
.text:5B8E28EC						       ; =============== S U B R O U T I N E =======================================
.text:5B8E28EC
.text:5B8E28EC
.text:5B8E28EC						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComContainedObject<class	CTrialEnd>::AddRef`adjustor{28}' (void)
.text:5B8E28EC						       ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@WBM@AGKXZ proc near
.text:5B8E28EC											       ; DATA XREF: .text:5B8E1480o
.text:5B8E28EC
.text:5B8E28EC						       arg_0	       = dword ptr  4
.text:5B8E28EC
.text:5B8E28EC 83 6C 24	04 1C						       sub     [esp+arg_0], 1Ch
.text:5B8E28F1 E9 01 FF	FF FF						       jmp     ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGKXZ ;	ATL::CComContainedObject<CTrialEnd>::AddRef(void)
.text:5B8E28F1						       ?AddRef@?$CComContainedObject@VCTrialEnd@@@ATL@@WBM@AGKXZ endp
.text:5B8E28F1
.text:5B8E28F6
.text:5B8E28F6						       ; =============== S U B R O U T I N E =======================================
.text:5B8E28F6
.text:5B8E28F6
.text:5B8E28F6						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComContainedObject<class	CTrialEnd>::Release`adjustor{28}' (void)
.text:5B8E28F6						       ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@WBM@AGKXZ proc near
.text:5B8E28F6											       ; DATA XREF: .text:5B8E1484o
.text:5B8E28F6
.text:5B8E28F6						       arg_0	       = dword ptr  4
.text:5B8E28F6
.text:5B8E28F6 83 6C 24	04 1C						       sub     [esp+arg_0], 1Ch
.text:5B8E28FB E9 07 FF	FF FF						       jmp     ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@UAGKXZ ; ATL::CComContainedObject<CTrialEnd>::Release(void)
.text:5B8E28FB						       ?Release@?$CComContainedObject@VCTrialEnd@@@ATL@@WBM@AGKXZ endp
.text:5B8E28FB
.text:5B8E2900
.text:5B8E2900						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2900
.text:5B8E2900
.text:5B8E2900						       ; int __thiscall	ATL::CComObject<CTrialEnd>::`scalar deleting destructor'(void *, char)
.text:5B8E2900						       ??_G?$CComObject@VCTrialEnd@@@ATL@@QAEPAXI@Z proc near
.text:5B8E2900											       ; CODE XREF: ATL::CComObject<CTrialEnd>::Release(void)+18p
.text:5B8E2900											       ; ATL::CComCreator<ATL::CComObject<CTrialEnd>>::CreateInstance(void *,_GUID const &,void	* *)+45p
.text:5B8E2900
.text:5B8E2900						       arg_0	       = byte ptr  4
.text:5B8E2900
.text:5B8E2900 56							       push    esi
.text:5B8E2901 8B F1							       mov     esi, ecx
.text:5B8E2903 E8 99 FD	FF FF						       call    ??1?$CComObject@VCTrialEnd@@@ATL@@QAE@XZ	; ATL::CComObject<CTrialEnd>::~CComObject<CTrialEnd>(void)
.text:5B8E2908 F6 44 24	08 01						       test    [esp+4+arg_0], 1
.text:5B8E290D 74 07							       jz      short loc_5B8E2916
.text:5B8E290F 56							       push    esi	       ; void *
.text:5B8E2910 E8 57 2E	00 00						       call    ??3@YAXPAX@Z    ; operator delete(void *)
.text:5B8E2915 59							       pop     ecx
.text:5B8E2916
.text:5B8E2916						       loc_5B8E2916:			       ; CODE XREF: ATL::CComObject<CTrialEnd>::`scalar	deleting destructor'(uint)+Dj
.text:5B8E2916 8B C6							       mov     eax, esi
.text:5B8E2918 5E							       pop     esi
.text:5B8E2919 C2 04 00							       retn    4
.text:5B8E2919						       ??_G?$CComObject@VCTrialEnd@@@ATL@@QAEPAXI@Z endp
.text:5B8E2919
.text:5B8E291C
.text:5B8E291C						       ; =============== S U B R O U T I N E =======================================
.text:5B8E291C
.text:5B8E291C
.text:5B8E291C						       ; int __thiscall	ATL::CComAggObject<CTrialEnd>::`scalar deleting	destructor'(void *, char)
.text:5B8E291C						       ??_G?$CComAggObject@VCTrialEnd@@@ATL@@QAEPAXI@Z proc near
.text:5B8E291C											       ; CODE XREF: ATL::CComAggObject<CTrialEnd>::Release(void)+15p
.text:5B8E291C											       ; ATL::CComCreator<ATL::CComAggObject<CTrialEnd>>::CreateInstance(void *,_GUID const &,void * *)+42p
.text:5B8E291C
.text:5B8E291C						       arg_0	       = byte ptr  4
.text:5B8E291C
.text:5B8E291C 56							       push    esi
.text:5B8E291D 8B F1							       mov     esi, ecx
.text:5B8E291F E8 E5 FD	FF FF						       call    ??1?$CComAggObject@VCTrialEnd@@@ATL@@QAE@XZ ; ATL::CComAggObject<CTrialEnd>::~CComAggObject<CTrialEnd>(void)
.text:5B8E2924 F6 44 24	08 01						       test    [esp+4+arg_0], 1
.text:5B8E2929 74 07							       jz      short loc_5B8E2932
.text:5B8E292B 56							       push    esi	       ; void *
.text:5B8E292C E8 3B 2E	00 00						       call    ??3@YAXPAX@Z    ; operator delete(void *)
.text:5B8E2931 59							       pop     ecx
.text:5B8E2932
.text:5B8E2932						       loc_5B8E2932:			       ; CODE XREF: ATL::CComAggObject<CTrialEnd>::`scalar deleting destructor'(uint)+Dj
.text:5B8E2932 8B C6							       mov     eax, esi
.text:5B8E2934 5E							       pop     esi
.text:5B8E2935 C2 04 00							       retn    4
.text:5B8E2935						       ??_G?$CComAggObject@VCTrialEnd@@@ATL@@QAEPAXI@Z endp
.text:5B8E2935
.text:5B8E2938
.text:5B8E2938						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2938
.text:5B8E2938
.text:5B8E2938						       ; public: virtual unsigned long __stdcall ATL::CComObject<class CTrialEnd>::Release(void)
.text:5B8E2938						       ?Release@?$CComObject@VCTrialEnd@@@ATL@@UAGKXZ proc near
.text:5B8E2938											       ; CODE XREF: [thunk]:ATL::CComObject<CTrialEnd>::Release`adjustor{4}' (void)+5j
.text:5B8E2938											       ; [thunk]:ATL::CComObject<CTrialEnd>::Release`adjustor{8}' (void)+5j ...
.text:5B8E2938
.text:5B8E2938						       arg_0	       = dword ptr  4
.text:5B8E2938
.text:5B8E2938 8B 44 24	04						       mov     eax, [esp+arg_0]
.text:5B8E293C FF 48 24							       dec     dword ptr [eax+24h]
.text:5B8E293F 56							       push    esi
.text:5B8E2940 8B 70 24							       mov     esi, [eax+24h]
.text:5B8E2943 85 F6							       test    esi, esi
.text:5B8E2945 75 0E							       jnz     short loc_5B8E2955
.text:5B8E2947 8D 48 9C							       lea     ecx, [eax-64h]  ; void *
.text:5B8E294A 85 C9							       test    ecx, ecx
.text:5B8E294C 74 07							       jz      short loc_5B8E2955
.text:5B8E294E 6A 01							       push    1	       ; char
.text:5B8E2950 E8 AB FF	FF FF						       call    ??_G?$CComObject@VCTrialEnd@@@ATL@@QAEPAXI@Z ; ATL::CComObject<CTrialEnd>::`scalar deleting destructor'(uint)
.text:5B8E2955
.text:5B8E2955						       loc_5B8E2955:			       ; CODE XREF: ATL::CComObject<CTrialEnd>::Release(void)+Dj
.text:5B8E2955											       ; ATL::CComObject<CTrialEnd>::Release(void)+14j
.text:5B8E2955 8B C6							       mov     eax, esi
.text:5B8E2957 5E							       pop     esi
.text:5B8E2958 C2 04 00							       retn    4
.text:5B8E2958						       ?Release@?$CComObject@VCTrialEnd@@@ATL@@UAGKXZ endp
.text:5B8E2958
.text:5B8E295B
.text:5B8E295B						       ; =============== S U B R O U T I N E =======================================
.text:5B8E295B
.text:5B8E295B
.text:5B8E295B						       ; public: __thiscall ATL::CComAggObject<class CTrialEnd>::CComAggObject<class CTrialEnd>(void *)
.text:5B8E295B						       ??0?$CComAggObject@VCTrialEnd@@@ATL@@QAE@PAX@Z proc near
.text:5B8E295B											       ; CODE XREF: ATL::CComCreator<ATL::CComAggObject<CTrialEnd>>::CreateInstance(void *,_GUID const &,void *	*)+1Cp
.text:5B8E295B
.text:5B8E295B						       arg_0	       = dword ptr  4
.text:5B8E295B
.text:5B8E295B 56							       push    esi
.text:5B8E295C FF 74 24	08						       push    [esp+4+arg_0]
.text:5B8E2960 8B F1							       mov     esi, ecx
.text:5B8E2962 83 66 04	00						       and     dword ptr [esi+4], 0
.text:5B8E2966 8D 4E 08							       lea     ecx, [esi+8]
.text:5B8E2969 C7 06 70	14 8E 5B					       mov     dword ptr [esi],	offset ??_7?$CComAggObject@VCTrialEnd@@@ATL@@6B@ ; const ATL::CComAggObject<CTrialEnd>::`vftable'
.text:5B8E296F E8 23 FE	FF FF						       call    ??0?$CComContainedObject@VCTrialEnd@@@ATL@@QAE@PAX@Z ; ATL::CComContainedObject<CTrialEnd>::CComContainedObject<CTrialEnd>(void *)
.text:5B8E2974 68 EC 70	8E 5B						       push    offset Addend   ; lpAddend
.text:5B8E2979 FF 15 90	10 8E 5B					       call    ds:__imp__InterlockedIncrement@4	; InterlockedIncrement(x)
.text:5B8E297F 8B C6							       mov     eax, esi
.text:5B8E2981 5E							       pop     esi
.text:5B8E2982 C2 04 00							       retn    4
.text:5B8E2982						       ??0?$CComAggObject@VCTrialEnd@@@ATL@@QAE@PAX@Z endp
.text:5B8E2982
.text:5B8E2985
.text:5B8E2985						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2985
.text:5B8E2985
.text:5B8E2985						       ; int __stdcall ATL::CComAggObject<CTrialEnd>::Release(void *)
.text:5B8E2985						       ?Release@?$CComAggObject@VCTrialEnd@@@ATL@@UAGKXZ proc near
.text:5B8E2985											       ; DATA XREF: .text:5B8E1478o
.text:5B8E2985
.text:5B8E2985						       arg_0	       = dword ptr  4
.text:5B8E2985
.text:5B8E2985 8B 4C 24	04						       mov     ecx, [esp+arg_0]	; void *
.text:5B8E2989 FF 49 04							       dec     dword ptr [ecx+4]
.text:5B8E298C 56							       push    esi
.text:5B8E298D 8B 71 04							       mov     esi, [ecx+4]
.text:5B8E2990 85 F6							       test    esi, esi
.text:5B8E2992 75 0B							       jnz     short loc_5B8E299F
.text:5B8E2994 85 C9							       test    ecx, ecx
.text:5B8E2996 74 07							       jz      short loc_5B8E299F
.text:5B8E2998 6A 01							       push    1	       ; char
.text:5B8E299A E8 7D FF	FF FF						       call    ??_G?$CComAggObject@VCTrialEnd@@@ATL@@QAEPAXI@Z ; ATL::CComAggObject<CTrialEnd>::`scalar	deleting destructor'(uint)
.text:5B8E299F
.text:5B8E299F						       loc_5B8E299F:			       ; CODE XREF: ATL::CComAggObject<CTrialEnd>::Release(void)+Dj
.text:5B8E299F											       ; ATL::CComAggObject<CTrialEnd>::Release(void)+11j
.text:5B8E299F 8B C6							       mov     eax, esi
.text:5B8E29A1 5E							       pop     esi
.text:5B8E29A2 C2 04 00							       retn    4
.text:5B8E29A2						       ?Release@?$CComAggObject@VCTrialEnd@@@ATL@@UAGKXZ endp
.text:5B8E29A2
.text:5B8E29A5
.text:5B8E29A5						       ; =============== S U B R O U T I N E =======================================
.text:5B8E29A5
.text:5B8E29A5
.text:5B8E29A5						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComObject<class CTrialEnd>::Release`adjustor{4}' (void)
.text:5B8E29A5						       ?Release@?$CComObject@VCTrialEnd@@@ATL@@W3AGKXZ proc near
.text:5B8E29A5											       ; DATA XREF: .text:5B8E1374o
.text:5B8E29A5
.text:5B8E29A5						       arg_0	       = dword ptr  4
.text:5B8E29A5
.text:5B8E29A5 83 6C 24	04 04						       sub     [esp+arg_0], 4
.text:5B8E29AA E9 89 FF	FF FF						       jmp     ?Release@?$CComObject@VCTrialEnd@@@ATL@@UAGKXZ ;	ATL::CComObject<CTrialEnd>::Release(void)
.text:5B8E29AA						       ?Release@?$CComObject@VCTrialEnd@@@ATL@@W3AGKXZ endp
.text:5B8E29AA
.text:5B8E29AF
.text:5B8E29AF						       ; =============== S U B R O U T I N E =======================================
.text:5B8E29AF
.text:5B8E29AF
.text:5B8E29AF						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComObject<class CTrialEnd>::Release`adjustor{8}' (void)
.text:5B8E29AF						       ?Release@?$CComObject@VCTrialEnd@@@ATL@@W7AGKXZ proc near
.text:5B8E29AF											       ; DATA XREF: .text:5B8E1358o
.text:5B8E29AF
.text:5B8E29AF						       arg_0	       = dword ptr  4
.text:5B8E29AF
.text:5B8E29AF 83 6C 24	04 08						       sub     [esp+arg_0], 8
.text:5B8E29B4 E9 7F FF	FF FF						       jmp     ?Release@?$CComObject@VCTrialEnd@@@ATL@@UAGKXZ ;	ATL::CComObject<CTrialEnd>::Release(void)
.text:5B8E29B4						       ?Release@?$CComObject@VCTrialEnd@@@ATL@@W7AGKXZ endp
.text:5B8E29B4
.text:5B8E29B9
.text:5B8E29B9						       ; =============== S U B R O U T I N E =======================================
.text:5B8E29B9
.text:5B8E29B9
.text:5B8E29B9						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComObject<class CTrialEnd>::Release`adjustor{12}' (void)
.text:5B8E29B9						       ?Release@?$CComObject@VCTrialEnd@@@ATL@@WM@AGKXZ	proc near
.text:5B8E29B9											       ; DATA XREF: .text:5B8E12F8o
.text:5B8E29B9
.text:5B8E29B9						       arg_0	       = dword ptr  4
.text:5B8E29B9
.text:5B8E29B9 83 6C 24	04 0C						       sub     [esp+arg_0], 0Ch
.text:5B8E29BE E9 75 FF	FF FF						       jmp     ?Release@?$CComObject@VCTrialEnd@@@ATL@@UAGKXZ ;	ATL::CComObject<CTrialEnd>::Release(void)
.text:5B8E29BE						       ?Release@?$CComObject@VCTrialEnd@@@ATL@@WM@AGKXZ	endp
.text:5B8E29BE
.text:5B8E29C3
.text:5B8E29C3						       ; =============== S U B R O U T I N E =======================================
.text:5B8E29C3
.text:5B8E29C3
.text:5B8E29C3						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComObject<class CTrialEnd>::Release`adjustor{16}' (void)
.text:5B8E29C3						       ?Release@?$CComObject@VCTrialEnd@@@ATL@@WBA@AGKXZ proc near
.text:5B8E29C3											       ; DATA XREF: .text:5B8E12D0o
.text:5B8E29C3
.text:5B8E29C3						       arg_0	       = dword ptr  4
.text:5B8E29C3
.text:5B8E29C3 83 6C 24	04 10						       sub     [esp+arg_0], 10h
.text:5B8E29C8 E9 6B FF	FF FF						       jmp     ?Release@?$CComObject@VCTrialEnd@@@ATL@@UAGKXZ ;	ATL::CComObject<CTrialEnd>::Release(void)
.text:5B8E29C8						       ?Release@?$CComObject@VCTrialEnd@@@ATL@@WBA@AGKXZ endp
.text:5B8E29C8
.text:5B8E29CD
.text:5B8E29CD						       ; =============== S U B R O U T I N E =======================================
.text:5B8E29CD
.text:5B8E29CD
.text:5B8E29CD						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComObject<class CTrialEnd>::Release`adjustor{20}' (void)
.text:5B8E29CD						       ?Release@?$CComObject@VCTrialEnd@@@ATL@@WBE@AGKXZ proc near
.text:5B8E29CD											       ; DATA XREF: .text:5B8E1294o
.text:5B8E29CD
.text:5B8E29CD						       arg_0	       = dword ptr  4
.text:5B8E29CD
.text:5B8E29CD 83 6C 24	04 14						       sub     [esp+arg_0], 14h
.text:5B8E29D2 E9 61 FF	FF FF						       jmp     ?Release@?$CComObject@VCTrialEnd@@@ATL@@UAGKXZ ;	ATL::CComObject<CTrialEnd>::Release(void)
.text:5B8E29D2						       ?Release@?$CComObject@VCTrialEnd@@@ATL@@WBE@AGKXZ endp
.text:5B8E29D2
.text:5B8E29D7
.text:5B8E29D7						       ; =============== S U B R O U T I N E =======================================
.text:5B8E29D7
.text:5B8E29D7
.text:5B8E29D7						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComObject<class CTrialEnd>::Release`adjustor{24}' (void)
.text:5B8E29D7						       ?Release@?$CComObject@VCTrialEnd@@@ATL@@WBI@AGKXZ proc near
.text:5B8E29D7											       ; DATA XREF: .text:5B8E1268o
.text:5B8E29D7
.text:5B8E29D7						       arg_0	       = dword ptr  4
.text:5B8E29D7
.text:5B8E29D7 83 6C 24	04 18						       sub     [esp+arg_0], 18h
.text:5B8E29DC E9 57 FF	FF FF						       jmp     ?Release@?$CComObject@VCTrialEnd@@@ATL@@UAGKXZ ;	ATL::CComObject<CTrialEnd>::Release(void)
.text:5B8E29DC						       ?Release@?$CComObject@VCTrialEnd@@@ATL@@WBI@AGKXZ endp
.text:5B8E29DC
.text:5B8E29E1
.text:5B8E29E1						       ; =============== S U B R O U T I N E =======================================
.text:5B8E29E1
.text:5B8E29E1
.text:5B8E29E1						       ; [thunk]:public: virtual unsigned long __stdcall ATL::CComObject<class CTrialEnd>::Release`adjustor{28}' (void)
.text:5B8E29E1						       ?Release@?$CComObject@VCTrialEnd@@@ATL@@WBM@AGKXZ proc near
.text:5B8E29E1											       ; DATA XREF: .text:5B8E1254o
.text:5B8E29E1
.text:5B8E29E1						       arg_0	       = dword ptr  4
.text:5B8E29E1
.text:5B8E29E1 83 6C 24	04 1C						       sub     [esp+arg_0], 1Ch
.text:5B8E29E6 E9 4D FF	FF FF						       jmp     ?Release@?$CComObject@VCTrialEnd@@@ATL@@UAGKXZ ;	ATL::CComObject<CTrialEnd>::Release(void)
.text:5B8E29E6						       ?Release@?$CComObject@VCTrialEnd@@@ATL@@WBM@AGKXZ endp
.text:5B8E29E6
.text:5B8E29EB
.text:5B8E29EB						       ; =============== S U B R O U T I N E =======================================
.text:5B8E29EB
.text:5B8E29EB
.text:5B8E29EB						       ; public: static	long __stdcall ATL::CComCreator<class ATL::CComObject<class CTrialEnd>>::CreateInstance(void *,	struct _GUID const &, void * *)
.text:5B8E29EB						       ?CreateInstance@?$CComCreator@V?$CComObject@VCTrialEnd@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z proc	near
.text:5B8E29EB											       ; CODE XREF: ATL::CComCreator2<ATL::CComCreator<ATL::CComObject<CTrialEnd>>,ATL::CComCreator<ATL::CComAggObject<CTrialEnd>>>::CreateInstance(void *,_GUID const &,void *	*)+11p
.text:5B8E29EB
.text:5B8E29EB						       arg_0	       = dword ptr  4
.text:5B8E29EB						       arg_4	       = dword ptr  8
.text:5B8E29EB						       arg_8	       = dword ptr  0Ch
.text:5B8E29EB
.text:5B8E29EB 56							       push    esi
.text:5B8E29EC 57							       push    edi
.text:5B8E29ED 68 8C 00	00 00						       push    8Ch	       ; unsigned int
.text:5B8E29F2 BF 0E 00	07 80						       mov     edi, 8007000Eh
.text:5B8E29F7 E8 76 2D	00 00						       call    ??2@YAPAXI@Z    ; operator new(uint)
.text:5B8E29FC 85 C0							       test    eax, eax
.text:5B8E29FE 59							       pop     ecx
.text:5B8E29FF 74 0F							       jz      short loc_5B8E2A10
.text:5B8E2A01 FF 74 24	0C						       push    [esp+8+arg_0]
.text:5B8E2A05 8B C8							       mov     ecx, eax
.text:5B8E2A07 E8 5B F3	FF FF						       call    ??0?$CComObject@VCTrialEnd@@@ATL@@QAE@PAX@Z ; ATL::CComObject<CTrialEnd>::CComObject<CTrialEnd>(void *)
.text:5B8E2A0C 8B F0							       mov     esi, eax
.text:5B8E2A0E EB 02							       jmp     short loc_5B8E2A12
.text:5B8E2A10						       ; ---------------------------------------------------------------------------
.text:5B8E2A10
.text:5B8E2A10						       loc_5B8E2A10:			       ; CODE XREF: ATL::CComCreator<ATL::CComObject<CTrialEnd>>::CreateInstance(void *,_GUID const &,void * *)+14j
.text:5B8E2A10 33 F6							       xor     esi, esi
.text:5B8E2A12
.text:5B8E2A12						       loc_5B8E2A12:			       ; CODE XREF: ATL::CComCreator<ATL::CComObject<CTrialEnd>>::CreateInstance(void *,_GUID const &,void * *)+23j
.text:5B8E2A12 85 F6							       test    esi, esi
.text:5B8E2A14 74 1F							       jz      short loc_5B8E2A35
.text:5B8E2A16 FF 74 24	14						       push    [esp+8+arg_8]
.text:5B8E2A1A 8D 46 64							       lea     eax, [esi+64h]
.text:5B8E2A1D FF 74 24	14						       push    [esp+0Ch+arg_4]
.text:5B8E2A21 8B 08							       mov     ecx, [eax]
.text:5B8E2A23 50							       push    eax
.text:5B8E2A24 FF 11							       call    dword ptr [ecx]
.text:5B8E2A26 8B F8							       mov     edi, eax
.text:5B8E2A28 85 FF							       test    edi, edi
.text:5B8E2A2A 74 09							       jz      short loc_5B8E2A35
.text:5B8E2A2C 6A 01							       push    1	       ; char
.text:5B8E2A2E 8B CE							       mov     ecx, esi	       ; void *
.text:5B8E2A30 E8 CB FE	FF FF						       call    ??_G?$CComObject@VCTrialEnd@@@ATL@@QAEPAXI@Z ; ATL::CComObject<CTrialEnd>::`scalar deleting destructor'(uint)
.text:5B8E2A35
.text:5B8E2A35						       loc_5B8E2A35:			       ; CODE XREF: ATL::CComCreator<ATL::CComObject<CTrialEnd>>::CreateInstance(void *,_GUID const &,void * *)+29j
.text:5B8E2A35											       ; ATL::CComCreator<ATL::CComObject<CTrialEnd>>::CreateInstance(void *,_GUID const &,void	* *)+3Fj
.text:5B8E2A35 8B C7							       mov     eax, edi
.text:5B8E2A37 5F							       pop     edi
.text:5B8E2A38 5E							       pop     esi
.text:5B8E2A39 C2 0C 00							       retn    0Ch
.text:5B8E2A39						       ?CreateInstance@?$CComCreator@V?$CComObject@VCTrialEnd@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z endp
.text:5B8E2A39
.text:5B8E2A3C
.text:5B8E2A3C						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2A3C
.text:5B8E2A3C
.text:5B8E2A3C						       ; public: static	long __stdcall ATL::CComCreator<class ATL::CComAggObject<class CTrialEnd>>::CreateInstance(void	*, struct _GUID	const &, void *	*)
.text:5B8E2A3C						       ?CreateInstance@?$CComCreator@V?$CComAggObject@VCTrialEnd@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z proc near
.text:5B8E2A3C											       ; CODE XREF: ATL::CComCreator2<ATL::CComCreator<ATL::CComObject<CTrialEnd>>,ATL::CComCreator<ATL::CComAggObject<CTrialEnd>>>::CreateInstance(void *,_GUID const &,void *	*)+1Bj
.text:5B8E2A3C
.text:5B8E2A3C						       arg_0	       = dword ptr  4
.text:5B8E2A3C						       arg_4	       = dword ptr  8
.text:5B8E2A3C						       arg_8	       = dword ptr  0Ch
.text:5B8E2A3C
.text:5B8E2A3C 56							       push    esi
.text:5B8E2A3D 57							       push    edi
.text:5B8E2A3E 68 94 00	00 00						       push    94h	       ; unsigned int
.text:5B8E2A43 BF 0E 00	07 80						       mov     edi, 8007000Eh
.text:5B8E2A48 E8 25 2D	00 00						       call    ??2@YAPAXI@Z    ; operator new(uint)
.text:5B8E2A4D 85 C0							       test    eax, eax
.text:5B8E2A4F 59							       pop     ecx
.text:5B8E2A50 74 0F							       jz      short loc_5B8E2A61
.text:5B8E2A52 FF 74 24	0C						       push    [esp+8+arg_0]
.text:5B8E2A56 8B C8							       mov     ecx, eax
.text:5B8E2A58 E8 FE FE	FF FF						       call    ??0?$CComAggObject@VCTrialEnd@@@ATL@@QAE@PAX@Z ;	ATL::CComAggObject<CTrialEnd>::CComAggObject<CTrialEnd>(void *)
.text:5B8E2A5D 8B F0							       mov     esi, eax
.text:5B8E2A5F EB 02							       jmp     short loc_5B8E2A63
.text:5B8E2A61						       ; ---------------------------------------------------------------------------
.text:5B8E2A61
.text:5B8E2A61						       loc_5B8E2A61:			       ; CODE XREF: ATL::CComCreator<ATL::CComAggObject<CTrialEnd>>::CreateInstance(void *,_GUID const &,void *	*)+14j
.text:5B8E2A61 33 F6							       xor     esi, esi
.text:5B8E2A63
.text:5B8E2A63						       loc_5B8E2A63:			       ; CODE XREF: ATL::CComCreator<ATL::CComAggObject<CTrialEnd>>::CreateInstance(void *,_GUID const &,void *	*)+23j
.text:5B8E2A63 85 F6							       test    esi, esi
.text:5B8E2A65 74 1C							       jz      short loc_5B8E2A83
.text:5B8E2A67 FF 74 24	14						       push    [esp+8+arg_8]
.text:5B8E2A6B 8B 06							       mov     eax, [esi]
.text:5B8E2A6D FF 74 24	14						       push    [esp+0Ch+arg_4]
.text:5B8E2A71 56							       push    esi
.text:5B8E2A72 FF 10							       call    dword ptr [eax]
.text:5B8E2A74 8B F8							       mov     edi, eax
.text:5B8E2A76 85 FF							       test    edi, edi
.text:5B8E2A78 74 09							       jz      short loc_5B8E2A83
.text:5B8E2A7A 6A 01							       push    1	       ; char
.text:5B8E2A7C 8B CE							       mov     ecx, esi	       ; void *
.text:5B8E2A7E E8 99 FE	FF FF						       call    ??_G?$CComAggObject@VCTrialEnd@@@ATL@@QAEPAXI@Z ; ATL::CComAggObject<CTrialEnd>::`scalar	deleting destructor'(uint)
.text:5B8E2A83
.text:5B8E2A83						       loc_5B8E2A83:			       ; CODE XREF: ATL::CComCreator<ATL::CComAggObject<CTrialEnd>>::CreateInstance(void *,_GUID const &,void *	*)+29j
.text:5B8E2A83											       ; ATL::CComCreator<ATL::CComAggObject<CTrialEnd>>::CreateInstance(void *,_GUID const &,void * *)+3Cj
.text:5B8E2A83 8B C7							       mov     eax, edi
.text:5B8E2A85 5F							       pop     edi
.text:5B8E2A86 5E							       pop     esi
.text:5B8E2A87 C2 0C 00							       retn    0Ch
.text:5B8E2A87						       ?CreateInstance@?$CComCreator@V?$CComAggObject@VCTrialEnd@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z endp
.text:5B8E2A87
.text:5B8E2A8A
.text:5B8E2A8A						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2A8A
.text:5B8E2A8A						       ; Attributes: bp-based frame
.text:5B8E2A8A
.text:5B8E2A8A						       ; public: static	long __stdcall ATL::CComCreator2<class ATL::CComCreator<class ATL::CComObject<class CTrialEnd>>, class ATL::CComCreator<class ATL::CComAggObject<class CTrialEnd>>>::CreateInstance(void *, struct _GUID const &, void * *)
.text:5B8E2A8A						       ?CreateInstance@?$CComCreator2@V?$CComCreator@V?$CComObject@VCTrialEnd@@@ATL@@@ATL@@V?$CComCreator@V?$CComAggObject@VCTrialEnd@@@ATL@@@2@@ATL@@SGJPAXABU_GUID@@PAPAX@Z proc near
.text:5B8E2A8A											       ; DATA XREF: .data:5B8E700Co
.text:5B8E2A8A
.text:5B8E2A8A						       arg_0	       = dword ptr  8
.text:5B8E2A8A						       arg_4	       = dword ptr  0Ch
.text:5B8E2A8A						       arg_8	       = dword ptr  10h
.text:5B8E2A8A
.text:5B8E2A8A 55							       push    ebp
.text:5B8E2A8B 8B EC							       mov     ebp, esp
.text:5B8E2A8D 83 7D 08	00						       cmp     [ebp+arg_0], 0
.text:5B8E2A91 75 11							       jnz     short loc_5B8E2AA4
.text:5B8E2A93 FF 75 10							       push    [ebp+arg_8]
.text:5B8E2A96 FF 75 0C							       push    [ebp+arg_4]
.text:5B8E2A99 6A 00							       push    0
.text:5B8E2A9B E8 4B FF	FF FF						       call    ?CreateInstance@?$CComCreator@V?$CComObject@VCTrialEnd@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ; ATL::CComCreator<ATL::CComObject<CTrialEnd>>::CreateInstance(void *,_GUID const &,void * *)
.text:5B8E2AA0 5D							       pop     ebp
.text:5B8E2AA1 C2 0C 00							       retn    0Ch
.text:5B8E2AA4						       ; ---------------------------------------------------------------------------
.text:5B8E2AA4
.text:5B8E2AA4						       loc_5B8E2AA4:			       ; CODE XREF: ATL::CComCreator2<ATL::CComCreator<ATL::CComObject<CTrialEnd>>,ATL::CComCreator<ATL::CComAggObject<CTrialEnd>>>::CreateInstance(void *,_GUID const &,void *	*)+7j
.text:5B8E2AA4 5D							       pop     ebp
.text:5B8E2AA5 E9 92 FF	FF FF						       jmp     ?CreateInstance@?$CComCreator@V?$CComAggObject@VCTrialEnd@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ;	ATL::CComCreator<ATL::CComAggObject<CTrialEnd>>::CreateInstance(void *,_GUID const &,void * *)
.text:5B8E2AA5						       ?CreateInstance@?$CComCreator2@V?$CComCreator@V?$CComObject@VCTrialEnd@@@ATL@@@ATL@@V?$CComCreator@V?$CComAggObject@VCTrialEnd@@@ATL@@@2@@ATL@@SGJPAXABU_GUID@@PAPAX@Z endp
.text:5B8E2AA5
.text:5B8E2AAA
.text:5B8E2AAA						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2AAA
.text:5B8E2AAA						       ; Attributes: bp-based frame
.text:5B8E2AAA
.text:5B8E2AAA						       ; __int32 __stdcall CTrialEnd::CleanupTrialReminder(CTrialEnd *this, int	*)
.text:5B8E2AAA						       ?CleanupTrialReminder@CTrialEnd@@UAGJPAH@Z proc near
.text:5B8E2AAA											       ; DATA XREF: .text:5B8E13ACo
.text:5B8E2AAA											       ; .text:5B8E15DCo
.text:5B8E2AAA
.text:5B8E2AAA						       Data	       = byte ptr -8
.text:5B8E2AAA						       phkResult       = dword ptr -4
.text:5B8E2AAA						       this	       = dword ptr  8
.text:5B8E2AAA
.text:5B8E2AAA 55							       push    ebp
.text:5B8E2AAB 8B EC							       mov     ebp, esp
.text:5B8E2AAD 51							       push    ecx
.text:5B8E2AAE 51							       push    ecx
.text:5B8E2AAF 8D 45 FC							       lea     eax, [ebp+phkResult]
.text:5B8E2AB2 50							       push    eax	       ; phkResult
.text:5B8E2AB3 68 3F 00	0F 00						       push    0F003Fh	       ; samDesired
.text:5B8E2AB8 6A 00							       push    0	       ; ulOptions
.text:5B8E2ABA 68 E0 15	8E 5B						       push    offset SubKey   ; "Software\\Microsoft\\Internet	Connectio"...
.text:5B8E2ABF 68 02 00	00 80						       push    80000002h       ; hKey
.text:5B8E2AC4 C7 45 F8	01 00 00 00					       mov     dword ptr [ebp+Data], 1
.text:5B8E2ACB FF 15 08	10 8E 5B					       call    ds:__imp__RegOpenKeyExW@20 ; RegOpenKeyExW(x,x,x,x,x)
.text:5B8E2AD1 85 C0							       test    eax, eax
.text:5B8E2AD3 75 21							       jnz     short loc_5B8E2AF6
.text:5B8E2AD5 6A 04							       push    4	       ; cbData
.text:5B8E2AD7 8D 45 F8							       lea     eax, [ebp+Data]
.text:5B8E2ADA 50							       push    eax	       ; lpData
.text:5B8E2ADB 6A 04							       push    4	       ; dwType
.text:5B8E2ADD 6A 00							       push    0	       ; Reserved
.text:5B8E2ADF 68 50 16	8E 5B						       push    offset ValueName	; "TrialConverted"
.text:5B8E2AE4 FF 75 FC							       push    [ebp+phkResult] ; hKey
.text:5B8E2AE7 FF 15 0C	10 8E 5B					       call    ds:__imp__RegSetValueExW@24 ; RegSetValueExW(x,x,x,x,x,x)
.text:5B8E2AED FF 75 FC							       push    [ebp+phkResult] ; hKey
.text:5B8E2AF0 FF 15 10	10 8E 5B					       call    ds:__imp__RegCloseKey@4 ; RegCloseKey(x)
.text:5B8E2AF6
.text:5B8E2AF6						       loc_5B8E2AF6:			       ; CODE XREF: CTrialEnd::CleanupTrialReminder(int	*)+29j
.text:5B8E2AF6 33 C0							       xor     eax, eax
.text:5B8E2AF8 C9							       leave
.text:5B8E2AF9 C2 08 00							       retn    8
.text:5B8E2AF9						       ?CleanupTrialReminder@CTrialEnd@@UAGJPAH@Z endp
.text:5B8E2AF9
.text:5B8E2AFC
.text:5B8E2AFC						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2AFC
.text:5B8E2AFC
.text:5B8E2AFC						       ; int __thiscall	ATL::CExpansionVector::CExpansionVector(ATL::CExpansionVector *__hidden	this)
.text:5B8E2AFC						       ??0CExpansionVector@ATL@@QAE@XZ proc near
.text:5B8E2AFC											       ; CODE XREF: ATL::CComModule::UpdateRegistryFromResourceS(uint,int,ATL::_ATL_REGMAP_ENTRY *)+Ep
.text:5B8E2AFC 56							       push    esi
.text:5B8E2AFD 8B F1							       mov     esi, ecx
.text:5B8E2AFF 83 66 04	00						       and     dword ptr [esi+4], 0
.text:5B8E2B03 6A 28							       push    28h	       ; Size
.text:5B8E2B05 C7 46 08	0A 00 00 00					       mov     dword ptr [esi+8], 0Ah
.text:5B8E2B0C FF 15 78	11 8E 5B					       call    ds:__imp__malloc
.text:5B8E2B12 89 06							       mov     [esi], eax
.text:5B8E2B14 59							       pop     ecx
.text:5B8E2B15 8B C6							       mov     eax, esi
.text:5B8E2B17 5E							       pop     esi
.text:5B8E2B18 C3							       retn
.text:5B8E2B18						       ??0CExpansionVector@ATL@@QAE@XZ endp
.text:5B8E2B18
.text:5B8E2B19
.text:5B8E2B19						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2B19
.text:5B8E2B19
.text:5B8E2B19						       ; int __thiscall	ATL::CRegParser::EndOfVar(ATL::CRegParser *__hidden this)
.text:5B8E2B19						       ?EndOfVar@CRegParser@ATL@@IAEHXZ	proc near
.text:5B8E2B19											       ; CODE XREF: ATL::CRegParser::NextToken(ushort *)+38p
.text:5B8E2B19 8B 01							       mov     eax, [ecx]
.text:5B8E2B1B 66 83 38	27						       cmp     word ptr	[eax], 27h
.text:5B8E2B1F 75 11							       jnz     short loc_5B8E2B32
.text:5B8E2B21 50							       push    eax	       ; lpsz
.text:5B8E2B22 FF 15 50	11 8E 5B					       call    ds:__imp__CharNextW@4 ; CharNextW(x)
.text:5B8E2B28 66 83 38	27						       cmp     word ptr	[eax], 27h
.text:5B8E2B2C 74 04							       jz      short loc_5B8E2B32
.text:5B8E2B2E 33 C0							       xor     eax, eax
.text:5B8E2B30 40							       inc     eax
.text:5B8E2B31 C3							       retn
.text:5B8E2B32						       ; ---------------------------------------------------------------------------
.text:5B8E2B32
.text:5B8E2B32						       loc_5B8E2B32:			       ; CODE XREF: ATL::CRegParser::EndOfVar(void)+6j
.text:5B8E2B32											       ; ATL::CRegParser::EndOfVar(void)+13j
.text:5B8E2B32 33 C0							       xor     eax, eax
.text:5B8E2B34 C3							       retn
.text:5B8E2B34						       ?EndOfVar@CRegParser@ATL@@IAEHXZ	endp
.text:5B8E2B34
.text:5B8E2B35
.text:5B8E2B35						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2B35
.text:5B8E2B35
.text:5B8E2B35						       sub_5B8E2B35    proc near	       ; CODE XREF: ATL::CRegParser::PreProcessBuffer(ushort *,ushort *	*)+67p
.text:5B8E2B35											       ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+A1p ...
.text:5B8E2B35
.text:5B8E2B35						       arg_0	       = word ptr  4
.text:5B8E2B35
.text:5B8E2B35 56							       push    esi
.text:5B8E2B36 33 F6							       xor     esi, esi
.text:5B8E2B38 EB 0E							       jmp     short loc_5B8E2B48
.text:5B8E2B3A						       ; ---------------------------------------------------------------------------
.text:5B8E2B3A
.text:5B8E2B3A						       loc_5B8E2B3A:			       ; CODE XREF: sub_5B8E2B35+19j
.text:5B8E2B3A 66 3B 4C	24 08						       cmp     cx, [esp+4+arg_0]
.text:5B8E2B3F 74 11							       jz      short loc_5B8E2B52
.text:5B8E2B41 50							       push    eax	       ; lpsz
.text:5B8E2B42 FF 15 50	11 8E 5B					       call    ds:__imp__CharNextW@4 ; CharNextW(x)
.text:5B8E2B48
.text:5B8E2B48						       loc_5B8E2B48:			       ; CODE XREF: sub_5B8E2B35+3j
.text:5B8E2B48 66 8B 08							       mov     cx, [eax]
.text:5B8E2B4B 66 85 C9							       test    cx, cx
.text:5B8E2B4E 75 EA							       jnz     short loc_5B8E2B3A
.text:5B8E2B50 EB 02							       jmp     short loc_5B8E2B54
.text:5B8E2B52						       ; ---------------------------------------------------------------------------
.text:5B8E2B52
.text:5B8E2B52						       loc_5B8E2B52:			       ; CODE XREF: sub_5B8E2B35+Aj
.text:5B8E2B52 8B F0							       mov     esi, eax
.text:5B8E2B54
.text:5B8E2B54						       loc_5B8E2B54:			       ; CODE XREF: sub_5B8E2B35+1Bj
.text:5B8E2B54 8B C6							       mov     eax, esi
.text:5B8E2B56 5E							       pop     esi
.text:5B8E2B57 C2 04 00							       retn    4
.text:5B8E2B57						       sub_5B8E2B35    endp
.text:5B8E2B57
.text:5B8E2B5A
.text:5B8E2B5A						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2B5A
.text:5B8E2B5A
.text:5B8E2B5A						       ; __fastcall InlineIsEqualGUID(x, x)
.text:5B8E2B5A						       @InlineIsEqualGUID@8 proc near	       ; CODE XREF: ATL::AtlInternalQueryInterface(void	*,ATL::_ATL_INTMAP_ENTRY const *,_GUID const &,void * *)+50p
.text:5B8E2B5A											       ; ATL::AtlModuleGetClassObject(ATL::_ATL_MODULE *,_GUID const &,_GUID const &,void * *)+2Dp
.text:5B8E2B5A 8B 01							       mov     eax, [ecx]
.text:5B8E2B5C 3B 02							       cmp     eax, [edx]
.text:5B8E2B5E 75 1C							       jnz     short loc_5B8E2B7C
.text:5B8E2B60 8B 41 04							       mov     eax, [ecx+4]
.text:5B8E2B63 3B 42 04							       cmp     eax, [edx+4]
.text:5B8E2B66 75 14							       jnz     short loc_5B8E2B7C
.text:5B8E2B68 8B 41 08							       mov     eax, [ecx+8]
.text:5B8E2B6B 3B 42 08							       cmp     eax, [edx+8]
.text:5B8E2B6E 75 0C							       jnz     short loc_5B8E2B7C
.text:5B8E2B70 8B 41 0C							       mov     eax, [ecx+0Ch]
.text:5B8E2B73 3B 42 0C							       cmp     eax, [edx+0Ch]
.text:5B8E2B76 75 04							       jnz     short loc_5B8E2B7C
.text:5B8E2B78 33 C0							       xor     eax, eax
.text:5B8E2B7A 40							       inc     eax
.text:5B8E2B7B C3							       retn
.text:5B8E2B7C						       ; ---------------------------------------------------------------------------
.text:5B8E2B7C
.text:5B8E2B7C						       loc_5B8E2B7C:			       ; CODE XREF: InlineIsEqualGUID(x,x)+4j
.text:5B8E2B7C											       ; InlineIsEqualGUID(x,x)+Cj ...
.text:5B8E2B7C 33 C0							       xor     eax, eax
.text:5B8E2B7E C3							       retn
.text:5B8E2B7E						       @InlineIsEqualGUID@8 endp
.text:5B8E2B7E
.text:5B8E2B7F
.text:5B8E2B7F						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2B7F
.text:5B8E2B7F
.text:5B8E2B7F						       ; int __thiscall	ATL::CRegParser::IsSpace(ATL::CRegParser *this,	unsigned __int16)
.text:5B8E2B7F						       ?IsSpace@CRegParser@ATL@@IAEHG@Z	proc near
.text:5B8E2B7F											       ; CODE XREF: ATL::CRegParser::SkipWhiteSpace(void)+14p
.text:5B8E2B7F											       ; ATL::CRegParser::NextToken(ushort *)+AAp
.text:5B8E2B7F
.text:5B8E2B7F						       arg_0	       = word ptr  4
.text:5B8E2B7F
.text:5B8E2B7F 0F B7 44	24 04						       movzx   eax, [esp+arg_0]
.text:5B8E2B84 83 F8 09							       cmp     eax, 9
.text:5B8E2B87 7C 14							       jl      short loc_5B8E2B9D
.text:5B8E2B89 83 F8 0A							       cmp     eax, 0Ah
.text:5B8E2B8C 7E 0A							       jle     short loc_5B8E2B98
.text:5B8E2B8E 83 F8 0D							       cmp     eax, 0Dh
.text:5B8E2B91 74 05							       jz      short loc_5B8E2B98
.text:5B8E2B93 83 F8 20							       cmp     eax, 20h
.text:5B8E2B96 75 05							       jnz     short loc_5B8E2B9D
.text:5B8E2B98
.text:5B8E2B98						       loc_5B8E2B98:			       ; CODE XREF: ATL::CRegParser::IsSpace(ushort)+Dj
.text:5B8E2B98											       ; ATL::CRegParser::IsSpace(ushort)+12j
.text:5B8E2B98 33 C0							       xor     eax, eax
.text:5B8E2B9A 40							       inc     eax
.text:5B8E2B9B EB 02							       jmp     short locret_5B8E2B9F
.text:5B8E2B9D						       ; ---------------------------------------------------------------------------
.text:5B8E2B9D
.text:5B8E2B9D						       loc_5B8E2B9D:			       ; CODE XREF: ATL::CRegParser::IsSpace(ushort)+8j
.text:5B8E2B9D											       ; ATL::CRegParser::IsSpace(ushort)+17j
.text:5B8E2B9D 33 C0							       xor     eax, eax
.text:5B8E2B9F
.text:5B8E2B9F						       locret_5B8E2B9F:			       ; CODE XREF: ATL::CRegParser::IsSpace(ushort)+1Cj
.text:5B8E2B9F C2 04 00							       retn    4
.text:5B8E2B9F						       ?IsSpace@CRegParser@ATL@@IAEHG@Z	endp
.text:5B8E2B9F
.text:5B8E2BA2
.text:5B8E2BA2						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2BA2
.text:5B8E2BA2
.text:5B8E2BA2						       ; void __thiscall ATL::CRegParser::IncrementLinePos(ATL::CRegParser *__hidden this)
.text:5B8E2BA2						       ?IncrementLinePos@CRegParser@ATL@@IAEXXZ	proc near
.text:5B8E2BA2											       ; CODE XREF: ATL::CRegParser::SkipWhiteSpace(void)+7p
.text:5B8E2BA2											       ; ATL::CRegParser::NextToken(ushort *)+2Fp ...
.text:5B8E2BA2 56							       push    esi
.text:5B8E2BA3 8B F1							       mov     esi, ecx
.text:5B8E2BA5 FF 36							       push    dword ptr [esi] ; lpsz
.text:5B8E2BA7 FF 15 50	11 8E 5B					       call    ds:__imp__CharNextW@4 ; CharNextW(x)
.text:5B8E2BAD 89 06							       mov     [esi], eax
.text:5B8E2BAF 66 83 38	0A						       cmp     word ptr	[eax], 0Ah
.text:5B8E2BB3 75 03							       jnz     short loc_5B8E2BB8
.text:5B8E2BB5 FF 46 04							       inc     dword ptr [esi+4]
.text:5B8E2BB8
.text:5B8E2BB8						       loc_5B8E2BB8:			       ; CODE XREF: ATL::CRegParser::IncrementLinePos(void)+11j
.text:5B8E2BB8 5E							       pop     esi
.text:5B8E2BB9 C3							       retn
.text:5B8E2BB9						       ?IncrementLinePos@CRegParser@ATL@@IAEXXZ	endp
.text:5B8E2BB9
.text:5B8E2BBA
.text:5B8E2BBA						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2BBA
.text:5B8E2BBA
.text:5B8E2BBA						       ; void __thiscall ATL::CRegParser::SkipWhiteSpace(ATL::CRegParser *this)
.text:5B8E2BBA						       ?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ proc near
.text:5B8E2BBA											       ; CODE XREF: ATL::CRegParser::NextToken(ushort *)+7p
.text:5B8E2BBA											       ; ATL::CRegParser::AddValue(ATL::CRegKey	&,ushort const *,ushort	*)+6Ap	...
.text:5B8E2BBA 56							       push    esi
.text:5B8E2BBB 8B F1							       mov     esi, ecx
.text:5B8E2BBD EB 07							       jmp     short loc_5B8E2BC6
.text:5B8E2BBF						       ; ---------------------------------------------------------------------------
.text:5B8E2BBF
.text:5B8E2BBF						       loc_5B8E2BBF:			       ; CODE XREF: ATL::CRegParser::SkipWhiteSpace(void)+1Bj
.text:5B8E2BBF 8B CE							       mov     ecx, esi	       ; this
.text:5B8E2BC1 E8 DC FF	FF FF						       call    ?IncrementLinePos@CRegParser@ATL@@IAEXXZ	; ATL::CRegParser::IncrementLinePos(void)
.text:5B8E2BC6
.text:5B8E2BC6						       loc_5B8E2BC6:			       ; CODE XREF: ATL::CRegParser::SkipWhiteSpace(void)+3j
.text:5B8E2BC6 8B 06							       mov     eax, [esi]
.text:5B8E2BC8 0F B7 00							       movzx   eax, word ptr [eax]
.text:5B8E2BCB 8B CE							       mov     ecx, esi	       ; this
.text:5B8E2BCD 50							       push    eax	       ; unsigned __int16
.text:5B8E2BCE E8 AC FF	FF FF						       call    ?IsSpace@CRegParser@ATL@@IAEHG@Z	; ATL::CRegParser::IsSpace(ushort)
.text:5B8E2BD3 85 C0							       test    eax, eax
.text:5B8E2BD5 75 E8							       jnz     short loc_5B8E2BBF
.text:5B8E2BD7 5E							       pop     esi
.text:5B8E2BD8 C3							       retn
.text:5B8E2BD8						       ?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ endp
.text:5B8E2BD8
.text:5B8E2BD9
.text:5B8E2BD9						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2BD9
.text:5B8E2BD9
.text:5B8E2BD9						       ; int __stdcall sub_5B8E2BD9(LPCWSTR lpString1, int)
.text:5B8E2BD9						       sub_5B8E2BD9    proc near	       ; CODE XREF: ATL::CRegParser::AddValue(ATL::CRegKey &,ushort const *,ushort *)+45p
.text:5B8E2BD9
.text:5B8E2BD9						       lpString1       = dword ptr  4
.text:5B8E2BD9						       arg_4	       = dword ptr  8
.text:5B8E2BD9
.text:5B8E2BD9 F6 05 50	71 8E 5B 01					       test    byte ptr	dword_5B8E7150,	1
.text:5B8E2BE0 75 2D							       jnz     short loc_5B8E2C0F
.text:5B8E2BE2 83 0D 50	71 8E 5B 01					       or      dword_5B8E7150, 1
.text:5B8E2BE9 C7 05 40	71 8E 5B EC 16 8E 5B				       mov     lpString2, offset aS ; "S"
.text:5B8E2BF3 66 C7 05	44 71 8E 5B 08 00				       mov     word_5B8E7144, 8
.text:5B8E2BFC C7 05 48	71 8E 5B E8 16 8E 5B				       mov     dword_5B8E7148, offset aD ; "D"
.text:5B8E2C06 66 C7 05	4C 71 8E 5B 03 00				       mov     word_5B8E714C, 3
.text:5B8E2C0F
.text:5B8E2C0F						       loc_5B8E2C0F:			       ; CODE XREF: sub_5B8E2BD9+7j
.text:5B8E2C0F 56							       push    esi
.text:5B8E2C10 33 F6							       xor     esi, esi
.text:5B8E2C12
.text:5B8E2C12						       loc_5B8E2C12:			       ; CODE XREF: sub_5B8E2BD9+52j
.text:5B8E2C12 FF 34 F5	40 71 8E 5B					       push    lpString2[esi*8]	; lpString2
.text:5B8E2C19 FF 74 24	0C						       push    [esp+8+lpString1] ; lpString1
.text:5B8E2C1D FF 15 7C	10 8E 5B					       call    ds:__imp__lstrcmpiW@8 ; lstrcmpiW(x,x)
.text:5B8E2C23 85 C0							       test    eax, eax
.text:5B8E2C25 74 0C							       jz      short loc_5B8E2C33
.text:5B8E2C27 46							       inc     esi
.text:5B8E2C28 83 FE 02							       cmp     esi, 2
.text:5B8E2C2B 72 E5							       jb      short loc_5B8E2C12
.text:5B8E2C2D 33 C0							       xor     eax, eax
.text:5B8E2C2F
.text:5B8E2C2F						       loc_5B8E2C2F:			       ; CODE XREF: sub_5B8E2BD9+6Cj
.text:5B8E2C2F 5E							       pop     esi
.text:5B8E2C30 C2 08 00							       retn    8
.text:5B8E2C33						       ; ---------------------------------------------------------------------------
.text:5B8E2C33
.text:5B8E2C33						       loc_5B8E2C33:			       ; CODE XREF: sub_5B8E2BD9+4Cj
.text:5B8E2C33 66 8B 04	F5 44 71 8E 5B					       mov     ax, word_5B8E7144[esi*8]
.text:5B8E2C3B 8B 4C 24	0C						       mov     ecx, [esp+4+arg_4]
.text:5B8E2C3F 66 89 01							       mov     [ecx], ax
.text:5B8E2C42 33 C0							       xor     eax, eax
.text:5B8E2C44 40							       inc     eax
.text:5B8E2C45 EB E8							       jmp     short loc_5B8E2C2F
.text:5B8E2C45						       sub_5B8E2BD9    endp
.text:5B8E2C45
.text:5B8E2C47
.text:5B8E2C47						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2C47
.text:5B8E2C47
.text:5B8E2C47						       ; int __thiscall	ATL::CRegParser::CanForceRemoveKey(ATL::CRegParser *this, const	unsigned __int16 *)
.text:5B8E2C47						       ?CanForceRemoveKey@CRegParser@ATL@@IAEHPBG@Z proc near
.text:5B8E2C47											       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+B7p
.text:5B8E2C47											       ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+3CBp
.text:5B8E2C47
.text:5B8E2C47						       lpString1       = dword ptr  4
.text:5B8E2C47
.text:5B8E2C47 56							       push    esi
.text:5B8E2C48 BE C0 70	8E 5B						       mov     esi, offset ?rgszNeverDelete@ATL@@3PAPBGA ; ushort const	* * ATL::rgszNeverDelete
.text:5B8E2C4D
.text:5B8E2C4D						       loc_5B8E2C4D:			       ; CODE XREF: ATL::CRegParser::CanForceRemoveKey(ushort const *)+1Fj
.text:5B8E2C4D FF 36							       push    dword ptr [esi] ; lpString2
.text:5B8E2C4F FF 74 24	0C						       push    [esp+8+lpString1] ; lpString1
.text:5B8E2C53 FF 15 7C	10 8E 5B					       call    ds:__imp__lstrcmpiW@8 ; lstrcmpiW(x,x)
.text:5B8E2C59 85 C0							       test    eax, eax
.text:5B8E2C5B 74 12							       jz      short loc_5B8E2C6F
.text:5B8E2C5D 83 C6 04							       add     esi, 4
.text:5B8E2C60 81 FE C8	70 8E 5B					       cmp     esi, offset unk_5B8E70C8
.text:5B8E2C66 7C E5							       jl      short loc_5B8E2C4D
.text:5B8E2C68 33 C0							       xor     eax, eax
.text:5B8E2C6A 40							       inc     eax
.text:5B8E2C6B
.text:5B8E2C6B						       loc_5B8E2C6B:			       ; CODE XREF: ATL::CRegParser::CanForceRemoveKey(ushort const *)+2Aj
.text:5B8E2C6B 5E							       pop     esi
.text:5B8E2C6C C2 04 00							       retn    4
.text:5B8E2C6F						       ; ---------------------------------------------------------------------------
.text:5B8E2C6F
.text:5B8E2C6F						       loc_5B8E2C6F:			       ; CODE XREF: ATL::CRegParser::CanForceRemoveKey(ushort const *)+14j
.text:5B8E2C6F 33 C0							       xor     eax, eax
.text:5B8E2C71 EB F8							       jmp     short loc_5B8E2C6B
.text:5B8E2C71						       ?CanForceRemoveKey@CRegParser@ATL@@IAEHPBG@Z endp
.text:5B8E2C71
.text:5B8E2C73
.text:5B8E2C73						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2C73
.text:5B8E2C73
.text:5B8E2C73						       ; int __thiscall	ATL::CParseBuffer::CParseBuffer(ATL::CParseBuffer *this, int)
.text:5B8E2C73						       ??0CParseBuffer@ATL@@QAE@H@Z proc near  ; CODE XREF: ATL::CRegParser::PreProcessBuffer(ushort *,ushort *	*)+22p
.text:5B8E2C73
.text:5B8E2C73						       arg_0	       = dword ptr  4
.text:5B8E2C73
.text:5B8E2C73 8B 44 24	04						       mov     eax, [esp+arg_0]
.text:5B8E2C77 56							       push    esi
.text:5B8E2C78 8B F1							       mov     esi, ecx
.text:5B8E2C7A 83 26 00							       and     dword ptr [esi],	0
.text:5B8E2C7D 89 46 04							       mov     [esi+4],	eax
.text:5B8E2C80 03 C0							       add     eax, eax
.text:5B8E2C82 50							       push    eax	       ; cb
.text:5B8E2C83 FF 15 B0	11 8E 5B					       call    ds:__imp__CoTaskMemAlloc@4 ; CoTaskMemAlloc(x)
.text:5B8E2C89 89 46 08							       mov     [esi+8],	eax
.text:5B8E2C8C 8B C6							       mov     eax, esi
.text:5B8E2C8E 5E							       pop     esi
.text:5B8E2C8F C2 04 00							       retn    4
.text:5B8E2C8F						       ??0CParseBuffer@ATL@@QAE@H@Z endp
.text:5B8E2C8F
.text:5B8E2C92
.text:5B8E2C92						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2C92
.text:5B8E2C92
.text:5B8E2C92						       ; int __thiscall	ATL::CParseBuffer::AddChar(ATL::CParseBuffer *this, unsigned __int16)
.text:5B8E2C92						       ?AddChar@CParseBuffer@ATL@@QAEHG@Z proc near
.text:5B8E2C92											       ; CODE XREF: ATL::CParseBuffer::AddString(ushort	const *)+Dp
.text:5B8E2C92											       ; ATL::CRegParser::PreProcessBuffer(ushort *,ushort * *)+B6p ...
.text:5B8E2C92
.text:5B8E2C92						       arg_0	       = word ptr  4
.text:5B8E2C92
.text:5B8E2C92 56							       push    esi
.text:5B8E2C93 8B F1							       mov     esi, ecx
.text:5B8E2C95 8B 46 04							       mov     eax, [esi+4]
.text:5B8E2C98 39 06							       cmp     [esi], eax
.text:5B8E2C9A 75 14							       jnz     short loc_5B8E2CB0
.text:5B8E2C9C 03 C0							       add     eax, eax
.text:5B8E2C9E 89 46 04							       mov     [esi+4],	eax
.text:5B8E2CA1 03 C0							       add     eax, eax
.text:5B8E2CA3 50							       push    eax	       ; cb
.text:5B8E2CA4 FF 76 08							       push    dword ptr [esi+8] ; pv
.text:5B8E2CA7 FF 15 90	11 8E 5B					       call    ds:__imp__CoTaskMemRealloc@8 ; CoTaskMemRealloc(x,x)
.text:5B8E2CAD 89 46 08							       mov     [esi+8],	eax
.text:5B8E2CB0
.text:5B8E2CB0						       loc_5B8E2CB0:			       ; CODE XREF: ATL::CParseBuffer::AddChar(ushort)+8j
.text:5B8E2CB0 8B 06							       mov     eax, [esi]
.text:5B8E2CB2 8B 4E 08							       mov     ecx, [esi+8]
.text:5B8E2CB5 66 8B 54	24 08						       mov     dx, [esp+4+arg_0]
.text:5B8E2CBA 66 89 14	41						       mov     [ecx+eax*2], dx
.text:5B8E2CBE FF 06							       inc     dword ptr [esi]
.text:5B8E2CC0 33 C0							       xor     eax, eax
.text:5B8E2CC2 40							       inc     eax
.text:5B8E2CC3 5E							       pop     esi
.text:5B8E2CC4 C2 04 00							       retn    4
.text:5B8E2CC4						       ?AddChar@CParseBuffer@ATL@@QAEHG@Z endp
.text:5B8E2CC4
.text:5B8E2CC7
.text:5B8E2CC7						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2CC7
.text:5B8E2CC7						       ; Attributes: bp-based frame
.text:5B8E2CC7
.text:5B8E2CC7						       ; __int32 __thiscall ATL::CExpansionVector::Add(ATL::CExpansionVector *this, LPCWSTR lpString, const unsigned __int16 *)
.text:5B8E2CC7						       ?Add@CExpansionVector@ATL@@QAEJPBG0@Z proc near
.text:5B8E2CC7											       ; CODE XREF: ATL::CRegObject::AddReplacement(ushort const *,ushort const	*)+Cp
.text:5B8E2CC7											       ; ATL::CComModule::UpdateRegistryFromResourceS(uint,int,ATL::_ATL_REGMAP_ENTRY *)+53p
.text:5B8E2CC7
.text:5B8E2CC7						       var_C	       = dword ptr -0Ch
.text:5B8E2CC7						       var_8	       = dword ptr -8
.text:5B8E2CC7						       cb	       = dword ptr -4
.text:5B8E2CC7						       lpString	       = dword ptr  8
.text:5B8E2CC7						       arg_4	       = dword ptr  0Ch
.text:5B8E2CC7
.text:5B8E2CC7 55							       push    ebp
.text:5B8E2CC8 8B EC							       mov     ebp, esp
.text:5B8E2CCA 83 EC 0C							       sub     esp, 0Ch
.text:5B8E2CCD 83 65 F8	00						       and     [ebp+var_8], 0
.text:5B8E2CD1 53							       push    ebx
.text:5B8E2CD2 6A 08							       push    8	       ; unsigned int
.text:5B8E2CD4 89 4D F4							       mov     [ebp+var_C], ecx
.text:5B8E2CD7 E8 96 2A	00 00						       call    ??2@YAPAXI@Z    ; operator new(uint)
.text:5B8E2CDC 8B D8							       mov     ebx, eax
.text:5B8E2CDE 85 DB							       test    ebx, ebx
.text:5B8E2CE0 59							       pop     ecx
.text:5B8E2CE1 75 0A							       jnz     short loc_5B8E2CED
.text:5B8E2CE3 B8 0E 00	07 80						       mov     eax, 8007000Eh
.text:5B8E2CE8 E9 C3 00	00 00						       jmp     loc_5B8E2DB0
.text:5B8E2CED						       ; ---------------------------------------------------------------------------
.text:5B8E2CED
.text:5B8E2CED						       loc_5B8E2CED:			       ; CODE XREF: ATL::CExpansionVector::Add(ushort const *,ushort const *)+1Aj
.text:5B8E2CED 56							       push    esi
.text:5B8E2CEE 8B 35 78	10 8E 5B					       mov     esi, ds:__imp__lstrlenW@4 ; lstrlenW(x)
.text:5B8E2CF4 57							       push    edi
.text:5B8E2CF5 FF 75 08							       push    [ebp+lpString]  ; lpString
.text:5B8E2CF8 FF D6							       call    esi ; lstrlenW(x) ; lstrlenW(x)
.text:5B8E2CFA FF 75 0C							       push    [ebp+arg_4]     ; lpString
.text:5B8E2CFD 8D 7C 00	02						       lea     edi, [eax+eax+2]
.text:5B8E2D01 FF D6							       call    esi ; lstrlenW(x) ; lstrlenW(x)
.text:5B8E2D03 8B 35 B0	11 8E 5B					       mov     esi, ds:__imp__CoTaskMemAlloc@4 ; CoTaskMemAlloc(x)
.text:5B8E2D09 8D 44 00	02						       lea     eax, [eax+eax+2]
.text:5B8E2D0D 57							       push    edi	       ; cb
.text:5B8E2D0E 89 45 FC							       mov     [ebp+cb], eax
.text:5B8E2D11 FF D6							       call    esi ; CoTaskMemAlloc(x) ; CoTaskMemAlloc(x)
.text:5B8E2D13 FF 75 FC							       push    [ebp+cb]	       ; cb
.text:5B8E2D16 89 03							       mov     [ebx], eax
.text:5B8E2D18 FF D6							       call    esi ; CoTaskMemAlloc(x) ; CoTaskMemAlloc(x)
.text:5B8E2D1A 8B 13							       mov     edx, [ebx]
.text:5B8E2D1C 85 D2							       test    edx, edx
.text:5B8E2D1E 89 43 04							       mov     [ebx+4],	eax
.text:5B8E2D21 74 71							       jz      short loc_5B8E2D94
.text:5B8E2D23 85 C0							       test    eax, eax
.text:5B8E2D25 74 6D							       jz      short loc_5B8E2D94
.text:5B8E2D27 8B 75 08							       mov     esi, [ebp+lpString]
.text:5B8E2D2A 8B CF							       mov     ecx, edi
.text:5B8E2D2C 8B C1							       mov     eax, ecx
.text:5B8E2D2E C1 E9 02							       shr     ecx, 2
.text:5B8E2D31 8B FA							       mov     edi, edx
.text:5B8E2D33 F3 A5							       rep movsd
.text:5B8E2D35 8B C8							       mov     ecx, eax
.text:5B8E2D37 83 E1 03							       and     ecx, 3
.text:5B8E2D3A F3 A4							       rep movsb
.text:5B8E2D3C 8B 4D FC							       mov     ecx, [ebp+cb]
.text:5B8E2D3F 8B 7B 04							       mov     edi, [ebx+4]
.text:5B8E2D42 8B 75 0C							       mov     esi, [ebp+arg_4]
.text:5B8E2D45 8B C1							       mov     eax, ecx
.text:5B8E2D47 C1 E9 02							       shr     ecx, 2
.text:5B8E2D4A F3 A5							       rep movsd
.text:5B8E2D4C 8B C8							       mov     ecx, eax
.text:5B8E2D4E 83 E1 03							       and     ecx, 3
.text:5B8E2D51 F3 A4							       rep movsb
.text:5B8E2D53 8B 75 F4							       mov     esi, [ebp+var_C]
.text:5B8E2D56 8B 46 08							       mov     eax, [esi+8]
.text:5B8E2D59 39 46 04							       cmp     [esi+4],	eax
.text:5B8E2D5C 75 19							       jnz     short loc_5B8E2D77
.text:5B8E2D5E 03 C0							       add     eax, eax
.text:5B8E2D60 89 46 08							       mov     [esi+8],	eax
.text:5B8E2D63 C1 E0 02							       shl     eax, 2
.text:5B8E2D66 50							       push    eax	       ; NewSize
.text:5B8E2D67 FF 36							       push    dword ptr [esi] ; Memory
.text:5B8E2D69 FF 15 7C	11 8E 5B					       call    ds:__imp__realloc
.text:5B8E2D6F 85 C0							       test    eax, eax
.text:5B8E2D71 59							       pop     ecx
.text:5B8E2D72 59							       pop     ecx
.text:5B8E2D73 74 34							       jz      short loc_5B8E2DA9
.text:5B8E2D75 89 06							       mov     [esi], eax
.text:5B8E2D77
.text:5B8E2D77						       loc_5B8E2D77:			       ; CODE XREF: ATL::CExpansionVector::Add(ushort const *,ushort const *)+95j
.text:5B8E2D77 8B 06							       mov     eax, [esi]
.text:5B8E2D79 85 C0							       test    eax, eax
.text:5B8E2D7B 74 0B							       jz      short loc_5B8E2D88
.text:5B8E2D7D 8B 4E 04							       mov     ecx, [esi+4]
.text:5B8E2D80 89 1C 88							       mov     [eax+ecx*4], ebx
.text:5B8E2D83 FF 46 04							       inc     dword ptr [esi+4]
.text:5B8E2D86 EB 07							       jmp     short loc_5B8E2D8F
.text:5B8E2D88						       ; ---------------------------------------------------------------------------
.text:5B8E2D88
.text:5B8E2D88						       loc_5B8E2D88:			       ; CODE XREF: ATL::CExpansionVector::Add(ushort const *,ushort const *)+B4j
.text:5B8E2D88 C7 45 F8	0E 00 07 80					       mov     [ebp+var_8], 8007000Eh
.text:5B8E2D8F
.text:5B8E2D8F						       loc_5B8E2D8F:			       ; CODE XREF: ATL::CExpansionVector::Add(ushort const *,ushort const *)+BFj
.text:5B8E2D8F 8B 45 F8							       mov     eax, [ebp+var_8]
.text:5B8E2D92 EB 1A							       jmp     short loc_5B8E2DAE
.text:5B8E2D94						       ; ---------------------------------------------------------------------------
.text:5B8E2D94
.text:5B8E2D94						       loc_5B8E2D94:			       ; CODE XREF: ATL::CExpansionVector::Add(ushort const *,ushort const *)+5Aj
.text:5B8E2D94											       ; ATL::CExpansionVector::Add(ushort const *,ushort const	*)+5Ej
.text:5B8E2D94 8B 35 98	11 8E 5B					       mov     esi, ds:__imp__CoTaskMemFree@4 ;	CoTaskMemFree(x)
.text:5B8E2D9A 52							       push    edx	       ; pv
.text:5B8E2D9B FF D6							       call    esi ; CoTaskMemFree(x) ;	CoTaskMemFree(x)
.text:5B8E2D9D FF 73 04							       push    dword ptr [ebx+4] ; pv
.text:5B8E2DA0 FF D6							       call    esi ; CoTaskMemFree(x) ;	CoTaskMemFree(x)
.text:5B8E2DA2 53							       push    ebx	       ; void *
.text:5B8E2DA3 E8 C4 29	00 00						       call    ??3@YAXPAX@Z    ; operator delete(void *)
.text:5B8E2DA8 59							       pop     ecx
.text:5B8E2DA9
.text:5B8E2DA9						       loc_5B8E2DA9:			       ; CODE XREF: ATL::CExpansionVector::Add(ushort const *,ushort const *)+ACj
.text:5B8E2DA9 B8 0E 00	07 80						       mov     eax, 8007000Eh
.text:5B8E2DAE
.text:5B8E2DAE						       loc_5B8E2DAE:			       ; CODE XREF: ATL::CExpansionVector::Add(ushort const *,ushort const *)+CBj
.text:5B8E2DAE 5F							       pop     edi
.text:5B8E2DAF 5E							       pop     esi
.text:5B8E2DB0
.text:5B8E2DB0						       loc_5B8E2DB0:			       ; CODE XREF: ATL::CExpansionVector::Add(ushort const *,ushort const *)+21j
.text:5B8E2DB0 5B							       pop     ebx
.text:5B8E2DB1 C9							       leave
.text:5B8E2DB2 C2 08 00							       retn    8
.text:5B8E2DB2						       ?Add@CExpansionVector@ATL@@QAEJPBG0@Z endp
.text:5B8E2DB2
.text:5B8E2DB5
.text:5B8E2DB5						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2DB5
.text:5B8E2DB5
.text:5B8E2DB5						       ; int __fastcall	ATL::InlineIsEqualUnknown(const	struct _GUID *)
.text:5B8E2DB5						       ?InlineIsEqualUnknown@ATL@@YIHABU_GUID@@@Z proc near
.text:5B8E2DB5											       ; CODE XREF: ATL::CComClassFactory::CreateInstance(IUnknown *,_GUID const &,void	* *)+1Cp
.text:5B8E2DB5											       ; ATL::AtlInternalQueryInterface(void *,ATL::_ATL_INTMAP_ENTRY const *,_GUID const &,void * *)+1Ap
.text:5B8E2DB5 33 C0							       xor     eax, eax
.text:5B8E2DB7 39 01							       cmp     [ecx], eax
.text:5B8E2DB9 75 18							       jnz     short locret_5B8E2DD3
.text:5B8E2DBB 39 41 04							       cmp     [ecx+4],	eax
.text:5B8E2DBE 75 13							       jnz     short locret_5B8E2DD3
.text:5B8E2DC0 81 79 08	C0 00 00 00					       cmp     dword ptr [ecx+8], 0C0h
.text:5B8E2DC7 75 0A							       jnz     short locret_5B8E2DD3
.text:5B8E2DC9 81 79 0C	00 00 00 46					       cmp     dword ptr [ecx+0Ch], 46000000h
.text:5B8E2DD0 75 01							       jnz     short locret_5B8E2DD3
.text:5B8E2DD2 40							       inc     eax
.text:5B8E2DD3
.text:5B8E2DD3						       locret_5B8E2DD3:			       ; CODE XREF: ATL::InlineIsEqualUnknown(_GUID const &)+4j
.text:5B8E2DD3											       ; ATL::InlineIsEqualUnknown(_GUID const &)+9j ...
.text:5B8E2DD3 C3							       retn
.text:5B8E2DD3						       ?InlineIsEqualUnknown@ATL@@YIHABU_GUID@@@Z endp
.text:5B8E2DD3
.text:5B8E2DD4
.text:5B8E2DD4						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2DD4
.text:5B8E2DD4
.text:5B8E2DD4						       ; const unsigned	__int16	*__thiscall ATL::CExpansionVector::Find(ATL::CExpansionVector *this, unsigned __int16 *)
.text:5B8E2DD4						       ?Find@CExpansionVector@ATL@@QAEPBGPAG@Z proc near
.text:5B8E2DD4											       ; CODE XREF: ATL::CRegParser::PreProcessBuffer(ushort *,ushort *	*)+91p
.text:5B8E2DD4
.text:5B8E2DD4						       lpString2       = dword ptr  4
.text:5B8E2DD4
.text:5B8E2DD4 56							       push    esi
.text:5B8E2DD5 57							       push    edi
.text:5B8E2DD6 8B F1							       mov     esi, ecx
.text:5B8E2DD8 33 FF							       xor     edi, edi
.text:5B8E2DDA 39 7E 04							       cmp     [esi+4],	edi
.text:5B8E2DDD 7E 1C							       jle     short loc_5B8E2DFB
.text:5B8E2DDF
.text:5B8E2DDF						       loc_5B8E2DDF:			       ; CODE XREF: ATL::CExpansionVector::Find(ushort *)+25j
.text:5B8E2DDF 8B 06							       mov     eax, [esi]
.text:5B8E2DE1 8B 04 B8							       mov     eax, [eax+edi*4]
.text:5B8E2DE4 FF 74 24	0C						       push    [esp+8+lpString2] ; lpString2
.text:5B8E2DE8 8B 00							       mov     eax, [eax]
.text:5B8E2DEA 50							       push    eax	       ; lpString1
.text:5B8E2DEB FF 15 7C	10 8E 5B					       call    ds:__imp__lstrcmpiW@8 ; lstrcmpiW(x,x)
.text:5B8E2DF1 85 C0							       test    eax, eax
.text:5B8E2DF3 74 0D							       jz      short loc_5B8E2E02
.text:5B8E2DF5 47							       inc     edi
.text:5B8E2DF6 3B 7E 04							       cmp     edi, [esi+4]
.text:5B8E2DF9 7C E4							       jl      short loc_5B8E2DDF
.text:5B8E2DFB
.text:5B8E2DFB						       loc_5B8E2DFB:			       ; CODE XREF: ATL::CExpansionVector::Find(ushort *)+9j
.text:5B8E2DFB 33 C0							       xor     eax, eax
.text:5B8E2DFD
.text:5B8E2DFD						       loc_5B8E2DFD:			       ; CODE XREF: ATL::CExpansionVector::Find(ushort *)+36j
.text:5B8E2DFD 5F							       pop     edi
.text:5B8E2DFE 5E							       pop     esi
.text:5B8E2DFF C2 04 00							       retn    4
.text:5B8E2E02						       ; ---------------------------------------------------------------------------
.text:5B8E2E02
.text:5B8E2E02						       loc_5B8E2E02:			       ; CODE XREF: ATL::CExpansionVector::Find(ushort *)+1Fj
.text:5B8E2E02 8B 06							       mov     eax, [esi]
.text:5B8E2E04 8B 04 B8							       mov     eax, [eax+edi*4]
.text:5B8E2E07 8B 40 04							       mov     eax, [eax+4]
.text:5B8E2E0A EB F1							       jmp     short loc_5B8E2DFD
.text:5B8E2E0A						       ?Find@CExpansionVector@ATL@@QAEPBGPAG@Z endp
.text:5B8E2E0A
.text:5B8E2E0C
.text:5B8E2E0C						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2E0C
.text:5B8E2E0C
.text:5B8E2E0C						       ; __int32 __thiscall ATL::CExpansionVector::ClearReplacements(ATL::CExpansionVector *__hidden this)
.text:5B8E2E0C						       ?ClearReplacements@CExpansionVector@ATL@@QAEJXZ proc near
.text:5B8E2E0C											       ; CODE XREF: ATL::CComModule::UpdateRegistryFromResourceS(uint,int,ATL::_ATL_REGMAP_ENTRY *)+A1p
.text:5B8E2E0C 53							       push    ebx
.text:5B8E2E0D 56							       push    esi
.text:5B8E2E0E 8B F1							       mov     esi, ecx
.text:5B8E2E10 33 DB							       xor     ebx, ebx
.text:5B8E2E12 39 5E 04							       cmp     [esi+4],	ebx
.text:5B8E2E15 7E 25							       jle     short loc_5B8E2E3C
.text:5B8E2E17 55							       push    ebp
.text:5B8E2E18 8B 2D 98	11 8E 5B					       mov     ebp, ds:__imp__CoTaskMemFree@4 ;	CoTaskMemFree(x)
.text:5B8E2E1E 57							       push    edi
.text:5B8E2E1F
.text:5B8E2E1F						       loc_5B8E2E1F:			       ; CODE XREF: ATL::CExpansionVector::ClearReplacements(void)+2Cj
.text:5B8E2E1F 8B 06							       mov     eax, [esi]
.text:5B8E2E21 8B 3C 98							       mov     edi, [eax+ebx*4]
.text:5B8E2E24 FF 77 04							       push    dword ptr [edi+4] ; pv
.text:5B8E2E27 FF D5							       call    ebp ; CoTaskMemFree(x) ;	CoTaskMemFree(x)
.text:5B8E2E29 FF 37							       push    dword ptr [edi] ; pv
.text:5B8E2E2B FF D5							       call    ebp ; CoTaskMemFree(x) ;	CoTaskMemFree(x)
.text:5B8E2E2D 57							       push    edi	       ; void *
.text:5B8E2E2E E8 39 29	00 00						       call    ??3@YAXPAX@Z    ; operator delete(void *)
.text:5B8E2E33 43							       inc     ebx
.text:5B8E2E34 3B 5E 04							       cmp     ebx, [esi+4]
.text:5B8E2E37 59							       pop     ecx
.text:5B8E2E38 7C E5							       jl      short loc_5B8E2E1F
.text:5B8E2E3A 5F							       pop     edi
.text:5B8E2E3B 5D							       pop     ebp
.text:5B8E2E3C
.text:5B8E2E3C						       loc_5B8E2E3C:			       ; CODE XREF: ATL::CExpansionVector::ClearReplacements(void)+9j
.text:5B8E2E3C 83 66 04	00						       and     dword ptr [esi+4], 0
.text:5B8E2E40 5E							       pop     esi
.text:5B8E2E41 33 C0							       xor     eax, eax
.text:5B8E2E43 5B							       pop     ebx
.text:5B8E2E44 C3							       retn
.text:5B8E2E44						       ?ClearReplacements@CExpansionVector@ATL@@QAEJXZ endp
.text:5B8E2E44
.text:5B8E2E45
.text:5B8E2E45						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2E45
.text:5B8E2E45
.text:5B8E2E45						       ; __int32 __stdcall ATL::CRegObject::AddReplacement(ATL::CRegObject *this, LPCWSTR lpString, const unsigned __int16 *)
.text:5B8E2E45						       ?AddReplacement@CRegObject@ATL@@QAGJPBG0@Z proc near
.text:5B8E2E45											       ; CODE XREF: ATL::CComModule::UpdateRegistryFromResourceS(uint,int,ATL::_ATL_REGMAP_ENTRY *)+69p
.text:5B8E2E45
.text:5B8E2E45						       this	       = dword ptr  4
.text:5B8E2E45						       lpString	       = dword ptr  8
.text:5B8E2E45						       arg_8	       = dword ptr  0Ch
.text:5B8E2E45
.text:5B8E2E45 FF 74 24	0C						       push    [esp+arg_8]     ; unsigned __int16 *
.text:5B8E2E49 8B 4C 24	08						       mov     ecx, [esp+4+this] ; this
.text:5B8E2E4D FF 74 24	0C						       push    [esp+4+lpString]	; lpString
.text:5B8E2E51 E8 71 FE	FF FF						       call    ?Add@CExpansionVector@ATL@@QAEJPBG0@Z ; ATL::CExpansionVector::Add(ushort const *,ushort	const *)
.text:5B8E2E56 C2 0C 00							       retn    0Ch
.text:5B8E2E56						       ?AddReplacement@CRegObject@ATL@@QAGJPBG0@Z endp
.text:5B8E2E56
.text:5B8E2E59
.text:5B8E2E59						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2E59
.text:5B8E2E59
.text:5B8E2E59						       ; unsigned __int16 *__stdcall AtlA2WHelper(LPWSTR lpWideCharStr,	LPCSTR lpMultiByteStr, int cchWideChar)
.text:5B8E2E59						       ?AtlA2WHelper@@YGPAGPAGPBDH@Z proc near ; CODE XREF: ATL::CRegObject::RegisterFromResource(ushort const *,ushort	const *,ushort const *,int)+101p
.text:5B8E2E59
.text:5B8E2E59						       lpWideCharStr   = dword ptr  4
.text:5B8E2E59						       lpMultiByteStr  = dword ptr  8
.text:5B8E2E59						       cchWideChar     = dword ptr  0Ch
.text:5B8E2E59
.text:5B8E2E59 56							       push    esi
.text:5B8E2E5A FF 74 24	10						       push    [esp+4+cchWideChar] ; cchWideChar
.text:5B8E2E5E 8B 74 24	0C						       mov     esi, [esp+8+lpWideCharStr]
.text:5B8E2E62 56							       push    esi	       ; lpWideCharStr
.text:5B8E2E63 6A FF							       push    0FFFFFFFFh      ; cbMultiByte
.text:5B8E2E65 FF 74 24	18						       push    [esp+10h+lpMultiByteStr]	; lpMultiByteStr
.text:5B8E2E69 33 C0							       xor     eax, eax
.text:5B8E2E6B 50							       push    eax	       ; dwFlags
.text:5B8E2E6C 50							       push    eax	       ; CodePage
.text:5B8E2E6D 66 89 06							       mov     [esi], ax
.text:5B8E2E70 FF 15 70	10 8E 5B					       call    ds:__imp__MultiByteToWideChar@24	; MultiByteToWideChar(x,x,x,x,x,x)
.text:5B8E2E76 8B C6							       mov     eax, esi
.text:5B8E2E78 5E							       pop     esi
.text:5B8E2E79 C2 0C 00							       retn    0Ch
.text:5B8E2E79						       ?AtlA2WHelper@@YGPAGPAGPBDH@Z endp
.text:5B8E2E79
.text:5B8E2E7C
.text:5B8E2E7C						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2E7C
.text:5B8E2E7C
.text:5B8E2E7C						       ; int __stdcall ATL::CComBSTR::operator=(OLECHAR	*psz)
.text:5B8E2E7C						       ??4CComBSTR@ATL@@QAEAAV01@PBG@Z proc near
.text:5B8E2E7C											       ; CODE XREF: ATL::CComVariant::WriteToStream(IStream *)+ECp
.text:5B8E2E7C
.text:5B8E2E7C						       psz	       = dword ptr  4
.text:5B8E2E7C
.text:5B8E2E7C 56							       push    esi
.text:5B8E2E7D 8B F1							       mov     esi, ecx
.text:5B8E2E7F FF 36							       push    dword ptr [esi] ; bstrString
.text:5B8E2E81 FF 15 E0	10 8E 5B					       call    ds:__imp__SysFreeString@4 ; SysFreeString(x)
.text:5B8E2E87 FF 74 24	08						       push    [esp+4+psz]     ; psz
.text:5B8E2E8B FF 15 DC	10 8E 5B					       call    ds:__imp__SysAllocString@4 ; SysAllocString(x)
.text:5B8E2E91 89 06							       mov     [esi], eax
.text:5B8E2E93 8B C6							       mov     eax, esi
.text:5B8E2E95 5E							       pop     esi
.text:5B8E2E96 C2 04 00							       retn    4
.text:5B8E2E96						       ??4CComBSTR@ATL@@QAEAAV01@PBG@Z endp
.text:5B8E2E96
.text:5B8E2E99
.text:5B8E2E99						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2E99
.text:5B8E2E99						       ; Attributes: bp-based frame
.text:5B8E2E99
.text:5B8E2E99						       ; __int32 __thiscall ATL::CComBSTR::ReadFromStream(ATL::CComBSTR	*this, struct IStream *)
.text:5B8E2E99						       ?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z	proc near
.text:5B8E2E99											       ; CODE XREF: ATL::CComVariant::ReadFromStream(IStream *)+98p
.text:5B8E2E99
.text:5B8E2E99						       var_4	       = byte ptr -4
.text:5B8E2E99						       arg_0	       = dword ptr  8
.text:5B8E2E99
.text:5B8E2E99 55							       push    ebp
.text:5B8E2E9A 8B EC							       mov     ebp, esp
.text:5B8E2E9C 51							       push    ecx
.text:5B8E2E9D 56							       push    esi
.text:5B8E2E9E 8B 75 08							       mov     esi, [ebp+arg_0]
.text:5B8E2EA1 8B 06							       mov     eax, [esi]
.text:5B8E2EA3 57							       push    edi
.text:5B8E2EA4 8B F9							       mov     edi, ecx
.text:5B8E2EA6 8D 4D FC							       lea     ecx, [ebp+var_4]
.text:5B8E2EA9 51							       push    ecx
.text:5B8E2EAA 6A 04							       push    4
.text:5B8E2EAC 8D 4D 08							       lea     ecx, [ebp+arg_0]
.text:5B8E2EAF 51							       push    ecx
.text:5B8E2EB0 56							       push    esi
.text:5B8E2EB1 FF 50 0C							       call    dword ptr [eax+0Ch]
.text:5B8E2EB4 85 C0							       test    eax, eax
.text:5B8E2EB6 7C 2E							       jl      short loc_5B8E2EE6
.text:5B8E2EB8 8B 4D 08							       mov     ecx, [ebp+arg_0]
.text:5B8E2EBB 85 C9							       test    ecx, ecx
.text:5B8E2EBD 74 27							       jz      short loc_5B8E2EE6
.text:5B8E2EBF 83 C1 FE							       add     ecx, 0FFFFFFFEh
.text:5B8E2EC2 51							       push    ecx	       ; len
.text:5B8E2EC3 6A 00							       push    0	       ; psz
.text:5B8E2EC5 FF 15 D8	10 8E 5B					       call    ds:__imp__SysAllocStringByteLen@8 ; SysAllocStringByteLen(x,x)
.text:5B8E2ECB 85 C0							       test    eax, eax
.text:5B8E2ECD 89 07							       mov     [edi], eax
.text:5B8E2ECF 75 07							       jnz     short loc_5B8E2ED8
.text:5B8E2ED1 B8 0E 00	07 80						       mov     eax, 8007000Eh
.text:5B8E2ED6 EB 0E							       jmp     short loc_5B8E2EE6
.text:5B8E2ED8						       ; ---------------------------------------------------------------------------
.text:5B8E2ED8
.text:5B8E2ED8						       loc_5B8E2ED8:			       ; CODE XREF: ATL::CComBSTR::ReadFromStream(IStream *)+36j
.text:5B8E2ED8 8B 0E							       mov     ecx, [esi]
.text:5B8E2EDA 8D 55 FC							       lea     edx, [ebp+var_4]
.text:5B8E2EDD 52							       push    edx
.text:5B8E2EDE FF 75 08							       push    [ebp+arg_0]
.text:5B8E2EE1 50							       push    eax
.text:5B8E2EE2 56							       push    esi
.text:5B8E2EE3 FF 51 0C							       call    dword ptr [ecx+0Ch]
.text:5B8E2EE6
.text:5B8E2EE6						       loc_5B8E2EE6:			       ; CODE XREF: ATL::CComBSTR::ReadFromStream(IStream *)+1Dj
.text:5B8E2EE6											       ; ATL::CComBSTR::ReadFromStream(IStream *)+24j ...
.text:5B8E2EE6 5F							       pop     edi
.text:5B8E2EE7 5E							       pop     esi
.text:5B8E2EE8 C9							       leave
.text:5B8E2EE9 C2 04 00							       retn    4
.text:5B8E2EE9						       ?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z	endp
.text:5B8E2EE9
.text:5B8E2EEC
.text:5B8E2EEC						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2EEC
.text:5B8E2EEC						       ; Attributes: bp-based frame
.text:5B8E2EEC
.text:5B8E2EEC						       ; __int32 __thiscall ATL::CComBSTR::WriteToStream(ATL::CComBSTR *this, struct IStream *)
.text:5B8E2EEC						       ?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z proc near
.text:5B8E2EEC											       ; CODE XREF: ATL::CComVariant::WriteToStream(IStream *)+F5p
.text:5B8E2EEC
.text:5B8E2EEC						       var_8	       = byte ptr -8
.text:5B8E2EEC						       var_4	       = dword ptr -4
.text:5B8E2EEC						       arg_0	       = dword ptr  8
.text:5B8E2EEC
.text:5B8E2EEC 55							       push    ebp
.text:5B8E2EED 8B EC							       mov     ebp, esp
.text:5B8E2EEF 51							       push    ecx
.text:5B8E2EF0 51							       push    ecx
.text:5B8E2EF1 56							       push    esi
.text:5B8E2EF2 57							       push    edi
.text:5B8E2EF3 8B F9							       mov     edi, ecx
.text:5B8E2EF5 8B 07							       mov     eax, [edi]
.text:5B8E2EF7 85 C0							       test    eax, eax
.text:5B8E2EF9 74 0E							       jz      short loc_5B8E2F09
.text:5B8E2EFB 50							       push    eax	       ; bstr
.text:5B8E2EFC FF 15 D4	10 8E 5B					       call    ds:__imp__SysStringByteLen@4 ; SysStringByteLen(x)
.text:5B8E2F02 40							       inc     eax
.text:5B8E2F03 40							       inc     eax
.text:5B8E2F04 89 45 FC							       mov     [ebp+var_4], eax
.text:5B8E2F07 EB 04							       jmp     short loc_5B8E2F0D
.text:5B8E2F09						       ; ---------------------------------------------------------------------------
.text:5B8E2F09
.text:5B8E2F09						       loc_5B8E2F09:			       ; CODE XREF: ATL::CComBSTR::WriteToStream(IStream *)+Dj
.text:5B8E2F09 83 65 FC	00						       and     [ebp+var_4], 0
.text:5B8E2F0D
.text:5B8E2F0D						       loc_5B8E2F0D:			       ; CODE XREF: ATL::CComBSTR::WriteToStream(IStream *)+1Bj
.text:5B8E2F0D 8B 75 08							       mov     esi, [ebp+arg_0]
.text:5B8E2F10 8B 06							       mov     eax, [esi]
.text:5B8E2F12 8D 4D F8							       lea     ecx, [ebp+var_8]
.text:5B8E2F15 51							       push    ecx
.text:5B8E2F16 6A 04							       push    4
.text:5B8E2F18 8D 4D FC							       lea     ecx, [ebp+var_4]
.text:5B8E2F1B 51							       push    ecx
.text:5B8E2F1C 56							       push    esi
.text:5B8E2F1D FF 50 10							       call    dword ptr [eax+10h]
.text:5B8E2F20 85 C0							       test    eax, eax
.text:5B8E2F22 7C 19							       jl      short loc_5B8E2F3D
.text:5B8E2F24 83 7D FC	00						       cmp     [ebp+var_4], 0
.text:5B8E2F28 74 11							       jz      short loc_5B8E2F3B
.text:5B8E2F2A 8B 06							       mov     eax, [esi]
.text:5B8E2F2C 8D 4D F8							       lea     ecx, [ebp+var_8]
.text:5B8E2F2F 51							       push    ecx
.text:5B8E2F30 FF 75 FC							       push    [ebp+var_4]
.text:5B8E2F33 FF 37							       push    dword ptr [edi]
.text:5B8E2F35 56							       push    esi
.text:5B8E2F36 FF 50 10							       call    dword ptr [eax+10h]
.text:5B8E2F39 EB 02							       jmp     short loc_5B8E2F3D
.text:5B8E2F3B						       ; ---------------------------------------------------------------------------
.text:5B8E2F3B
.text:5B8E2F3B						       loc_5B8E2F3B:			       ; CODE XREF: ATL::CComBSTR::WriteToStream(IStream *)+3Cj
.text:5B8E2F3B 33 C0							       xor     eax, eax
.text:5B8E2F3D
.text:5B8E2F3D						       loc_5B8E2F3D:			       ; CODE XREF: ATL::CComBSTR::WriteToStream(IStream *)+36j
.text:5B8E2F3D											       ; ATL::CComBSTR::WriteToStream(IStream *)+4Dj
.text:5B8E2F3D 5F							       pop     edi
.text:5B8E2F3E 5E							       pop     esi
.text:5B8E2F3F C9							       leave
.text:5B8E2F40 C2 04 00							       retn    4
.text:5B8E2F40						       ?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z endp
.text:5B8E2F40
.text:5B8E2F43
.text:5B8E2F43						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2F43
.text:5B8E2F43
.text:5B8E2F43						       ; __int32 __thiscall ATL::CComVariant::ChangeType(VARIANTARG *pvargDest,	VARTYPE	vt, VARIANTARG *pvarSrc)
.text:5B8E2F43						       ?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z proc	near
.text:5B8E2F43											       ; CODE XREF: ATL::CComVariant::ReadFromStream(IStream *)+C0p
.text:5B8E2F43
.text:5B8E2F43						       vt	       = word ptr  4
.text:5B8E2F43						       pvarSrc	       = dword ptr  8
.text:5B8E2F43
.text:5B8E2F43 8B 44 24	08						       mov     eax, [esp+pvarSrc]
.text:5B8E2F47 85 C0							       test    eax, eax
.text:5B8E2F49 75 02							       jnz     short loc_5B8E2F4D
.text:5B8E2F4B 8B C1							       mov     eax, ecx
.text:5B8E2F4D
.text:5B8E2F4D						       loc_5B8E2F4D:			       ; CODE XREF: ATL::CComVariant::ChangeType(ushort,tagVARIANT const *)+6j
.text:5B8E2F4D FF 74 24	04						       push    dword ptr [esp+vt] ; vt
.text:5B8E2F51 6A 00							       push    0	       ; wFlags
.text:5B8E2F53 50							       push    eax	       ; pvarSrc
.text:5B8E2F54 51							       push    ecx	       ; pvargDest
.text:5B8E2F55 FF 15 D0	10 8E 5B					       call    ds:__imp__VariantChangeType@16 ;	VariantChangeType(x,x,x,x)
.text:5B8E2F5B C2 08 00							       retn    8
.text:5B8E2F5B						       ?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z endp
.text:5B8E2F5B
.text:5B8E2F5E
.text:5B8E2F5E						       ; =============== S U B R O U T I N E =======================================
.text:5B8E2F5E
.text:5B8E2F5E						       ; Attributes: bp-based frame
.text:5B8E2F5E
.text:5B8E2F5E						       ; __int32 __thiscall ATL::CComVariant::ReadFromStream(VARIANTARG	*pvargDest, LPSTREAM pStm)
.text:5B8E2F5E						       ?ReadFromStream@CComVariant@ATL@@QAEJPAUIStream@@@Z proc	near
.text:5B8E2F5E											       ; CODE XREF: ATL::CComControlBase::IPersistStreamInit_Load(IStream *,ATL::ATL_PROPMAP_ENTRY *)+7Dp
.text:5B8E2F5E
.text:5B8E2F5E						       vt	       = word ptr -4
.text:5B8E2F5E						       pStm	       = dword ptr  8
.text:5B8E2F5E
.text:5B8E2F5E 55							       push    ebp
.text:5B8E2F5F 8B EC							       mov     ebp, esp
.text:5B8E2F61 51							       push    ecx
.text:5B8E2F62 53							       push    ebx
.text:5B8E2F63 56							       push    esi
.text:5B8E2F64 8B F1							       mov     esi, ecx
.text:5B8E2F66 56							       push    esi	       ; pvarg
.text:5B8E2F67 FF 15 C8	10 8E 5B					       call    ds:__imp__VariantClear@4	; VariantClear(x)
.text:5B8E2F6D 33 DB							       xor     ebx, ebx
.text:5B8E2F6F 3B C3							       cmp     eax, ebx
.text:5B8E2F71 0F 8C B8	00 00 00					       jl      loc_5B8E302F
.text:5B8E2F77 57							       push    edi
.text:5B8E2F78 8B 7D 08							       mov     edi, [ebp+pStm]
.text:5B8E2F7B 8B 07							       mov     eax, [edi]
.text:5B8E2F7D 53							       push    ebx
.text:5B8E2F7E 6A 02							       push    2
.text:5B8E2F80 8D 4D FC							       lea     ecx, [ebp+vt]
.text:5B8E2F83 51							       push    ecx
.text:5B8E2F84 57							       push    edi
.text:5B8E2F85 FF 50 0C							       call    dword ptr [eax+0Ch]
.text:5B8E2F88 3B C3							       cmp     eax, ebx
.text:5B8E2F8A 0F 8C 9E	00 00 00					       jl      loc_5B8E302E
.text:5B8E2F90 8B 4D FC							       mov     ecx, dword ptr [ebp+vt]
.text:5B8E2F93 0F B7 C1							       movzx   eax, cx
.text:5B8E2F96 83 C0 FE							       add     eax, 0FFFFFFFEh
.text:5B8E2F99 83 F8 15							       cmp     eax, 15h	       ; switch	22 cases
.text:5B8E2F9C 66 89 0E							       mov     [esi], cx
.text:5B8E2F9F 77 4E							       ja      short loc_5B8E2FEF ; jumptable 5B8E2FA8 default case
.text:5B8E2FA1 0F B6 80	4D 30 8E 5B					       movzx   eax, ds:byte_5B8E304D[eax]
.text:5B8E2FA8 FF 24 85	35 30 8E 5B					       jmp     ds:off_5B8E3035[eax*4] ;	switch jump
.text:5B8E2FAF						       ; ---------------------------------------------------------------------------
.text:5B8E2FAF
.text:5B8E2FAF						       loc_5B8E2FAF:			       ; CODE XREF: ATL::CComVariant::ReadFromStream(IStream *)+4Aj
.text:5B8E2FAF											       ; DATA XREF: .text:off_5B8E3035o
.text:5B8E2FAF 8D 46 08							       lea     eax, [esi+8]    ; jumptable 5B8E2FA8 cases 7,11
.text:5B8E2FB2 66 83 F9	0D						       cmp     cx, 0Dh
.text:5B8E2FB6 89 18							       mov     [eax], ebx
.text:5B8E2FB8 B9 0C 19	8E 5B						       mov     ecx, offset _IID_IUnknown
.text:5B8E2FBD 74 05							       jz      short loc_5B8E2FC4
.text:5B8E2FBF B9 1C 19	8E 5B						       mov     ecx, offset _IID_IDispatch
.text:5B8E2FC4
.text:5B8E2FC4						       loc_5B8E2FC4:			       ; CODE XREF: ATL::CComVariant::ReadFromStream(IStream *)+5Fj
.text:5B8E2FC4 50							       push    eax	       ; ppvObj
.text:5B8E2FC5 51							       push    ecx	       ; iidInterface
.text:5B8E2FC6 57							       push    edi	       ; pStm
.text:5B8E2FC7 FF 15 8C	11 8E 5B					       call    ds:__imp__OleLoadFromStream@12 ;	OleLoadFromStream(x,x,x)
.text:5B8E2FCD 33 C0							       xor     eax, eax
.text:5B8E2FCF EB 5D							       jmp     short loc_5B8E302E
.text:5B8E2FD1						       ; ---------------------------------------------------------------------------
.text:5B8E2FD1
.text:5B8E2FD1						       loc_5B8E2FD1:			       ; CODE XREF: ATL::CComVariant::ReadFromStream(IStream *)+4Aj
.text:5B8E2FD1											       ; DATA XREF: .text:off_5B8E3035o
.text:5B8E2FD1 33 C0							       xor     eax, eax	       ; jumptable 5B8E2FA8 cases 14,15
.text:5B8E2FD3 40							       inc     eax
.text:5B8E2FD4 EB 0B							       jmp     short loc_5B8E2FE1
.text:5B8E2FD6						       ; ---------------------------------------------------------------------------
.text:5B8E2FD6
.text:5B8E2FD6						       loc_5B8E2FD6:			       ; CODE XREF: ATL::CComVariant::ReadFromStream(IStream *)+4Aj
.text:5B8E2FD6											       ; DATA XREF: .text:off_5B8E3035o
.text:5B8E2FD6 6A 02							       push    2	       ; jumptable 5B8E2FA8 cases 0,9,16
.text:5B8E2FD8 EB 06							       jmp     short loc_5B8E2FE0
.text:5B8E2FDA						       ; ---------------------------------------------------------------------------
.text:5B8E2FDA
.text:5B8E2FDA						       loc_5B8E2FDA:			       ; CODE XREF: ATL::CComVariant::ReadFromStream(IStream *)+4Aj
.text:5B8E2FDA											       ; DATA XREF: .text:off_5B8E3035o
.text:5B8E2FDA 6A 04							       push    4	       ; jumptable 5B8E2FA8 cases 1,2,8,17,20,21
.text:5B8E2FDC EB 02							       jmp     short loc_5B8E2FE0
.text:5B8E2FDE						       ; ---------------------------------------------------------------------------
.text:5B8E2FDE
.text:5B8E2FDE						       loc_5B8E2FDE:			       ; CODE XREF: ATL::CComVariant::ReadFromStream(IStream *)+4Aj
.text:5B8E2FDE											       ; DATA XREF: .text:off_5B8E3035o
.text:5B8E2FDE 6A 08							       push    8	       ; jumptable 5B8E2FA8 cases 3-5
.text:5B8E2FE0
.text:5B8E2FE0						       loc_5B8E2FE0:			       ; CODE XREF: ATL::CComVariant::ReadFromStream(IStream *)+7Aj
.text:5B8E2FE0											       ; ATL::CComVariant::ReadFromStream(IStream *)+7Ej
.text:5B8E2FE0 58							       pop     eax
.text:5B8E2FE1
.text:5B8E2FE1						       loc_5B8E2FE1:			       ; CODE XREF: ATL::CComVariant::ReadFromStream(IStream *)+76j
.text:5B8E2FE1 8B 0F							       mov     ecx, [edi]
.text:5B8E2FE3 53							       push    ebx
.text:5B8E2FE4 50							       push    eax
.text:5B8E2FE5 83 C6 08							       add     esi, 8
.text:5B8E2FE8 56							       push    esi
.text:5B8E2FE9 57							       push    edi
.text:5B8E2FEA FF 51 0C							       call    dword ptr [ecx+0Ch]
.text:5B8E2FED EB 3F							       jmp     short loc_5B8E302E
.text:5B8E2FEF						       ; ---------------------------------------------------------------------------
.text:5B8E2FEF
.text:5B8E2FEF						       loc_5B8E2FEF:			       ; CODE XREF: ATL::CComVariant::ReadFromStream(IStream *)+41j
.text:5B8E2FEF											       ; ATL::CComVariant::ReadFromStream(IStream *)+4Aj
.text:5B8E2FEF											       ; DATA XREF: ...
.text:5B8E2FEF 57							       push    edi	       ; jumptable 5B8E2FA8 default case
.text:5B8E2FF0 8D 4D 08							       lea     ecx, [ebp+pStm] ; this
.text:5B8E2FF3 89 5D 08							       mov     [ebp+pStm], ebx
.text:5B8E2FF6 E8 9E FE	FF FF						       call    ?ReadFromStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z	; ATL::CComBSTR::ReadFromStream(IStream	*)
.text:5B8E2FFB 8B F8							       mov     edi, eax
.text:5B8E2FFD 3B FB							       cmp     edi, ebx
.text:5B8E2FFF 7D 05							       jge     short loc_5B8E3006
.text:5B8E3001 FF 75 08							       push    [ebp+pStm]
.text:5B8E3004 EB 20							       jmp     short loc_5B8E3026
.text:5B8E3006						       ; ---------------------------------------------------------------------------
.text:5B8E3006
.text:5B8E3006						       loc_5B8E3006:			       ; CODE XREF: ATL::CComVariant::ReadFromStream(IStream *)+A1j
.text:5B8E3006 66 83 7D	FC 08						       cmp     [ebp+vt], 8
.text:5B8E300B 8B 45 08							       mov     eax, [ebp+pStm]
.text:5B8E300E 66 C7 06	08 00						       mov     word ptr	[esi], 8
.text:5B8E3013 89 46 08							       mov     [esi+8],	eax
.text:5B8E3016 74 0D							       jz      short loc_5B8E3025
.text:5B8E3018 53							       push    ebx	       ; pvarSrc
.text:5B8E3019 FF 75 FC							       push    dword ptr [ebp+vt] ; vt
.text:5B8E301C 8B CE							       mov     ecx, esi	       ; pvargDest
.text:5B8E301E E8 20 FF	FF FF						       call    ?ChangeType@CComVariant@ATL@@QAEJGPBUtagVARIANT@@@Z ; ATL::CComVariant::ChangeType(ushort,tagVARIANT const *)
.text:5B8E3023 8B F8							       mov     edi, eax
.text:5B8E3025
.text:5B8E3025						       loc_5B8E3025:			       ; CODE XREF: ATL::CComVariant::ReadFromStream(IStream *)+B8j
.text:5B8E3025 53							       push    ebx	       ; bstrString
.text:5B8E3026
.text:5B8E3026						       loc_5B8E3026:			       ; CODE XREF: ATL::CComVariant::ReadFromStream(IStream *)+A6j
.text:5B8E3026 FF 15 E0	10 8E 5B					       call    ds:__imp__SysFreeString@4 ; SysFreeString(x)
.text:5B8E302C 8B C7							       mov     eax, edi
.text:5B8E302E
.text:5B8E302E						       loc_5B8E302E:			       ; CODE XREF: ATL::CComVariant::ReadFromStream(IStream *)+2Cj
.text:5B8E302E											       ; ATL::CComVariant::ReadFromStream(IStream *)+71j ...
.text:5B8E302E 5F							       pop     edi
.text:5B8E302F
.text:5B8E302F						       loc_5B8E302F:			       ; CODE XREF: ATL::CComVariant::ReadFromStream(IStream *)+13j
.text:5B8E302F 5E							       pop     esi
.text:5B8E3030 5B							       pop     ebx
.text:5B8E3031 C9							       leave
.text:5B8E3032 C2 04 00							       retn    4
.text:5B8E3032						       ?ReadFromStream@CComVariant@ATL@@QAEJPAUIStream@@@Z endp
.text:5B8E3032
.text:5B8E3032						       ; ---------------------------------------------------------------------------
.text:5B8E3035 D6 2F 8E	5B DA 2F 8E 5B DE 2F 8E	5B AF 2F 8E 5B+off_5B8E3035    dd offset loc_5B8E2FD6  ; DATA XREF: ATL::CComVariant::ReadFromStream(IStream *)+4Ar
.text:5B8E3035 D1 2F 8E	5B EF 2F 8E 5B					       dd offset loc_5B8E2FDA  ; jump table for	switch statement
.text:5B8E3035								       dd offset loc_5B8E2FDE
.text:5B8E3035								       dd offset loc_5B8E2FAF
.text:5B8E3035								       dd offset loc_5B8E2FD1
.text:5B8E3035								       dd offset loc_5B8E2FEF
.text:5B8E304D 00 01 01	02 02 02 05 03 01 00 05	03 05 05 04 04+byte_5B8E304D   db      0,     1,     1,	    2
.text:5B8E304D 00 01 05	05 01 01								       ; DATA XREF: ATL::CComVariant::ReadFromStream(IStream *)+43r
.text:5B8E304D								       db      2,     2,     5,	    3 ;	indirect table for switch statement
.text:5B8E304D								       db      1,     0,     5,	    3
.text:5B8E304D								       db      5,     5,     4,	    4
.text:5B8E304D								       db      0,     1,     5,	    5
.text:5B8E304D								       db      1,     1
.text:5B8E3063
.text:5B8E3063						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3063
.text:5B8E3063
.text:5B8E3063						       ; void __thiscall ATL::CComTypeInfoHolder::AddRef(ATL::CComTypeInfoHolder *__hidden this)
.text:5B8E3063						       ?AddRef@CComTypeInfoHolder@ATL@@QAEXXZ proc near
.text:5B8E3063											       ; CODE XREF: CTrialEnd::CTrialEnd(void)+14p
.text:5B8E3063 56							       push    esi
.text:5B8E3064 57							       push    edi
.text:5B8E3065 BF F4 70	8E 5B						       mov     edi, offset CriticalSection
.text:5B8E306A 57							       push    edi	       ; lpCriticalSection
.text:5B8E306B 8B F1							       mov     esi, ecx
.text:5B8E306D FF 15 68	10 8E 5B					       call    ds:__imp__EnterCriticalSection@4	; EnterCriticalSection(x)
.text:5B8E3073 FF 46 10							       inc     dword ptr [esi+10h]
.text:5B8E3076 57							       push    edi	       ; lpCriticalSection
.text:5B8E3077 FF 15 B8	10 8E 5B					       call    ds:__imp__LeaveCriticalSection@4	; LeaveCriticalSection(x)
.text:5B8E307D 5F							       pop     edi
.text:5B8E307E 5E							       pop     esi
.text:5B8E307F C3							       retn
.text:5B8E307F						       ?AddRef@CComTypeInfoHolder@ATL@@QAEXXZ endp
.text:5B8E307F
.text:5B8E3080
.text:5B8E3080						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3080
.text:5B8E3080
.text:5B8E3080						       ; void __thiscall ATL::CComTypeInfoHolder::Release(ATL::CComTypeInfoHolder *__hidden this)
.text:5B8E3080						       ?Release@CComTypeInfoHolder@ATL@@QAEXXZ proc near
.text:5B8E3080											       ; CODE XREF: CTrialEnd::~CTrialEnd(void)+8p
.text:5B8E3080 56							       push    esi
.text:5B8E3081 57							       push    edi
.text:5B8E3082 BF F4 70	8E 5B						       mov     edi, offset CriticalSection
.text:5B8E3087 57							       push    edi	       ; lpCriticalSection
.text:5B8E3088 8B F1							       mov     esi, ecx
.text:5B8E308A FF 15 68	10 8E 5B					       call    ds:__imp__EnterCriticalSection@4	; EnterCriticalSection(x)
.text:5B8E3090 FF 4E 10							       dec     dword ptr [esi+10h]
.text:5B8E3093 75 11							       jnz     short loc_5B8E30A6
.text:5B8E3095 8B 46 0C							       mov     eax, [esi+0Ch]
.text:5B8E3098 85 C0							       test    eax, eax
.text:5B8E309A 74 06							       jz      short loc_5B8E30A2
.text:5B8E309C 8B 08							       mov     ecx, [eax]
.text:5B8E309E 50							       push    eax
.text:5B8E309F FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E30A2
.text:5B8E30A2						       loc_5B8E30A2:			       ; CODE XREF: ATL::CComTypeInfoHolder::Release(void)+1Aj
.text:5B8E30A2 83 66 0C	00						       and     dword ptr [esi+0Ch], 0
.text:5B8E30A6
.text:5B8E30A6						       loc_5B8E30A6:			       ; CODE XREF: ATL::CComTypeInfoHolder::Release(void)+13j
.text:5B8E30A6 57							       push    edi	       ; lpCriticalSection
.text:5B8E30A7 FF 15 B8	10 8E 5B					       call    ds:__imp__LeaveCriticalSection@4	; LeaveCriticalSection(x)
.text:5B8E30AD 5F							       pop     edi
.text:5B8E30AE 5E							       pop     esi
.text:5B8E30AF C3							       retn
.text:5B8E30AF						       ?Release@CComTypeInfoHolder@ATL@@QAEXXZ endp
.text:5B8E30AF
.text:5B8E30B0
.text:5B8E30B0						       ; =============== S U B R O U T I N E =======================================
.text:5B8E30B0
.text:5B8E30B0						       ; Attributes: bp-based frame
.text:5B8E30B0
.text:5B8E30B0						       ; __int32 __thiscall ATL::CComTypeInfoHolder::GetTI(ATL::CComTypeInfoHolder *this, LCID lcid, struct ITypeInfo **)
.text:5B8E30B0						       ?GetTI@CComTypeInfoHolder@ATL@@QAEJKPAPAUITypeInfo@@@Z proc near
.text:5B8E30B0											       ; CODE XREF: ATL::CComTypeInfoHolder::GetTypeInfo(uint,ulong,ITypeInfo *	*)+14p
.text:5B8E30B0											       ; ATL::CComTypeInfoHolder::GetIDsOfNames(_GUID const &,ushort * *,uint,ulong,long *)+Cp	...
.text:5B8E30B0
.text:5B8E30B0						       lcid	       = dword ptr  8
.text:5B8E30B0						       pptlib	       = dword ptr  0Ch
.text:5B8E30B0
.text:5B8E30B0 55							       push    ebp
.text:5B8E30B1 8B EC							       mov     ebp, esp
.text:5B8E30B3 53							       push    ebx
.text:5B8E30B4 8B 5D 0C							       mov     ebx, [ebp+pptlib]
.text:5B8E30B7 83 23 00							       and     dword ptr [ebx],	0
.text:5B8E30BA 56							       push    esi
.text:5B8E30BB 57							       push    edi
.text:5B8E30BC 68 F4 70	8E 5B						       push    offset CriticalSection ;	lpCriticalSection
.text:5B8E30C1 8B F1							       mov     esi, ecx
.text:5B8E30C3 BF 05 40	00 80						       mov     edi, 80004005h
.text:5B8E30C8 FF 15 68	10 8E 5B					       call    ds:__imp__EnterCriticalSection@4	; EnterCriticalSection(x)
.text:5B8E30CE 83 7E 0C	00						       cmp     dword ptr [esi+0Ch], 0
.text:5B8E30D2 75 48							       jnz     short loc_5B8E311C
.text:5B8E30D4 8D 45 0C							       lea     eax, [ebp+pptlib]
.text:5B8E30D7 50							       push    eax	       ; pptlib
.text:5B8E30D8 FF 75 08							       push    [ebp+lcid]      ; lcid
.text:5B8E30DB 33 C0							       xor     eax, eax
.text:5B8E30DD 66 8B 46	0A						       mov     ax, [esi+0Ah]
.text:5B8E30E1 50							       push    eax	       ; wVerMinor
.text:5B8E30E2 33 C0							       xor     eax, eax
.text:5B8E30E4 66 8B 46	08						       mov     ax, [esi+8]
.text:5B8E30E8 50							       push    eax	       ; wVerMajor
.text:5B8E30E9 FF 76 04							       push    dword ptr [esi+4] ; rguid
.text:5B8E30EC FF 15 CC	10 8E 5B					       call    ds:__imp__LoadRegTypeLib@20 ; LoadRegTypeLib(x,x,x,x,x)
.text:5B8E30F2 8B F8							       mov     edi, eax
.text:5B8E30F4 85 FF							       test    edi, edi
.text:5B8E30F6 7C 24							       jl      short loc_5B8E311C
.text:5B8E30F8 8B 45 0C							       mov     eax, [ebp+pptlib]
.text:5B8E30FB 8B 08							       mov     ecx, [eax]
.text:5B8E30FD 8D 55 08							       lea     edx, [ebp+lcid]
.text:5B8E3100 52							       push    edx
.text:5B8E3101 FF 36							       push    dword ptr [esi]
.text:5B8E3103 50							       push    eax
.text:5B8E3104 FF 51 18							       call    dword ptr [ecx+18h]
.text:5B8E3107 8B F8							       mov     edi, eax
.text:5B8E3109 85 FF							       test    edi, edi
.text:5B8E310B 7C 06							       jl      short loc_5B8E3113
.text:5B8E310D 8B 45 08							       mov     eax, [ebp+lcid]
.text:5B8E3110 89 46 0C							       mov     [esi+0Ch], eax
.text:5B8E3113
.text:5B8E3113						       loc_5B8E3113:			       ; CODE XREF: ATL::CComTypeInfoHolder::GetTI(ulong,ITypeInfo * *)+5Bj
.text:5B8E3113 8B 45 0C							       mov     eax, [ebp+pptlib]
.text:5B8E3116 8B 08							       mov     ecx, [eax]
.text:5B8E3118 50							       push    eax
.text:5B8E3119 FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E311C
.text:5B8E311C						       loc_5B8E311C:			       ; CODE XREF: ATL::CComTypeInfoHolder::GetTI(ulong,ITypeInfo * *)+22j
.text:5B8E311C											       ; ATL::CComTypeInfoHolder::GetTI(ulong,ITypeInfo	* *)+46j
.text:5B8E311C 8B 46 0C							       mov     eax, [esi+0Ch]
.text:5B8E311F 89 03							       mov     [ebx], eax
.text:5B8E3121 8B 76 0C							       mov     esi, [esi+0Ch]
.text:5B8E3124 85 F6							       test    esi, esi
.text:5B8E3126 74 08							       jz      short loc_5B8E3130
.text:5B8E3128 8B 06							       mov     eax, [esi]
.text:5B8E312A 56							       push    esi
.text:5B8E312B FF 50 04							       call    dword ptr [eax+4]
.text:5B8E312E 33 FF							       xor     edi, edi
.text:5B8E3130
.text:5B8E3130						       loc_5B8E3130:			       ; CODE XREF: ATL::CComTypeInfoHolder::GetTI(ulong,ITypeInfo * *)+76j
.text:5B8E3130 68 F4 70	8E 5B						       push    offset CriticalSection ;	lpCriticalSection
.text:5B8E3135 FF 15 B8	10 8E 5B					       call    ds:__imp__LeaveCriticalSection@4	; LeaveCriticalSection(x)
.text:5B8E313B 8B C7							       mov     eax, edi
.text:5B8E313D 5F							       pop     edi
.text:5B8E313E 5E							       pop     esi
.text:5B8E313F 5B							       pop     ebx
.text:5B8E3140 5D							       pop     ebp
.text:5B8E3141 C2 08 00							       retn    8
.text:5B8E3141						       ?GetTI@CComTypeInfoHolder@ATL@@QAEJKPAPAUITypeInfo@@@Z endp
.text:5B8E3141
.text:5B8E3144
.text:5B8E3144						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3144
.text:5B8E3144
.text:5B8E3144						       ; __int32 __thiscall ATL::CComTypeInfoHolder::GetTypeInfo(ATL::CComTypeInfoHolder *this,	unsigned int, LCID lcid, struct	ITypeInfo **)
.text:5B8E3144						       ?GetTypeInfo@CComTypeInfoHolder@ATL@@QAEJIKPAPAUITypeInfo@@@Z proc near
.text:5B8E3144											       ; CODE XREF: ATL::IDispatchImpl<ITrialEnd,&_GUID	const IID_ITrialEnd,&_GUID const LIBID_TRIALOCLib,1,0,ATL::CComTypeInfoHolder>::GetTypeInfo(uint,ulong,ITypeInfo * *)+11p
.text:5B8E3144
.text:5B8E3144						       lcid	       = dword ptr  8
.text:5B8E3144						       arg_8	       = dword ptr  0Ch
.text:5B8E3144
.text:5B8E3144 83 7C 24	0C 00						       cmp     [esp+arg_8], 0
.text:5B8E3149 B8 03 40	00 80						       mov     eax, 80004003h
.text:5B8E314E 74 0D							       jz      short locret_5B8E315D
.text:5B8E3150 FF 74 24	0C						       push    [esp+arg_8]     ; struct	ITypeInfo **
.text:5B8E3154 FF 74 24	0C						       push    [esp+4+lcid]    ; lcid
.text:5B8E3158 E8 53 FF	FF FF						       call    ?GetTI@CComTypeInfoHolder@ATL@@QAEJKPAPAUITypeInfo@@@Z ;	ATL::CComTypeInfoHolder::GetTI(ulong,ITypeInfo * *)
.text:5B8E315D
.text:5B8E315D						       locret_5B8E315D:			       ; CODE XREF: ATL::CComTypeInfoHolder::GetTypeInfo(uint,ulong,ITypeInfo *	*)+Aj
.text:5B8E315D C2 0C 00							       retn    0Ch
.text:5B8E315D						       ?GetTypeInfo@CComTypeInfoHolder@ATL@@QAEJIKPAPAUITypeInfo@@@Z endp
.text:5B8E315D
.text:5B8E3160
.text:5B8E3160						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3160
.text:5B8E3160						       ; Attributes: bp-based frame
.text:5B8E3160
.text:5B8E3160						       ; __int32 __thiscall ATL::CComTypeInfoHolder::GetIDsOfNames(ATL::CComTypeInfoHolder *this, const	struct _GUID *,	unsigned __int16 **, unsigned int, LCID	lcid, __int32 *)
.text:5B8E3160						       ?GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPAGIKPAJ@Z proc near
.text:5B8E3160											       ; CODE XREF: ATL::IDispatchImpl<ITrialEnd,&_GUID	const IID_ITrialEnd,&_GUID const LIBID_TRIALOCLib,1,0,ATL::CComTypeInfoHolder>::GetIDsOfNames(_GUID const &,ushort * *,uint,ulong,long *)+17p
.text:5B8E3160
.text:5B8E3160						       arg_4	       = dword ptr  0Ch
.text:5B8E3160						       arg_8	       = dword ptr  10h
.text:5B8E3160						       lcid	       = dword ptr  14h
.text:5B8E3160						       arg_10	       = dword ptr  18h
.text:5B8E3160
.text:5B8E3160 55							       push    ebp
.text:5B8E3161 8B EC							       mov     ebp, esp
.text:5B8E3163 56							       push    esi
.text:5B8E3164 57							       push    edi
.text:5B8E3165 8D 45 14							       lea     eax, [ebp+lcid]
.text:5B8E3168 50							       push    eax	       ; struct	ITypeInfo **
.text:5B8E3169 FF 75 14							       push    [ebp+lcid]      ; lcid
.text:5B8E316C E8 3F FF	FF FF						       call    ?GetTI@CComTypeInfoHolder@ATL@@QAEJKPAPAUITypeInfo@@@Z ;	ATL::CComTypeInfoHolder::GetTI(ulong,ITypeInfo * *)
.text:5B8E3171 8B 75 14							       mov     esi, [ebp+lcid]
.text:5B8E3174 85 F6							       test    esi, esi
.text:5B8E3176 8B F8							       mov     edi, eax
.text:5B8E3178 74 17							       jz      short loc_5B8E3191
.text:5B8E317A FF 75 18							       push    [ebp+arg_10]
.text:5B8E317D 8B 06							       mov     eax, [esi]
.text:5B8E317F FF 75 10							       push    [ebp+arg_8]
.text:5B8E3182 FF 75 0C							       push    [ebp+arg_4]
.text:5B8E3185 56							       push    esi
.text:5B8E3186 FF 50 28							       call    dword ptr [eax+28h]
.text:5B8E3189 8B F8							       mov     edi, eax
.text:5B8E318B 8B 06							       mov     eax, [esi]
.text:5B8E318D 56							       push    esi
.text:5B8E318E FF 50 08							       call    dword ptr [eax+8]
.text:5B8E3191
.text:5B8E3191						       loc_5B8E3191:			       ; CODE XREF: ATL::CComTypeInfoHolder::GetIDsOfNames(_GUID const &,ushort	* *,uint,ulong,long *)+18j
.text:5B8E3191 8B C7							       mov     eax, edi
.text:5B8E3193 5F							       pop     edi
.text:5B8E3194 5E							       pop     esi
.text:5B8E3195 5D							       pop     ebp
.text:5B8E3196 C2 14 00							       retn    14h
.text:5B8E3196						       ?GetIDsOfNames@CComTypeInfoHolder@ATL@@QAEJABU_GUID@@PAPAGIKPAJ@Z endp
.text:5B8E3196
.text:5B8E3199
.text:5B8E3199						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3199
.text:5B8E3199						       ; Attributes: bp-based frame
.text:5B8E3199
.text:5B8E3199						       ; __int32 __thiscall ATL::CComTypeInfoHolder::Invoke(ATL::CComTypeInfoHolder *this, struct IDispatch *, __int32,	const struct _GUID *, LCID lcid, unsigned __int16, struct tagDISPPARAMS	*, struct tagVARIANT *,	struct tagEXCEPINFO *, unsigned	int *)
.text:5B8E3199						       ?Invoke@CComTypeInfoHolder@ATL@@QAEJPAUIDispatch@@JABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z proc near
.text:5B8E3199											       ; CODE XREF: ATL::IDispatchImpl<ITrialEnd,&_GUID	const IID_ITrialEnd,&_GUID const LIBID_TRIALOCLib,1,0,ATL::CComTypeInfoHolder>::Invoke(long,_GUID const	&,ulong,ushort,tagDISPPARAMS *,tagVARIANT *,tagEXCEPINFO *,uint	*)+9j
.text:5B8E3199
.text:5B8E3199						       arg_0	       = dword ptr  8
.text:5B8E3199						       arg_4	       = dword ptr  0Ch
.text:5B8E3199						       lcid	       = dword ptr  14h
.text:5B8E3199						       arg_10	       = word ptr  18h
.text:5B8E3199						       arg_14	       = dword ptr  1Ch
.text:5B8E3199						       arg_18	       = dword ptr  20h
.text:5B8E3199						       arg_1C	       = dword ptr  24h
.text:5B8E3199						       arg_20	       = dword ptr  28h
.text:5B8E3199
.text:5B8E3199 55							       push    ebp
.text:5B8E319A 8B EC							       mov     ebp, esp
.text:5B8E319C 56							       push    esi
.text:5B8E319D 57							       push    edi
.text:5B8E319E 6A 00							       push    0	       ; perrinfo
.text:5B8E31A0 6A 00							       push    0	       ; dwReserved
.text:5B8E31A2 8B F1							       mov     esi, ecx
.text:5B8E31A4 FF 15 E8	10 8E 5B					       call    ds:__imp__SetErrorInfo@8	; SetErrorInfo(x,x)
.text:5B8E31AA 8D 45 14							       lea     eax, [ebp+lcid]
.text:5B8E31AD 50							       push    eax	       ; struct	ITypeInfo **
.text:5B8E31AE FF 75 14							       push    [ebp+lcid]      ; lcid
.text:5B8E31B1 8B CE							       mov     ecx, esi	       ; this
.text:5B8E31B3 E8 F8 FE	FF FF						       call    ?GetTI@CComTypeInfoHolder@ATL@@QAEJKPAPAUITypeInfo@@@Z ;	ATL::CComTypeInfoHolder::GetTI(ulong,ITypeInfo * *)
.text:5B8E31B8 8B 75 14							       mov     esi, [ebp+lcid]
.text:5B8E31BB 85 F6							       test    esi, esi
.text:5B8E31BD 8B F8							       mov     edi, eax
.text:5B8E31BF 74 23							       jz      short loc_5B8E31E4
.text:5B8E31C1 FF 75 28							       push    [ebp+arg_20]
.text:5B8E31C4 8B 06							       mov     eax, [esi]
.text:5B8E31C6 FF 75 24							       push    [ebp+arg_1C]
.text:5B8E31C9 FF 75 20							       push    [ebp+arg_18]
.text:5B8E31CC FF 75 1C							       push    [ebp+arg_14]
.text:5B8E31CF FF 75 18							       push    dword ptr [ebp+arg_10]
.text:5B8E31D2 FF 75 0C							       push    [ebp+arg_4]
.text:5B8E31D5 FF 75 08							       push    [ebp+arg_0]
.text:5B8E31D8 56							       push    esi
.text:5B8E31D9 FF 50 2C							       call    dword ptr [eax+2Ch]
.text:5B8E31DC 8B F8							       mov     edi, eax
.text:5B8E31DE 8B 06							       mov     eax, [esi]
.text:5B8E31E0 56							       push    esi
.text:5B8E31E1 FF 50 08							       call    dword ptr [eax+8]
.text:5B8E31E4
.text:5B8E31E4						       loc_5B8E31E4:			       ; CODE XREF: ATL::CComTypeInfoHolder::Invoke(IDispatch *,long,_GUID const &,ulong,ushort,tagDISPPARAMS *,tagVARIANT *,tagEXCEPINFO *,uint *)+26j
.text:5B8E31E4 8B C7							       mov     eax, edi
.text:5B8E31E6 5F							       pop     edi
.text:5B8E31E7 5E							       pop     esi
.text:5B8E31E8 5D							       pop     ebp
.text:5B8E31E9 C2 24 00							       retn    24h
.text:5B8E31E9						       ?Invoke@CComTypeInfoHolder@ATL@@QAEJPAUIDispatch@@JABU_GUID@@KGPAUtagDISPPARAMS@@PAUtagVARIANT@@PAUtagEXCEPINFO@@PAI@Z endp
.text:5B8E31E9
.text:5B8E31EC
.text:5B8E31EC						       ; =============== S U B R O U T I N E =======================================
.text:5B8E31EC
.text:5B8E31EC						       ; Attributes: bp-based frame
.text:5B8E31EC
.text:5B8E31EC						       ; __int32 __stdcall ATL::CComClassFactory::CreateInstance(ATL::CComClassFactory *this, struct IUnknown *, const struct _GUID *, void **)
.text:5B8E31EC						       ?CreateInstance@CComClassFactory@ATL@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z	proc near
.text:5B8E31EC											       ; DATA XREF: .text:5B8E1218o
.text:5B8E31EC											       ; .text:5B8E122Co
.text:5B8E31EC
.text:5B8E31EC						       this	       = dword ptr  8
.text:5B8E31EC						       arg_4	       = dword ptr  0Ch
.text:5B8E31EC						       arg_8	       = dword ptr  10h
.text:5B8E31EC						       arg_C	       = dword ptr  14h
.text:5B8E31EC
.text:5B8E31EC 55							       push    ebp
.text:5B8E31ED 8B EC							       mov     ebp, esp
.text:5B8E31EF 56							       push    esi
.text:5B8E31F0 8B 75 14							       mov     esi, [ebp+arg_C]
.text:5B8E31F3 85 F6							       test    esi, esi
.text:5B8E31F5 B8 03 40	00 80						       mov     eax, 80004003h
.text:5B8E31FA 74 29							       jz      short loc_5B8E3225
.text:5B8E31FC 83 26 00							       and     dword ptr [esi],	0
.text:5B8E31FF 83 7D 0C	00						       cmp     [ebp+arg_4], 0
.text:5B8E3203 74 13							       jz      short loc_5B8E3218
.text:5B8E3205 8B 4D 10							       mov     ecx, [ebp+arg_8]	; struct _GUID *
.text:5B8E3208 E8 A8 FB	FF FF						       call    ?InlineIsEqualUnknown@ATL@@YIHABU_GUID@@@Z ; ATL::InlineIsEqualUnknown(_GUID const &)
.text:5B8E320D 85 C0							       test    eax, eax
.text:5B8E320F 75 07							       jnz     short loc_5B8E3218
.text:5B8E3211 B8 10 01	04 80						       mov     eax, 80040110h
.text:5B8E3216 EB 0D							       jmp     short loc_5B8E3225
.text:5B8E3218						       ; ---------------------------------------------------------------------------
.text:5B8E3218
.text:5B8E3218						       loc_5B8E3218:			       ; CODE XREF: ATL::CComClassFactory::CreateInstance(IUnknown *,_GUID const &,void	* *)+17j
.text:5B8E3218											       ; ATL::CComClassFactory::CreateInstance(IUnknown	*,_GUID	const &,void * *)+23j
.text:5B8E3218 8B 45 08							       mov     eax, [ebp+this]
.text:5B8E321B 56							       push    esi
.text:5B8E321C FF 75 10							       push    [ebp+arg_8]
.text:5B8E321F FF 75 0C							       push    [ebp+arg_4]
.text:5B8E3222 FF 50 20							       call    dword ptr [eax+20h]
.text:5B8E3225
.text:5B8E3225						       loc_5B8E3225:			       ; CODE XREF: ATL::CComClassFactory::CreateInstance(IUnknown *,_GUID const &,void	* *)+Ej
.text:5B8E3225											       ; ATL::CComClassFactory::CreateInstance(IUnknown	*,_GUID	const &,void * *)+2Aj
.text:5B8E3225 5E							       pop     esi
.text:5B8E3226 5D							       pop     ebp
.text:5B8E3227 C2 10 00							       retn    10h
.text:5B8E3227						       ?CreateInstance@CComClassFactory@ATL@@UAGJPAUIUnknown@@ABU_GUID@@PAPAX@Z	endp
.text:5B8E3227
.text:5B8E322A
.text:5B8E322A						       ; =============== S U B R O U T I N E =======================================
.text:5B8E322A
.text:5B8E322A
.text:5B8E322A						       ; __int32 __stdcall ATL::CComClassFactory::LockServer(ATL::CComClassFactory *this, int)
.text:5B8E322A						       ?LockServer@CComClassFactory@ATL@@UAGJH@Z proc near
.text:5B8E322A											       ; DATA XREF: .text:5B8E121Co
.text:5B8E322A											       ; .text:5B8E1230o
.text:5B8E322A
.text:5B8E322A						       this	       = dword ptr  4
.text:5B8E322A						       arg_4	       = dword ptr  8
.text:5B8E322A
.text:5B8E322A 83 7C 24	08 00						       cmp     [esp+arg_4], 0
.text:5B8E322F 68 EC 70	8E 5B						       push    offset Addend   ; lpAddend
.text:5B8E3234 74 08							       jz      short loc_5B8E323E
.text:5B8E3236 FF 15 90	10 8E 5B					       call    ds:__imp__InterlockedIncrement@4	; InterlockedIncrement(x)
.text:5B8E323C EB 06							       jmp     short loc_5B8E3244
.text:5B8E323E						       ; ---------------------------------------------------------------------------
.text:5B8E323E
.text:5B8E323E						       loc_5B8E323E:			       ; CODE XREF: ATL::CComClassFactory::LockServer(int)+Aj
.text:5B8E323E FF 15 8C	10 8E 5B					       call    ds:__imp__InterlockedDecrement@4	; InterlockedDecrement(x)
.text:5B8E3244
.text:5B8E3244						       loc_5B8E3244:			       ; CODE XREF: ATL::CComClassFactory::LockServer(int)+12j
.text:5B8E3244 33 C0							       xor     eax, eax
.text:5B8E3246 C2 08 00							       retn    8
.text:5B8E3246						       ?LockServer@CComClassFactory@ATL@@UAGJH@Z endp
.text:5B8E3246
.text:5B8E3249
.text:5B8E3249						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3249
.text:5B8E3249
.text:5B8E3249						       ; void __thiscall ATL::CComModule::AddCreateWndData(ATL::CComModule *this, struct ATL::_AtlCreateWndData	*, void	*)
.text:5B8E3249						       ?AddCreateWndData@CComModule@ATL@@QAEXPAU_AtlCreateWndData@2@PAX@Z proc near
.text:5B8E3249											       ; CODE XREF: ATL::CWindowImplBase::Create(HWND__	*,tagRECT &,ushort const *,ulong,ulong,uint,ushort)+1Bp
.text:5B8E3249
.text:5B8E3249						       arg_0	       = dword ptr  4
.text:5B8E3249						       arg_4	       = dword ptr  8
.text:5B8E3249
.text:5B8E3249 8B 44 24	08						       mov     eax, [esp+arg_4]
.text:5B8E324D 53							       push    ebx
.text:5B8E324E 56							       push    esi
.text:5B8E324F 8B 74 24	0C						       mov     esi, [esp+8+arg_0]
.text:5B8E3253 57							       push    edi
.text:5B8E3254 8B F9							       mov     edi, ecx
.text:5B8E3256 89 06							       mov     [esi], eax
.text:5B8E3258 FF 15 BC	10 8E 5B					       call    ds:__imp__GetCurrentThreadId@0 ;	GetCurrentThreadId()
.text:5B8E325E 8D 5F 34							       lea     ebx, [edi+34h]
.text:5B8E3261 53							       push    ebx	       ; lpCriticalSection
.text:5B8E3262 89 46 04							       mov     [esi+4],	eax
.text:5B8E3265 FF 15 68	10 8E 5B					       call    ds:__imp__EnterCriticalSection@4	; EnterCriticalSection(x)
.text:5B8E326B 8B 47 64							       mov     eax, [edi+64h]
.text:5B8E326E 89 46 08							       mov     [esi+8],	eax
.text:5B8E3271 53							       push    ebx	       ; lpCriticalSection
.text:5B8E3272 89 77 64							       mov     [edi+64h], esi
.text:5B8E3275 FF 15 B8	10 8E 5B					       call    ds:__imp__LeaveCriticalSection@4	; LeaveCriticalSection(x)
.text:5B8E327B 5F							       pop     edi
.text:5B8E327C 5E							       pop     esi
.text:5B8E327D 5B							       pop     ebx
.text:5B8E327E C2 08 00							       retn    8
.text:5B8E327E						       ?AddCreateWndData@CComModule@ATL@@QAEXPAU_AtlCreateWndData@2@PAX@Z endp
.text:5B8E327E
.text:5B8E3281
.text:5B8E3281						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3281
.text:5B8E3281
.text:5B8E3281						       ; void *__thiscall ATL::CComModule::ExtractCreateWndData(ATL::CComModule	*__hidden this)
.text:5B8E3281						       ?ExtractCreateWndData@CComModule@ATL@@QAEPAXXZ proc near
.text:5B8E3281											       ; CODE XREF: ATL::CWindowImplBase::StartWindowProc(HWND__ *,uint,uint,long)+7p
.text:5B8E3281 53							       push    ebx
.text:5B8E3282 56							       push    esi
.text:5B8E3283 57							       push    edi
.text:5B8E3284 8B F9							       mov     edi, ecx
.text:5B8E3286 8D 5F 34							       lea     ebx, [edi+34h]
.text:5B8E3289 53							       push    ebx	       ; lpCriticalSection
.text:5B8E328A FF 15 68	10 8E 5B					       call    ds:__imp__EnterCriticalSection@4	; EnterCriticalSection(x)
.text:5B8E3290 8B 77 64							       mov     esi, [edi+64h]
.text:5B8E3293 85 F6							       test    esi, esi
.text:5B8E3295 74 16							       jz      short loc_5B8E32AD
.text:5B8E3297 FF 15 BC	10 8E 5B					       call    ds:__imp__GetCurrentThreadId@0 ;	GetCurrentThreadId()
.text:5B8E329D 33 C9							       xor     ecx, ecx
.text:5B8E329F
.text:5B8E329F						       loc_5B8E329F:			       ; CODE XREF: ATL::CComModule::ExtractCreateWndData(void)+2Aj
.text:5B8E329F 39 46 04							       cmp     [esi+4],	eax
.text:5B8E32A2 74 16							       jz      short loc_5B8E32BA
.text:5B8E32A4 8B CE							       mov     ecx, esi
.text:5B8E32A6 8B 76 08							       mov     esi, [esi+8]
.text:5B8E32A9 85 F6							       test    esi, esi
.text:5B8E32AB 75 F2							       jnz     short loc_5B8E329F
.text:5B8E32AD
.text:5B8E32AD						       loc_5B8E32AD:			       ; CODE XREF: ATL::CComModule::ExtractCreateWndData(void)+14j
.text:5B8E32AD 53							       push    ebx	       ; lpCriticalSection
.text:5B8E32AE FF 15 B8	10 8E 5B					       call    ds:__imp__LeaveCriticalSection@4	; LeaveCriticalSection(x)
.text:5B8E32B4 33 C0							       xor     eax, eax
.text:5B8E32B6
.text:5B8E32B6						       loc_5B8E32B6:			       ; CODE XREF: ATL::CComModule::ExtractCreateWndData(void)+51j
.text:5B8E32B6 5F							       pop     edi
.text:5B8E32B7 5E							       pop     esi
.text:5B8E32B8 5B							       pop     ebx
.text:5B8E32B9 C3							       retn
.text:5B8E32BA						       ; ---------------------------------------------------------------------------
.text:5B8E32BA
.text:5B8E32BA						       loc_5B8E32BA:			       ; CODE XREF: ATL::CComModule::ExtractCreateWndData(void)+21j
.text:5B8E32BA 85 C9							       test    ecx, ecx
.text:5B8E32BC 8B 46 08							       mov     eax, [esi+8]
.text:5B8E32BF 75 05							       jnz     short loc_5B8E32C6
.text:5B8E32C1 89 47 64							       mov     [edi+64h], eax
.text:5B8E32C4 EB 03							       jmp     short loc_5B8E32C9
.text:5B8E32C6						       ; ---------------------------------------------------------------------------
.text:5B8E32C6
.text:5B8E32C6						       loc_5B8E32C6:			       ; CODE XREF: ATL::CComModule::ExtractCreateWndData(void)+3Ej
.text:5B8E32C6 89 41 08							       mov     [ecx+8],	eax
.text:5B8E32C9
.text:5B8E32C9						       loc_5B8E32C9:			       ; CODE XREF: ATL::CComModule::ExtractCreateWndData(void)+43j
.text:5B8E32C9 53							       push    ebx	       ; lpCriticalSection
.text:5B8E32CA FF 15 B8	10 8E 5B					       call    ds:__imp__LeaveCriticalSection@4	; LeaveCriticalSection(x)
.text:5B8E32D0 8B 06							       mov     eax, [esi]
.text:5B8E32D2 EB E2							       jmp     short loc_5B8E32B6
.text:5B8E32D2						       ?ExtractCreateWndData@CComModule@ATL@@QAEPAXXZ endp
.text:5B8E32D2
.text:5B8E32D4
.text:5B8E32D4						       ; =============== S U B R O U T I N E =======================================
.text:5B8E32D4
.text:5B8E32D4
.text:5B8E32D4						       ; __int32 __thiscall ATL::CRegKey::Close(ATL::CRegKey *__hidden this)
.text:5B8E32D4						       ?Close@CRegKey@ATL@@QAEJXZ proc near    ; CODE XREF: ATL::CRegKey::Create(HKEY__	*,ushort const *,ushort	*,ulong,ulong,_SECURITY_ATTRIBUTES *,ulong *)+3Fp
.text:5B8E32D4											       ; ATL::CRegKey::Open(HKEY__ *,ushort const *,ulong)+26p	...
.text:5B8E32D4 56							       push    esi
.text:5B8E32D5 8B F1							       mov     esi, ecx
.text:5B8E32D7 8B 0E							       mov     ecx, [esi]
.text:5B8E32D9 33 C0							       xor     eax, eax
.text:5B8E32DB 85 C9							       test    ecx, ecx
.text:5B8E32DD 74 0A							       jz      short loc_5B8E32E9
.text:5B8E32DF 51							       push    ecx	       ; hKey
.text:5B8E32E0 FF 15 10	10 8E 5B					       call    ds:__imp__RegCloseKey@4 ; RegCloseKey(x)
.text:5B8E32E6 83 26 00							       and     dword ptr [esi],	0
.text:5B8E32E9
.text:5B8E32E9						       loc_5B8E32E9:			       ; CODE XREF: ATL::CRegKey::Close(void)+9j
.text:5B8E32E9 5E							       pop     esi
.text:5B8E32EA C3							       retn
.text:5B8E32EA						       ?Close@CRegKey@ATL@@QAEJXZ endp
.text:5B8E32EA
.text:5B8E32EB
.text:5B8E32EB						       ; =============== S U B R O U T I N E =======================================
.text:5B8E32EB
.text:5B8E32EB						       ; Attributes: bp-based frame
.text:5B8E32EB
.text:5B8E32EB						       ; __int32 __thiscall ATL::CRegKey::Create(ATL::CRegKey *this, HKEY hKey,	LPCWSTR	lpSubKey, LPWSTR lpClass, DWORD	dwOptions, REGSAM samDesired, LPSECURITY_ATTRIBUTES lpSecurityAttributes, unsigned __int32 *)
.text:5B8E32EB						       ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBGPAGKKPAU_SECURITY_ATTRIBUTES@@PAK@Z proc near
.text:5B8E32EB											       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+272p
.text:5B8E32EB
.text:5B8E32EB						       phkResult       = dword ptr -4
.text:5B8E32EB						       hKey	       = dword ptr  8
.text:5B8E32EB						       lpSubKey	       = dword ptr  0Ch
.text:5B8E32EB						       lpClass	       = dword ptr  10h
.text:5B8E32EB						       dwOptions       = dword ptr  14h
.text:5B8E32EB						       samDesired      = dword ptr  18h
.text:5B8E32EB						       lpSecurityAttributes= dword ptr	1Ch
.text:5B8E32EB						       arg_18	       = dword ptr  20h
.text:5B8E32EB
.text:5B8E32EB 55							       push    ebp
.text:5B8E32EC 8B EC							       mov     ebp, esp
.text:5B8E32EE 51							       push    ecx
.text:5B8E32EF 56							       push    esi
.text:5B8E32F0 83 65 FC	00						       and     [ebp+phkResult],	0
.text:5B8E32F4 8D 45 1C							       lea     eax, [ebp+lpSecurityAttributes]
.text:5B8E32F7 50							       push    eax	       ; lpdwDisposition
.text:5B8E32F8 8D 45 FC							       lea     eax, [ebp+phkResult]
.text:5B8E32FB 50							       push    eax	       ; phkResult
.text:5B8E32FC FF 75 1C							       push    [ebp+lpSecurityAttributes] ; lpSecurityAttributes
.text:5B8E32FF 8B F1							       mov     esi, ecx
.text:5B8E3301 FF 75 18							       push    [ebp+samDesired]	; samDesired
.text:5B8E3304 FF 75 14							       push    [ebp+dwOptions] ; dwOptions
.text:5B8E3307 FF 75 10							       push    [ebp+lpClass]   ; lpClass
.text:5B8E330A 6A 00							       push    0	       ; Reserved
.text:5B8E330C FF 75 0C							       push    [ebp+lpSubKey]  ; lpSubKey
.text:5B8E330F FF 75 08							       push    [ebp+hKey]      ; hKey
.text:5B8E3312 FF 15 00	10 8E 5B					       call    ds:__imp__RegCreateKeyExW@36 ; RegCreateKeyExW(x,x,x,x,x,x,x,x,x)
.text:5B8E3318 8B 4D 20							       mov     ecx, [ebp+arg_18]
.text:5B8E331B 85 C9							       test    ecx, ecx
.text:5B8E331D 74 05							       jz      short loc_5B8E3324
.text:5B8E331F 8B 55 1C							       mov     edx, [ebp+lpSecurityAttributes]
.text:5B8E3322 89 11							       mov     [ecx], edx
.text:5B8E3324
.text:5B8E3324						       loc_5B8E3324:			       ; CODE XREF: ATL::CRegKey::Create(HKEY__	*,ushort const *,ushort	*,ulong,ulong,_SECURITY_ATTRIBUTES *,ulong *)+32j
.text:5B8E3324 85 C0							       test    eax, eax
.text:5B8E3326 75 0C							       jnz     short loc_5B8E3334
.text:5B8E3328 8B CE							       mov     ecx, esi	       ; this
.text:5B8E332A E8 A5 FF	FF FF						       call    ?Close@CRegKey@ATL@@QAEJXZ ; ATL::CRegKey::Close(void)
.text:5B8E332F 8B 4D FC							       mov     ecx, [ebp+phkResult]
.text:5B8E3332 89 0E							       mov     [esi], ecx
.text:5B8E3334
.text:5B8E3334						       loc_5B8E3334:			       ; CODE XREF: ATL::CRegKey::Create(HKEY__	*,ushort const *,ushort	*,ulong,ulong,_SECURITY_ATTRIBUTES *,ulong *)+3Bj
.text:5B8E3334 5E							       pop     esi
.text:5B8E3335 C9							       leave
.text:5B8E3336 C2 1C 00							       retn    1Ch
.text:5B8E3336						       ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBGPAGKKPAU_SECURITY_ATTRIBUTES@@PAK@Z endp
.text:5B8E3336
.text:5B8E3339
.text:5B8E3339						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3339
.text:5B8E3339						       ; Attributes: bp-based frame
.text:5B8E3339
.text:5B8E3339						       ; __int32 __thiscall ATL::CRegKey::Open(ATL::CRegKey *this, HKEY	hKey, LPCWSTR lpSubKey,	REGSAM samDesired)
.text:5B8E3339						       ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBGK@Z	proc near
.text:5B8E3339											       ; CODE XREF: ATL::CRegKey::RecurseDeleteKey(ushort const	*)+1Fp
.text:5B8E3339											       ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+23Ap ...
.text:5B8E3339
.text:5B8E3339						       phkResult       = dword ptr -4
.text:5B8E3339						       hKey	       = dword ptr  8
.text:5B8E3339						       lpSubKey	       = dword ptr  0Ch
.text:5B8E3339						       samDesired      = dword ptr  10h
.text:5B8E3339
.text:5B8E3339 55							       push    ebp
.text:5B8E333A 8B EC							       mov     ebp, esp
.text:5B8E333C 51							       push    ecx
.text:5B8E333D 83 65 FC	00						       and     [ebp+phkResult],	0
.text:5B8E3341 56							       push    esi
.text:5B8E3342 8D 45 FC							       lea     eax, [ebp+phkResult]
.text:5B8E3345 50							       push    eax	       ; phkResult
.text:5B8E3346 FF 75 10							       push    [ebp+samDesired]	; samDesired
.text:5B8E3349 8B F1							       mov     esi, ecx
.text:5B8E334B 6A 00							       push    0	       ; ulOptions
.text:5B8E334D FF 75 0C							       push    [ebp+lpSubKey]  ; lpSubKey
.text:5B8E3350 FF 75 08							       push    [ebp+hKey]      ; hKey
.text:5B8E3353 FF 15 08	10 8E 5B					       call    ds:__imp__RegOpenKeyExW@20 ; RegOpenKeyExW(x,x,x,x,x)
.text:5B8E3359 85 C0							       test    eax, eax
.text:5B8E335B 75 0C							       jnz     short loc_5B8E3369
.text:5B8E335D 8B CE							       mov     ecx, esi	       ; this
.text:5B8E335F E8 70 FF	FF FF						       call    ?Close@CRegKey@ATL@@QAEJXZ ; ATL::CRegKey::Close(void)
.text:5B8E3364 8B 4D FC							       mov     ecx, [ebp+phkResult]
.text:5B8E3367 89 0E							       mov     [esi], ecx
.text:5B8E3369
.text:5B8E3369						       loc_5B8E3369:			       ; CODE XREF: ATL::CRegKey::Open(HKEY__ *,ushort const *,ulong)+22j
.text:5B8E3369 5E							       pop     esi
.text:5B8E336A C9							       leave
.text:5B8E336B C2 0C 00							       retn    0Ch
.text:5B8E336B						       ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBGK@Z	endp
.text:5B8E336B
.text:5B8E336E
.text:5B8E336E						       ; =============== S U B R O U T I N E =======================================
.text:5B8E336E
.text:5B8E336E
.text:5B8E336E						       ; __int32 __thiscall ATL::CRegKey::SetValue(ATL::CRegKey	*this, BYTE Data, const	unsigned __int16 *)
.text:5B8E336E						       ?SetValue@CRegKey@ATL@@QAEJKPBG@Z proc near
.text:5B8E336E											       ; CODE XREF: ATL::CRegParser::AddValue(ATL::CRegKey &,ushort const *,ushort *)+ADp
.text:5B8E336E
.text:5B8E336E						       Data	       = byte ptr  4
.text:5B8E336E						       lpValueName     = dword ptr  8
.text:5B8E336E
.text:5B8E336E 6A 04							       push    4	       ; cbData
.text:5B8E3370 8D 44 24	08						       lea     eax, [esp+4+Data]
.text:5B8E3374 50							       push    eax	       ; lpData
.text:5B8E3375 6A 04							       push    4	       ; dwType
.text:5B8E3377 6A 00							       push    0	       ; Reserved
.text:5B8E3379 FF 74 24	18						       push    [esp+10h+lpValueName] ; lpValueName
.text:5B8E337D FF 31							       push    dword ptr [ecx] ; hKey
.text:5B8E337F FF 15 0C	10 8E 5B					       call    ds:__imp__RegSetValueExW@24 ; RegSetValueExW(x,x,x,x,x,x)
.text:5B8E3385 C2 08 00							       retn    8
.text:5B8E3385						       ?SetValue@CRegKey@ATL@@QAEJKPBG@Z endp
.text:5B8E3385
.text:5B8E3388
.text:5B8E3388						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3388
.text:5B8E3388
.text:5B8E3388						       ; __int32 __thiscall ATL::CRegKey::SetValue(ATL::CRegKey	*this, LPCWSTR lpString, const unsigned	__int16	*)
.text:5B8E3388						       ?SetValue@CRegKey@ATL@@QAEJPBG0@Z proc near
.text:5B8E3388											       ; CODE XREF: ATL::CRegParser::AddValue(ATL::CRegKey &,ushort const *,ushort *)+90p
.text:5B8E3388
.text:5B8E3388						       lpString	       = dword ptr  4
.text:5B8E3388						       lpValueName     = dword ptr  8
.text:5B8E3388
.text:5B8E3388 56							       push    esi
.text:5B8E3389 FF 74 24	08						       push    [esp+4+lpString]	; lpString
.text:5B8E338D 8B F1							       mov     esi, ecx
.text:5B8E338F FF 15 78	10 8E 5B					       call    ds:__imp__lstrlenW@4 ; lstrlenW(x)
.text:5B8E3395 8D 44 00	02						       lea     eax, [eax+eax+2]
.text:5B8E3399 50							       push    eax	       ; cbData
.text:5B8E339A FF 74 24	0C						       push    [esp+8+lpString]	; lpData
.text:5B8E339E 6A 01							       push    1	       ; dwType
.text:5B8E33A0 6A 00							       push    0	       ; Reserved
.text:5B8E33A2 FF 74 24	1C						       push    [esp+14h+lpValueName] ; lpValueName
.text:5B8E33A6 FF 36							       push    dword ptr [esi] ; hKey
.text:5B8E33A8 FF 15 0C	10 8E 5B					       call    ds:__imp__RegSetValueExW@24 ; RegSetValueExW(x,x,x,x,x,x)
.text:5B8E33AE 5E							       pop     esi
.text:5B8E33AF C2 08 00							       retn    8
.text:5B8E33AF						       ?SetValue@CRegKey@ATL@@QAEJPBG0@Z endp
.text:5B8E33AF
.text:5B8E33B2
.text:5B8E33B2						       ; =============== S U B R O U T I N E =======================================
.text:5B8E33B2
.text:5B8E33B2
.text:5B8E33B2						       ; void __thiscall ATL::_stdcallthunk::Init(LPCVOID lpBaseAddress, unsigned __int32, void	*)
.text:5B8E33B2						       ?Init@_stdcallthunk@ATL@@QAEXKPAX@Z proc	near
.text:5B8E33B2											       ; CODE XREF: ATL::CDynamicStdCallThunk::Init(ulong,void *)+25p
.text:5B8E33B2
.text:5B8E33B2						       arg_0	       = dword ptr  4
.text:5B8E33B2						       arg_4	       = dword ptr  8
.text:5B8E33B2
.text:5B8E33B2 8B 44 24	08						       mov     eax, [esp+arg_4]
.text:5B8E33B6 89 41 04							       mov     [ecx+4],	eax
.text:5B8E33B9 8B 44 24	04						       mov     eax, [esp+arg_0]
.text:5B8E33BD 2B C1							       sub     eax, ecx
.text:5B8E33BF 6A 0D							       push    0Dh	       ; dwSize
.text:5B8E33C1 83 E8 0D							       sub     eax, 0Dh
.text:5B8E33C4 51							       push    ecx	       ; lpBaseAddress
.text:5B8E33C5 C7 01 C7	44 24 04					       mov     dword ptr [ecx],	42444C7h
.text:5B8E33CB C6 41 08	E9						       mov     byte ptr	[ecx+8], 0E9h
.text:5B8E33CF 89 41 09							       mov     [ecx+9],	eax
.text:5B8E33D2 FF 15 B0	10 8E 5B					       call    ds:__imp__GetCurrentProcess@0 ; GetCurrentProcess()
.text:5B8E33D8 50							       push    eax	       ; hProcess
.text:5B8E33D9 FF 15 B4	10 8E 5B					       call    ds:__imp__FlushInstructionCache@12 ; FlushInstructionCache(x,x,x)
.text:5B8E33DF C2 08 00							       retn    8
.text:5B8E33DF						       ?Init@_stdcallthunk@ATL@@QAEXKPAX@Z endp
.text:5B8E33DF
.text:5B8E33E2
.text:5B8E33E2						       ; =============== S U B R O U T I N E =======================================
.text:5B8E33E2
.text:5B8E33E2
.text:5B8E33E2						       ; void __thiscall ATL::CDynamicStdCallThunk::Init(ATL::CDynamicStdCallThunk *this, unsigned __int32, void *)
.text:5B8E33E2						       ?Init@CDynamicStdCallThunk@ATL@@QAEXKPAX@Z proc near
.text:5B8E33E2											       ; CODE XREF: ATL::CWindowImplBase::StartWindowProc(HWND__ *,uint,uint,long)+1Ep
.text:5B8E33E2
.text:5B8E33E2						       arg_0	       = dword ptr  4
.text:5B8E33E2						       arg_4	       = dword ptr  8
.text:5B8E33E2
.text:5B8E33E2 56							       push    esi
.text:5B8E33E3 8B F1							       mov     esi, ecx
.text:5B8E33E5 83 3E 00							       cmp     dword ptr [esi],	0
.text:5B8E33E8 75 13							       jnz     short loc_5B8E33FD
.text:5B8E33EA 6A 0D							       push    0Dh	       ; dwBytes
.text:5B8E33EC 6A 04							       push    4	       ; dwFlags
.text:5B8E33EE FF 15 84	10 8E 5B					       call    ds:__imp__GetProcessHeap@0 ; GetProcessHeap()
.text:5B8E33F4 50							       push    eax	       ; hHeap
.text:5B8E33F5 FF 15 AC	10 8E 5B					       call    ds:__imp__HeapAlloc@12 ;	HeapAlloc(x,x,x)
.text:5B8E33FB 89 06							       mov     [esi], eax
.text:5B8E33FD
.text:5B8E33FD						       loc_5B8E33FD:			       ; CODE XREF: ATL::CDynamicStdCallThunk::Init(ulong,void *)+6j
.text:5B8E33FD FF 74 24	0C						       push    [esp+4+arg_4]   ; void *
.text:5B8E3401 8B 0E							       mov     ecx, [esi]      ; lpBaseAddress
.text:5B8E3403 FF 74 24	0C						       push    [esp+8+arg_0]   ; unsigned __int32
.text:5B8E3407 E8 A6 FF	FF FF						       call    ?Init@_stdcallthunk@ATL@@QAEXKPAX@Z ; ATL::_stdcallthunk::Init(ulong,void *)
.text:5B8E340C 5E							       pop     esi
.text:5B8E340D C2 08 00							       retn    8
.text:5B8E340D						       ?Init@CDynamicStdCallThunk@ATL@@QAEXKPAX@Z endp
.text:5B8E340D
.text:5B8E3410
.text:5B8E3410						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3410
.text:5B8E3410
.text:5B8E3410						       ; __int32 __thiscall ATL::CWindowImplBase::DefWindowProcW(ATL::CWindowImplBase *this, UINT Msg, WPARAM wParam, __int32)
.text:5B8E3410						       ?DefWindowProcW@CWindowImplBase@ATL@@QAEJIIJ@Z proc near
.text:5B8E3410											       ; CODE XREF: ATL::CWindowImplBase::WindowProc(HWND__ *,uint,uint,long)+44p
.text:5B8E3410
.text:5B8E3410						       Msg	       = dword ptr  4
.text:5B8E3410						       wParam	       = dword ptr  8
.text:5B8E3410						       lParam	       = dword ptr  0Ch
.text:5B8E3410
.text:5B8E3410 FF 74 24	0C						       push    [esp+lParam]    ; lParam
.text:5B8E3414 FF 74 24	0C						       push    [esp+4+wParam]  ; wParam
.text:5B8E3418 FF 74 24	0C						       push    [esp+8+Msg]     ; Msg
.text:5B8E341C FF 71 04							       push    dword ptr [ecx+4] ; hWnd
.text:5B8E341F FF 71 18							       push    dword ptr [ecx+18h] ; lpPrevWndFunc
.text:5B8E3422 FF 15 4C	11 8E 5B					       call    ds:__imp__CallWindowProcW@20 ; CallWindowProcW(x,x,x,x,x)
.text:5B8E3428 C2 0C 00							       retn    0Ch
.text:5B8E3428						       ?DefWindowProcW@CWindowImplBase@ATL@@QAEJIIJ@Z endp
.text:5B8E3428
.text:5B8E342B
.text:5B8E342B						       ; =============== S U B R O U T I N E =======================================
.text:5B8E342B
.text:5B8E342B
.text:5B8E342B						       ; int __thiscall	ATL::CComControlBase::DoesVerbActivate(ATL::CComControlBase *this, __int32)
.text:5B8E342B						       ?DoesVerbActivate@CComControlBase@ATL@@QAEHJ@Z proc near
.text:5B8E342B											       ; CODE XREF: ATL::CComControlBase::DoesVerbUIActivate(long)+19p
.text:5B8E342B
.text:5B8E342B						       arg_0	       = dword ptr  4
.text:5B8E342B
.text:5B8E342B 8B 4C 24	04						       mov     ecx, [esp+arg_0]
.text:5B8E342F 33 C0							       xor     eax, eax
.text:5B8E3431 83 F9 FB							       cmp     ecx, 0FFFFFFFBh
.text:5B8E3434 7C 11							       jl      short locret_5B8E3447
.text:5B8E3436 83 F9 FC							       cmp     ecx, 0FFFFFFFCh
.text:5B8E3439 7E 09							       jle     short loc_5B8E3444
.text:5B8E343B 83 F9 FE							       cmp     ecx, 0FFFFFFFEh
.text:5B8E343E 7E 07							       jle     short locret_5B8E3447
.text:5B8E3440 85 C9							       test    ecx, ecx
.text:5B8E3442 7F 03							       jg      short locret_5B8E3447
.text:5B8E3444
.text:5B8E3444						       loc_5B8E3444:			       ; CODE XREF: ATL::CComControlBase::DoesVerbActivate(long)+Ej
.text:5B8E3444 33 C0							       xor     eax, eax
.text:5B8E3446 40							       inc     eax
.text:5B8E3447
.text:5B8E3447						       locret_5B8E3447:			       ; CODE XREF: ATL::CComControlBase::DoesVerbActivate(long)+9j
.text:5B8E3447											       ; ATL::CComControlBase::DoesVerbActivate(long)+13j ...
.text:5B8E3447 C2 04 00							       retn    4
.text:5B8E3447						       ?DoesVerbActivate@CComControlBase@ATL@@QAEHJ@Z endp
.text:5B8E3447
.text:5B8E344A
.text:5B8E344A						       ; =============== S U B R O U T I N E =======================================
.text:5B8E344A
.text:5B8E344A
.text:5B8E344A						       ; public: __thiscall ATL::CComQIPtr<struct IOleControlSite, &struct _GUID const IID_IOleControlSite>::CComQIPtr<struct IOleControlSite, &struct _GUID const IID_IOleControlSite>(struct IUnknown	*)
.text:5B8E344A						       ??0?$CComQIPtr@UIOleControlSite@@$1?IID_IOleControlSite@@3U_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z proc near
.text:5B8E344A											       ; CODE XREF: ATL::CComControlBase::DoVerbProperties(tagRECT const *,HWND__ *)+19p
.text:5B8E344A
.text:5B8E344A						       arg_0	       = dword ptr  4
.text:5B8E344A
.text:5B8E344A 8B 44 24	04						       mov     eax, [esp+arg_0]
.text:5B8E344E 56							       push    esi
.text:5B8E344F 8B F1							       mov     esi, ecx
.text:5B8E3451 83 26 00							       and     dword ptr [esi],	0
.text:5B8E3454 85 C0							       test    eax, eax
.text:5B8E3456 74 0B							       jz      short loc_5B8E3463
.text:5B8E3458 8B 08							       mov     ecx, [eax]
.text:5B8E345A 56							       push    esi
.text:5B8E345B 68 9C 19	8E 5B						       push    offset _IID_IOleControlSite
.text:5B8E3460 50							       push    eax
.text:5B8E3461 FF 11							       call    dword ptr [ecx]
.text:5B8E3463
.text:5B8E3463						       loc_5B8E3463:			       ; CODE XREF: ATL::CComQIPtr<IOleControlSite,&_GUID const	IID_IOleControlSite>::CComQIPtr<IOleControlSite,&_GUID const IID_IOleControlSite>(IUnknown *)+Cj
.text:5B8E3463 8B C6							       mov     eax, esi
.text:5B8E3465 5E							       pop     esi
.text:5B8E3466 C2 04 00							       retn    4
.text:5B8E3466						       ??0?$CComQIPtr@UIOleControlSite@@$1?IID_IOleControlSite@@3U_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z endp
.text:5B8E3466
.text:5B8E3469
.text:5B8E3469						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3469
.text:5B8E3469						       ; Attributes: bp-based frame
.text:5B8E3469
.text:5B8E3469						       ; __int32 __stdcall ATL::AtlInternalQueryInterface(void *, const	struct ATL::_ATL_INTMAP_ENTRY *, const struct _GUID *, void **)
.text:5B8E3469						       ?AtlInternalQueryInterface@ATL@@YGJPAXPBU_ATL_INTMAP_ENTRY@1@ABU_GUID@@PAPAX@Z proc near
.text:5B8E3469											       ; CODE XREF: ATL::CComObjectNoLock<ATL::CComClassFactory>::QueryInterface(_GUID const &,void * *)+11p
.text:5B8E3469											       ; ATL::CComControl<CTrialEnd>::ControlQueryInterface(_GUID const	&,void * *)+Ep	...
.text:5B8E3469
.text:5B8E3469						       arg_0	       = dword ptr  8
.text:5B8E3469						       arg_4	       = dword ptr  0Ch
.text:5B8E3469						       arg_8	       = dword ptr  10h
.text:5B8E3469						       arg_C	       = dword ptr  14h
.text:5B8E3469
.text:5B8E3469 55							       push    ebp
.text:5B8E346A 8B EC							       mov     ebp, esp
.text:5B8E346C 53							       push    ebx
.text:5B8E346D 8B 5D 14							       mov     ebx, [ebp+arg_C]
.text:5B8E3470 85 DB							       test    ebx, ebx
.text:5B8E3472 75 07							       jnz     short loc_5B8E347B
.text:5B8E3474 B8 03 40	00 80						       mov     eax, 80004003h
.text:5B8E3479 EB 77							       jmp     short loc_5B8E34F2
.text:5B8E347B						       ; ---------------------------------------------------------------------------
.text:5B8E347B
.text:5B8E347B						       loc_5B8E347B:			       ; CODE XREF: ATL::AtlInternalQueryInterface(void	*,ATL::_ATL_INTMAP_ENTRY const *,_GUID const &,void * *)+9j
.text:5B8E347B 8B 4D 10							       mov     ecx, [ebp+arg_8]	; struct _GUID *
.text:5B8E347E 83 23 00							       and     dword ptr [ebx],	0
.text:5B8E3481 56							       push    esi
.text:5B8E3482 57							       push    edi
.text:5B8E3483 E8 2D F9	FF FF						       call    ?InlineIsEqualUnknown@ATL@@YIHABU_GUID@@@Z ; ATL::InlineIsEqualUnknown(_GUID const &)
.text:5B8E3488 85 C0							       test    eax, eax
.text:5B8E348A 74 15							       jz      short loc_5B8E34A1
.text:5B8E348C 8B 45 0C							       mov     eax, [ebp+arg_4]
.text:5B8E348F 8B 70 04							       mov     esi, [eax+4]
.text:5B8E3492
.text:5B8E3492						       loc_5B8E3492:			       ; CODE XREF: ATL::AtlInternalQueryInterface(void	*,ATL::_ATL_INTMAP_ENTRY const *,_GUID const &,void * *)+91j
.text:5B8E3492 03 75 08							       add     esi, [ebp+arg_0]
.text:5B8E3495 8B 06							       mov     eax, [esi]
.text:5B8E3497 56							       push    esi
.text:5B8E3498 FF 50 04							       call    dword ptr [eax+4]
.text:5B8E349B 89 33							       mov     [ebx], esi
.text:5B8E349D 33 C0							       xor     eax, eax
.text:5B8E349F EB 4F							       jmp     short loc_5B8E34F0
.text:5B8E34A1						       ; ---------------------------------------------------------------------------
.text:5B8E34A1
.text:5B8E34A1						       loc_5B8E34A1:			       ; CODE XREF: ATL::AtlInternalQueryInterface(void	*,ATL::_ATL_INTMAP_ENTRY const *,_GUID const &,void * *)+21j
.text:5B8E34A1 8B 75 0C							       mov     esi, [ebp+arg_4]
.text:5B8E34A4 EB 3E							       jmp     short loc_5B8E34E4
.text:5B8E34A6						       ; ---------------------------------------------------------------------------
.text:5B8E34A6
.text:5B8E34A6						       loc_5B8E34A6:			       ; CODE XREF: ATL::AtlInternalQueryInterface(void	*,ATL::_ATL_INTMAP_ENTRY const *,_GUID const &,void * *)+80j
.text:5B8E34A6 8B 0E							       mov     ecx, [esi]
.text:5B8E34A8 33 C0							       xor     eax, eax
.text:5B8E34AA 85 C9							       test    ecx, ecx
.text:5B8E34AC 0F 94 C0							       setz    al
.text:5B8E34AF 85 C0							       test    eax, eax
.text:5B8E34B1 89 45 0C							       mov     [ebp+arg_4], eax
.text:5B8E34B4 75 0C							       jnz     short loc_5B8E34C2
.text:5B8E34B6 8B 55 10							       mov     edx, [ebp+arg_8]
.text:5B8E34B9 E8 9C F6	FF FF						       call    @InlineIsEqualGUID@8 ; InlineIsEqualGUID(x,x)
.text:5B8E34BE 85 C0							       test    eax, eax
.text:5B8E34C0 74 1F							       jz      short loc_5B8E34E1
.text:5B8E34C2
.text:5B8E34C2						       loc_5B8E34C2:			       ; CODE XREF: ATL::AtlInternalQueryInterface(void	*,ATL::_ATL_INTMAP_ENTRY const *,_GUID const &,void * *)+4Bj
.text:5B8E34C2 83 FF 01							       cmp     edi, 1
.text:5B8E34C5 74 30							       jz      short loc_5B8E34F7
.text:5B8E34C7 FF 76 04							       push    dword ptr [esi+4]
.text:5B8E34CA 53							       push    ebx
.text:5B8E34CB FF 75 10							       push    [ebp+arg_8]
.text:5B8E34CE FF 75 08							       push    [ebp+arg_0]
.text:5B8E34D1 FF D7							       call    edi
.text:5B8E34D3 85 C0							       test    eax, eax
.text:5B8E34D5 74 19							       jz      short loc_5B8E34F0
.text:5B8E34D7 83 7D 0C	00						       cmp     [ebp+arg_4], 0
.text:5B8E34DB 75 04							       jnz     short loc_5B8E34E1
.text:5B8E34DD 85 C0							       test    eax, eax
.text:5B8E34DF 7C 0F							       jl      short loc_5B8E34F0
.text:5B8E34E1
.text:5B8E34E1						       loc_5B8E34E1:			       ; CODE XREF: ATL::AtlInternalQueryInterface(void	*,ATL::_ATL_INTMAP_ENTRY const *,_GUID const &,void * *)+57j
.text:5B8E34E1											       ; ATL::AtlInternalQueryInterface(void *,ATL::_ATL_INTMAP_ENTRY const *,_GUID const &,void * *)+72j
.text:5B8E34E1 83 C6 0C							       add     esi, 0Ch
.text:5B8E34E4
.text:5B8E34E4						       loc_5B8E34E4:			       ; CODE XREF: ATL::AtlInternalQueryInterface(void	*,ATL::_ATL_INTMAP_ENTRY const *,_GUID const &,void * *)+3Bj
.text:5B8E34E4 8B 7E 08							       mov     edi, [esi+8]
.text:5B8E34E7 85 FF							       test    edi, edi
.text:5B8E34E9 75 BB							       jnz     short loc_5B8E34A6
.text:5B8E34EB B8 02 40	00 80						       mov     eax, 80004002h
.text:5B8E34F0
.text:5B8E34F0						       loc_5B8E34F0:			       ; CODE XREF: ATL::AtlInternalQueryInterface(void	*,ATL::_ATL_INTMAP_ENTRY const *,_GUID const &,void * *)+36j
.text:5B8E34F0											       ; ATL::AtlInternalQueryInterface(void *,ATL::_ATL_INTMAP_ENTRY const *,_GUID const &,void * *)+6Cj ...
.text:5B8E34F0 5F							       pop     edi
.text:5B8E34F1 5E							       pop     esi
.text:5B8E34F2
.text:5B8E34F2						       loc_5B8E34F2:			       ; CODE XREF: ATL::AtlInternalQueryInterface(void	*,ATL::_ATL_INTMAP_ENTRY const *,_GUID const &,void * *)+10j
.text:5B8E34F2 5B							       pop     ebx
.text:5B8E34F3 5D							       pop     ebp
.text:5B8E34F4 C2 10 00							       retn    10h
.text:5B8E34F7						       ; ---------------------------------------------------------------------------
.text:5B8E34F7
.text:5B8E34F7						       loc_5B8E34F7:			       ; CODE XREF: ATL::AtlInternalQueryInterface(void	*,ATL::_ATL_INTMAP_ENTRY const *,_GUID const &,void * *)+5Cj
.text:5B8E34F7 8B 76 04							       mov     esi, [esi+4]
.text:5B8E34FA EB 96							       jmp     short loc_5B8E3492
.text:5B8E34FA						       ?AtlInternalQueryInterface@ATL@@YGJPAXPBU_ATL_INTMAP_ENTRY@1@ABU_GUID@@PAPAX@Z endp
.text:5B8E34FA
.text:5B8E34FC
.text:5B8E34FC						       ; =============== S U B R O U T I N E =======================================
.text:5B8E34FC
.text:5B8E34FC
.text:5B8E34FC						       ; struct	IUnknown *__stdcall ATL::AtlComPtrAssign(struct	IUnknown **, struct IUnknown *)
.text:5B8E34FC						       ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z proc	near
.text:5B8E34FC											       ; CODE XREF: ATL::IViewObjectExImpl<CTrialEnd>::SetAdvise(ulong,ulong,IAdviseSink *)+17p
.text:5B8E34FC											       ; ATL::CComControlBase::IOleObject_SetClientSite(IOleClientSite *)+Cp
.text:5B8E34FC
.text:5B8E34FC						       arg_0	       = dword ptr  4
.text:5B8E34FC						       arg_4	       = dword ptr  8
.text:5B8E34FC
.text:5B8E34FC 56							       push    esi
.text:5B8E34FD 57							       push    edi
.text:5B8E34FE 8B 7C 24	10						       mov     edi, [esp+8+arg_4]
.text:5B8E3502 85 FF							       test    edi, edi
.text:5B8E3504 74 06							       jz      short loc_5B8E350C
.text:5B8E3506 8B 07							       mov     eax, [edi]
.text:5B8E3508 57							       push    edi
.text:5B8E3509 FF 50 04							       call    dword ptr [eax+4]
.text:5B8E350C
.text:5B8E350C						       loc_5B8E350C:			       ; CODE XREF: ATL::AtlComPtrAssign(IUnknown * *,IUnknown *)+8j
.text:5B8E350C 8B 74 24	0C						       mov     esi, [esp+8+arg_0]
.text:5B8E3510 8B 06							       mov     eax, [esi]
.text:5B8E3512 85 C0							       test    eax, eax
.text:5B8E3514 74 06							       jz      short loc_5B8E351C
.text:5B8E3516 8B 08							       mov     ecx, [eax]
.text:5B8E3518 50							       push    eax
.text:5B8E3519 FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E351C
.text:5B8E351C						       loc_5B8E351C:			       ; CODE XREF: ATL::AtlComPtrAssign(IUnknown * *,IUnknown *)+18j
.text:5B8E351C 89 3E							       mov     [esi], edi
.text:5B8E351E 8B C7							       mov     eax, edi
.text:5B8E3520 5F							       pop     edi
.text:5B8E3521 5E							       pop     esi
.text:5B8E3522 C2 08 00							       retn    8
.text:5B8E3522						       ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z endp
.text:5B8E3522
.text:5B8E3525
.text:5B8E3525						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3525
.text:5B8E3525
.text:5B8E3525						       ; struct	IUnknown *__stdcall ATL::AtlComQIPtrAssign(struct IUnknown **, struct IUnknown *, const	struct _GUID *)
.text:5B8E3525						       ?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z proc near
.text:5B8E3525											       ; CODE XREF: ATL::CComControlBase::DoVerbProperties(tagRECT const *,HWND__ *)+7Ep
.text:5B8E3525											       ; ATL::CComControlBase::DoVerbProperties(tagRECT	const *,HWND__ *)+A0p
.text:5B8E3525
.text:5B8E3525						       arg_0	       = dword ptr  4
.text:5B8E3525						       arg_4	       = dword ptr  8
.text:5B8E3525						       arg_8	       = dword ptr  0Ch
.text:5B8E3525
.text:5B8E3525 8B 44 24	08						       mov     eax, [esp+arg_4]
.text:5B8E3529 56							       push    esi
.text:5B8E352A 8B 74 24	08						       mov     esi, [esp+4+arg_0]
.text:5B8E352E 57							       push    edi
.text:5B8E352F 8B 3E							       mov     edi, [esi]
.text:5B8E3531 83 26 00							       and     dword ptr [esi],	0
.text:5B8E3534 85 C0							       test    eax, eax
.text:5B8E3536 74 0A							       jz      short loc_5B8E3542
.text:5B8E3538 8B 08							       mov     ecx, [eax]
.text:5B8E353A 56							       push    esi
.text:5B8E353B FF 74 24	18						       push    [esp+0Ch+arg_8]
.text:5B8E353F 50							       push    eax
.text:5B8E3540 FF 11							       call    dword ptr [ecx]
.text:5B8E3542
.text:5B8E3542						       loc_5B8E3542:			       ; CODE XREF: ATL::AtlComQIPtrAssign(IUnknown * *,IUnknown *,_GUID const &)+11j
.text:5B8E3542 85 FF							       test    edi, edi
.text:5B8E3544 74 06							       jz      short loc_5B8E354C
.text:5B8E3546 8B 07							       mov     eax, [edi]
.text:5B8E3548 57							       push    edi
.text:5B8E3549 FF 50 08							       call    dword ptr [eax+8]
.text:5B8E354C
.text:5B8E354C						       loc_5B8E354C:			       ; CODE XREF: ATL::AtlComQIPtrAssign(IUnknown * *,IUnknown *,_GUID const &)+1Fj
.text:5B8E354C 8B 06							       mov     eax, [esi]
.text:5B8E354E 5F							       pop     edi
.text:5B8E354F 5E							       pop     esi
.text:5B8E3550 C2 0C 00							       retn    0Ch
.text:5B8E3550						       ?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z endp
.text:5B8E3550
.text:5B8E3553
.text:5B8E3553						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3553
.text:5B8E3553
.text:5B8E3553						       ; __int32 __stdcall ATL::AtlModuleInit(struct ATL::_ATL_MODULE *, struct	ATL::_ATL_OBJMAP_ENTRY *, HINSTANCE)
.text:5B8E3553						       ?AtlModuleInit@ATL@@YGJPAU_ATL_MODULE@1@PAU_ATL_OBJMAP_ENTRY@1@PAUHINSTANCE__@@@Z proc near
.text:5B8E3553
.text:5B8E3553						       arg_0	       = dword ptr  4
.text:5B8E3553						       arg_4	       = dword ptr  8
.text:5B8E3553						       arg_8	       = dword ptr  0Ch
.text:5B8E3553
.text:5B8E3553 56							       push    esi
.text:5B8E3554 8B 74 24	08						       mov     esi, [esp+4+arg_0]
.text:5B8E3558 85 F6							       test    esi, esi
.text:5B8E355A 74 05							       jz      short loc_5B8E3561
.text:5B8E355C 83 3E 64							       cmp     dword ptr [esi],	64h
.text:5B8E355F 73 07							       jnb     short loc_5B8E3568
.text:5B8E3561
.text:5B8E3561						       loc_5B8E3561:			       ; CODE XREF: ATL::AtlModuleInit(ATL::_ATL_MODULE	*,ATL::_ATL_OBJMAP_ENTRY *,HINSTANCE__ *)+7j
.text:5B8E3561 B8 57 00	07 80						       mov     eax, 80070057h
.text:5B8E3566 EB 38							       jmp     short loc_5B8E35A0
.text:5B8E3568						       ; ---------------------------------------------------------------------------
.text:5B8E3568
.text:5B8E3568						       loc_5B8E3568:			       ; CODE XREF: ATL::AtlModuleInit(ATL::_ATL_MODULE	*,ATL::_ATL_OBJMAP_ENTRY *,HINSTANCE__ *)+Cj
.text:5B8E3568 8B 44 24	0C						       mov     eax, [esp+4+arg_4]
.text:5B8E356C 83 66 14	00						       and     dword ptr [esi+14h], 0
.text:5B8E3570 83 66 18	00						       and     dword ptr [esi+18h], 0
.text:5B8E3574 89 46 10							       mov     [esi+10h], eax
.text:5B8E3577 8B 44 24	10						       mov     eax, [esp+4+arg_8]
.text:5B8E357B 57							       push    edi
.text:5B8E357C 8B 3D 98	10 8E 5B					       mov     edi, ds:__imp__InitializeCriticalSection@4 ; InitializeCriticalSection(x)
.text:5B8E3582 89 46 08							       mov     [esi+8],	eax
.text:5B8E3585 89 46 0C							       mov     [esi+0Ch], eax
.text:5B8E3588 89 46 04							       mov     [esi+4],	eax
.text:5B8E358B 8D 46 1C							       lea     eax, [esi+1Ch]
.text:5B8E358E 50							       push    eax	       ; lpCriticalSection
.text:5B8E358F FF D7							       call    edi ; InitializeCriticalSection(x) ; InitializeCriticalSection(x)
.text:5B8E3591 8D 46 34							       lea     eax, [esi+34h]
.text:5B8E3594 50							       push    eax	       ; lpCriticalSection
.text:5B8E3595 FF D7							       call    edi ; InitializeCriticalSection(x) ; InitializeCriticalSection(x)
.text:5B8E3597 83 C6 4C							       add     esi, 4Ch
.text:5B8E359A 56							       push    esi	       ; lpCriticalSection
.text:5B8E359B FF D7							       call    edi ; InitializeCriticalSection(x) ; InitializeCriticalSection(x)
.text:5B8E359D 33 C0							       xor     eax, eax
.text:5B8E359F 5F							       pop     edi
.text:5B8E35A0
.text:5B8E35A0						       loc_5B8E35A0:			       ; CODE XREF: ATL::AtlModuleInit(ATL::_ATL_MODULE	*,ATL::_ATL_OBJMAP_ENTRY *,HINSTANCE__ *)+13j
.text:5B8E35A0 5E							       pop     esi
.text:5B8E35A1 C2 0C 00							       retn    0Ch
.text:5B8E35A1						       ?AtlModuleInit@ATL@@YGJPAU_ATL_MODULE@1@PAU_ATL_OBJMAP_ENTRY@1@PAUHINSTANCE__@@@Z endp
.text:5B8E35A1
.text:5B8E35A4
.text:5B8E35A4						       ; =============== S U B R O U T I N E =======================================
.text:5B8E35A4
.text:5B8E35A4						       ; Attributes: bp-based frame
.text:5B8E35A4
.text:5B8E35A4						       ; __int32 __stdcall ATL::AtlModuleGetClassObject(struct ATL::_ATL_MODULE	*, const struct	_GUID *, const struct _GUID *, void **)
.text:5B8E35A4						       ?AtlModuleGetClassObject@ATL@@YGJPAU_ATL_MODULE@1@ABU_GUID@@1PAPAX@Z proc near
.text:5B8E35A4
.text:5B8E35A4						       arg_0	       = dword ptr  8
.text:5B8E35A4						       arg_4	       = dword ptr  0Ch
.text:5B8E35A4						       arg_8	       = dword ptr  10h
.text:5B8E35A4						       arg_C	       = dword ptr  14h
.text:5B8E35A4
.text:5B8E35A4 55							       push    ebp
.text:5B8E35A5 8B EC							       mov     ebp, esp
.text:5B8E35A7 53							       push    ebx
.text:5B8E35A8 8B 5D 08							       mov     ebx, [ebp+arg_0]
.text:5B8E35AB 85 DB							       test    ebx, ebx
.text:5B8E35AD 75 0A							       jnz     short loc_5B8E35B9
.text:5B8E35AF B8 57 00	07 80						       mov     eax, 80070057h
.text:5B8E35B4 E9 88 00	00 00						       jmp     loc_5B8E3641
.text:5B8E35B9						       ; ---------------------------------------------------------------------------
.text:5B8E35B9
.text:5B8E35B9						       loc_5B8E35B9:			       ; CODE XREF: ATL::AtlModuleGetClassObject(ATL::_ATL_MODULE *,_GUID const	&,_GUID	const &,void * *)+9j
.text:5B8E35B9 83 65 08	00						       and     [ebp+arg_0], 0
.text:5B8E35BD 83 7D 14	00						       cmp     [ebp+arg_C], 0
.text:5B8E35C1 56							       push    esi
.text:5B8E35C2 8B 73 10							       mov     esi, [ebx+10h]
.text:5B8E35C5 75 16							       jnz     short loc_5B8E35DD
.text:5B8E35C7 B8 03 40	00 80						       mov     eax, 80004003h
.text:5B8E35CC EB 72							       jmp     short loc_5B8E3640
.text:5B8E35CE						       ; ---------------------------------------------------------------------------
.text:5B8E35CE
.text:5B8E35CE						       loc_5B8E35CE:			       ; CODE XREF: ATL::AtlModuleGetClassObject(ATL::_ATL_MODULE *,_GUID const	&,_GUID	const &,void * *)+3Dj
.text:5B8E35CE 8B 4D 0C							       mov     ecx, [ebp+arg_4]
.text:5B8E35D1 E8 84 F5	FF FF						       call    @InlineIsEqualGUID@8 ; InlineIsEqualGUID(x,x)
.text:5B8E35D6 85 C0							       test    eax, eax
.text:5B8E35D8 75 0B							       jnz     short loc_5B8E35E5
.text:5B8E35DA 83 C6 1C							       add     esi, 1Ch
.text:5B8E35DD
.text:5B8E35DD						       loc_5B8E35DD:			       ; CODE XREF: ATL::AtlModuleGetClassObject(ATL::_ATL_MODULE *,_GUID const	&,_GUID	const &,void * *)+21j
.text:5B8E35DD 8B 16							       mov     edx, [esi]
.text:5B8E35DF 85 D2							       test    edx, edx
.text:5B8E35E1 75 EB							       jnz     short loc_5B8E35CE
.text:5B8E35E3 EB 43							       jmp     short loc_5B8E3628
.text:5B8E35E5						       ; ---------------------------------------------------------------------------
.text:5B8E35E5
.text:5B8E35E5						       loc_5B8E35E5:			       ; CODE XREF: ATL::AtlModuleGetClassObject(ATL::_ATL_MODULE *,_GUID const	&,_GUID	const &,void * *)+34j
.text:5B8E35E5 57							       push    edi
.text:5B8E35E6 8D 7E 10							       lea     edi, [esi+10h]
.text:5B8E35E9 83 3F 00							       cmp     dword ptr [edi],	0
.text:5B8E35EC 75 25							       jnz     short loc_5B8E3613
.text:5B8E35EE 83 C3 4C							       add     ebx, 4Ch
.text:5B8E35F1 53							       push    ebx	       ; lpCriticalSection
.text:5B8E35F2 FF 15 68	10 8E 5B					       call    ds:__imp__EnterCriticalSection@4	; EnterCriticalSection(x)
.text:5B8E35F8 83 3F 00							       cmp     dword ptr [edi],	0
.text:5B8E35FB 75 0F							       jnz     short loc_5B8E360C
.text:5B8E35FD 57							       push    edi
.text:5B8E35FE 68 0C 19	8E 5B						       push    offset _IID_IUnknown
.text:5B8E3603 FF 76 0C							       push    dword ptr [esi+0Ch]
.text:5B8E3606 FF 56 08							       call    dword ptr [esi+8]
.text:5B8E3609 89 45 08							       mov     [ebp+arg_0], eax
.text:5B8E360C
.text:5B8E360C						       loc_5B8E360C:			       ; CODE XREF: ATL::AtlModuleGetClassObject(ATL::_ATL_MODULE *,_GUID const	&,_GUID	const &,void * *)+57j
.text:5B8E360C 53							       push    ebx	       ; lpCriticalSection
.text:5B8E360D FF 15 B8	10 8E 5B					       call    ds:__imp__LeaveCriticalSection@4	; LeaveCriticalSection(x)
.text:5B8E3613
.text:5B8E3613						       loc_5B8E3613:			       ; CODE XREF: ATL::AtlModuleGetClassObject(ATL::_ATL_MODULE *,_GUID const	&,_GUID	const &,void * *)+48j
.text:5B8E3613 8B 3F							       mov     edi, [edi]
.text:5B8E3615 85 FF							       test    edi, edi
.text:5B8E3617 74 0E							       jz      short loc_5B8E3627
.text:5B8E3619 FF 75 14							       push    [ebp+arg_C]
.text:5B8E361C 8B 07							       mov     eax, [edi]
.text:5B8E361E FF 75 10							       push    [ebp+arg_8]
.text:5B8E3621 57							       push    edi
.text:5B8E3622 FF 10							       call    dword ptr [eax]
.text:5B8E3624 89 45 08							       mov     [ebp+arg_0], eax
.text:5B8E3627
.text:5B8E3627						       loc_5B8E3627:			       ; CODE XREF: ATL::AtlModuleGetClassObject(ATL::_ATL_MODULE *,_GUID const	&,_GUID	const &,void * *)+73j
.text:5B8E3627 5F							       pop     edi
.text:5B8E3628
.text:5B8E3628						       loc_5B8E3628:			       ; CODE XREF: ATL::AtlModuleGetClassObject(ATL::_ATL_MODULE *,_GUID const	&,_GUID	const &,void * *)+3Fj
.text:5B8E3628 8B 45 14							       mov     eax, [ebp+arg_C]
.text:5B8E362B 83 38 00							       cmp     dword ptr [eax],	0
.text:5B8E362E 75 0D							       jnz     short loc_5B8E363D
.text:5B8E3630 83 7D 08	00						       cmp     [ebp+arg_0], 0
.text:5B8E3634 75 07							       jnz     short loc_5B8E363D
.text:5B8E3636 C7 45 08	11 01 04 80					       mov     [ebp+arg_0], 80040111h
.text:5B8E363D
.text:5B8E363D						       loc_5B8E363D:			       ; CODE XREF: ATL::AtlModuleGetClassObject(ATL::_ATL_MODULE *,_GUID const	&,_GUID	const &,void * *)+8Aj
.text:5B8E363D											       ; ATL::AtlModuleGetClassObject(ATL::_ATL_MODULE *,_GUID const &,_GUID const &,void * *)+90j
.text:5B8E363D 8B 45 08							       mov     eax, [ebp+arg_0]
.text:5B8E3640
.text:5B8E3640						       loc_5B8E3640:			       ; CODE XREF: ATL::AtlModuleGetClassObject(ATL::_ATL_MODULE *,_GUID const	&,_GUID	const &,void * *)+28j
.text:5B8E3640 5E							       pop     esi
.text:5B8E3641
.text:5B8E3641						       loc_5B8E3641:			       ; CODE XREF: ATL::AtlModuleGetClassObject(ATL::_ATL_MODULE *,_GUID const	&,_GUID	const &,void * *)+10j
.text:5B8E3641 5B							       pop     ebx
.text:5B8E3642 5D							       pop     ebp
.text:5B8E3643 C2 10 00							       retn    10h
.text:5B8E3643						       ?AtlModuleGetClassObject@ATL@@YGJPAU_ATL_MODULE@1@ABU_GUID@@1PAPAX@Z endp
.text:5B8E3643
.text:5B8E3646
.text:5B8E3646						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3646
.text:5B8E3646
.text:5B8E3646						       ; __int32 __stdcall ATL::AtlModuleTerm(struct ATL::_ATL_MODULE *)
.text:5B8E3646						       ?AtlModuleTerm@ATL@@YGJPAU_ATL_MODULE@1@@Z proc near
.text:5B8E3646
.text:5B8E3646						       arg_0	       = dword ptr  4
.text:5B8E3646
.text:5B8E3646 56							       push    esi
.text:5B8E3647 8B 74 24	08						       mov     esi, [esp+4+arg_0]
.text:5B8E364B 85 F6							       test    esi, esi
.text:5B8E364D 75 07							       jnz     short loc_5B8E3656
.text:5B8E364F B8 57 00	07 80						       mov     eax, 80070057h
.text:5B8E3654 EB 4C							       jmp     short loc_5B8E36A2
.text:5B8E3656						       ; ---------------------------------------------------------------------------
.text:5B8E3656
.text:5B8E3656						       loc_5B8E3656:			       ; CODE XREF: ATL::AtlModuleTerm(ATL::_ATL_MODULE	*)+7j
.text:5B8E3656 57							       push    edi
.text:5B8E3657 8B 7E 10							       mov     edi, [esi+10h]
.text:5B8E365A 85 FF							       test    edi, edi
.text:5B8E365C 74 1B							       jz      short loc_5B8E3679
.text:5B8E365E EB 14							       jmp     short loc_5B8E3674
.text:5B8E3660						       ; ---------------------------------------------------------------------------
.text:5B8E3660
.text:5B8E3660						       loc_5B8E3660:			       ; CODE XREF: ATL::AtlModuleTerm(ATL::_ATL_MODULE	*)+31j
.text:5B8E3660 8B 47 10							       mov     eax, [edi+10h]
.text:5B8E3663 85 C0							       test    eax, eax
.text:5B8E3665 74 06							       jz      short loc_5B8E366D
.text:5B8E3667 8B 08							       mov     ecx, [eax]
.text:5B8E3669 50							       push    eax
.text:5B8E366A FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E366D
.text:5B8E366D						       loc_5B8E366D:			       ; CODE XREF: ATL::AtlModuleTerm(ATL::_ATL_MODULE	*)+1Fj
.text:5B8E366D 83 67 10	00						       and     dword ptr [edi+10h], 0
.text:5B8E3671 83 C7 1C							       add     edi, 1Ch
.text:5B8E3674
.text:5B8E3674						       loc_5B8E3674:			       ; CODE XREF: ATL::AtlModuleTerm(ATL::_ATL_MODULE	*)+18j
.text:5B8E3674 83 3F 00							       cmp     dword ptr [edi],	0
.text:5B8E3677 75 E7							       jnz     short loc_5B8E3660
.text:5B8E3679
.text:5B8E3679						       loc_5B8E3679:			       ; CODE XREF: ATL::AtlModuleTerm(ATL::_ATL_MODULE	*)+16j
.text:5B8E3679 8B 3D 94	10 8E 5B					       mov     edi, ds:__imp__DeleteCriticalSection@4 ;	DeleteCriticalSection(x)
.text:5B8E367F 8D 46 1C							       lea     eax, [esi+1Ch]
.text:5B8E3682 50							       push    eax	       ; lpCriticalSection
.text:5B8E3683 FF D7							       call    edi ; DeleteCriticalSection(x) ;	DeleteCriticalSection(x)
.text:5B8E3685 8D 46 34							       lea     eax, [esi+34h]
.text:5B8E3688 50							       push    eax	       ; lpCriticalSection
.text:5B8E3689 FF D7							       call    edi ; DeleteCriticalSection(x) ;	DeleteCriticalSection(x)
.text:5B8E368B 8D 46 4C							       lea     eax, [esi+4Ch]
.text:5B8E368E 50							       push    eax	       ; lpCriticalSection
.text:5B8E368F FF D7							       call    edi ; DeleteCriticalSection(x) ;	DeleteCriticalSection(x)
.text:5B8E3691 8B 76 18							       mov     esi, [esi+18h]
.text:5B8E3694 85 F6							       test    esi, esi
.text:5B8E3696 5F							       pop     edi
.text:5B8E3697 74 07							       jz      short loc_5B8E36A0
.text:5B8E3699 56							       push    esi	       ; hHeap
.text:5B8E369A FF 15 A4	10 8E 5B					       call    ds:__imp__HeapDestroy@4 ; HeapDestroy(x)
.text:5B8E36A0
.text:5B8E36A0						       loc_5B8E36A0:			       ; CODE XREF: ATL::AtlModuleTerm(ATL::_ATL_MODULE	*)+51j
.text:5B8E36A0 33 C0							       xor     eax, eax
.text:5B8E36A2
.text:5B8E36A2						       loc_5B8E36A2:			       ; CODE XREF: ATL::AtlModuleTerm(ATL::_ATL_MODULE	*)+Ej
.text:5B8E36A2 5E							       pop     esi
.text:5B8E36A3 C2 04 00							       retn    4
.text:5B8E36A3						       ?AtlModuleTerm@ATL@@YGJPAU_ATL_MODULE@1@@Z endp
.text:5B8E36A3
.text:5B8E36A6
.text:5B8E36A6						       ; =============== S U B R O U T I N E =======================================
.text:5B8E36A6
.text:5B8E36A6
.text:5B8E36A6						       ; __int32 __stdcall ATL::AtlModuleUnregisterServer(struct ATL::_ATL_MODULE *, const struct _GUID	*)
.text:5B8E36A6						       ?AtlModuleUnregisterServer@ATL@@YGJPAU_ATL_MODULE@1@PBU_GUID@@@Z	proc near
.text:5B8E36A6											       ; CODE XREF: DllUnregisterServer()+7p
.text:5B8E36A6
.text:5B8E36A6						       arg_0	       = dword ptr  4
.text:5B8E36A6						       arg_4	       = dword ptr  8
.text:5B8E36A6
.text:5B8E36A6 8B 44 24	04						       mov     eax, [esp+arg_0]
.text:5B8E36AA 85 C0							       test    eax, eax
.text:5B8E36AC 75 07							       jnz     short loc_5B8E36B5
.text:5B8E36AE B8 57 00	07 80						       mov     eax, 80070057h
.text:5B8E36B3 EB 37							       jmp     short locret_5B8E36EC
.text:5B8E36B5						       ; ---------------------------------------------------------------------------
.text:5B8E36B5
.text:5B8E36B5						       loc_5B8E36B5:			       ; CODE XREF: ATL::AtlModuleUnregisterServer(ATL::_ATL_MODULE *,_GUID const *)+6j
.text:5B8E36B5 53							       push    ebx
.text:5B8E36B6 8B 58 10							       mov     ebx, [eax+10h]
.text:5B8E36B9 57							       push    edi
.text:5B8E36BA 8B 3B							       mov     edi, [ebx]
.text:5B8E36BC 85 FF							       test    edi, edi
.text:5B8E36BE 74 28							       jz      short loc_5B8E36E8
.text:5B8E36C0 56							       push    esi
.text:5B8E36C1
.text:5B8E36C1						       loc_5B8E36C1:			       ; CODE XREF: ATL::AtlModuleUnregisterServer(ATL::_ATL_MODULE *,_GUID const *)+3Fj
.text:5B8E36C1 8B 74 24	14						       mov     esi, [esp+0Ch+arg_4]
.text:5B8E36C5 85 F6							       test    esi, esi
.text:5B8E36C7 75 07							       jnz     short loc_5B8E36D0
.text:5B8E36C9 FF 53 18							       call    dword ptr [ebx+18h]
.text:5B8E36CC 85 C0							       test    eax, eax
.text:5B8E36CE EB 07							       jmp     short loc_5B8E36D7
.text:5B8E36D0						       ; ---------------------------------------------------------------------------
.text:5B8E36D0
.text:5B8E36D0						       loc_5B8E36D0:			       ; CODE XREF: ATL::AtlModuleUnregisterServer(ATL::_ATL_MODULE *,_GUID const *)+21j
.text:5B8E36D0 6A 04							       push    4
.text:5B8E36D2 59							       pop     ecx
.text:5B8E36D3 33 C0							       xor     eax, eax
.text:5B8E36D5 F3 A7							       repe cmpsd
.text:5B8E36D7
.text:5B8E36D7						       loc_5B8E36D7:			       ; CODE XREF: ATL::AtlModuleUnregisterServer(ATL::_ATL_MODULE *,_GUID const *)+28j
.text:5B8E36D7 75 05							       jnz     short loc_5B8E36DE
.text:5B8E36D9 6A 00							       push    0
.text:5B8E36DB FF 53 04							       call    dword ptr [ebx+4]
.text:5B8E36DE
.text:5B8E36DE						       loc_5B8E36DE:			       ; CODE XREF: ATL::AtlModuleUnregisterServer(ATL::_ATL_MODULE *,_GUID const *):loc_5B8E36D7j
.text:5B8E36DE 83 C3 1C							       add     ebx, 1Ch
.text:5B8E36E1 8B 3B							       mov     edi, [ebx]
.text:5B8E36E3 85 FF							       test    edi, edi
.text:5B8E36E5 75 DA							       jnz     short loc_5B8E36C1
.text:5B8E36E7 5E							       pop     esi
.text:5B8E36E8
.text:5B8E36E8						       loc_5B8E36E8:			       ; CODE XREF: ATL::AtlModuleUnregisterServer(ATL::_ATL_MODULE *,_GUID const *)+18j
.text:5B8E36E8 5F							       pop     edi
.text:5B8E36E9 33 C0							       xor     eax, eax
.text:5B8E36EB 5B							       pop     ebx
.text:5B8E36EC
.text:5B8E36EC						       locret_5B8E36EC:			       ; CODE XREF: ATL::AtlModuleUnregisterServer(ATL::_ATL_MODULE *,_GUID const *)+Dj
.text:5B8E36EC C2 08 00							       retn    8
.text:5B8E36EC						       ?AtlModuleUnregisterServer@ATL@@YGJPAU_ATL_MODULE@1@PBU_GUID@@@Z	endp
.text:5B8E36EC
.text:5B8E36EF
.text:5B8E36EF						       ; =============== S U B R O U T I N E =======================================
.text:5B8E36EF
.text:5B8E36EF						       ; Attributes: bp-based frame
.text:5B8E36EF
.text:5B8E36EF						       ; __int32 __stdcall ATL::AtlModuleRegisterTypeLib(ITypeLib *pptlib, LPCWSTR lpString2)
.text:5B8E36EF						       ?AtlModuleRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z	proc near
.text:5B8E36EF											       ; CODE XREF: ATL::AtlModuleRegisterServer(ATL::_ATL_MODULE *,int,_GUID const *)+5Ep
.text:5B8E36EF
.text:5B8E36EF						       String1	       = word ptr -424h
.text:5B8E36EF						       Filename	       = word ptr -21Ch
.text:5B8E36EF						       pptlib	       = dword ptr  8
.text:5B8E36EF						       lpString2       = dword ptr  0Ch
.text:5B8E36EF
.text:5B8E36EF 55							       push    ebp
.text:5B8E36F0 8B EC							       mov     ebp, esp
.text:5B8E36F2 81 EC 24	04 00 00					       sub     esp, 424h
.text:5B8E36F8 53							       push    ebx
.text:5B8E36F9 56							       push    esi
.text:5B8E36FA 57							       push    edi
.text:5B8E36FB 33 C0							       xor     eax, eax
.text:5B8E36FD 33 DB							       xor     ebx, ebx
.text:5B8E36FF 66 89 9D	E4 FD FF FF					       mov     [ebp+Filename], bx
.text:5B8E3706 B9 86 00	00 00						       mov     ecx, 86h
.text:5B8E370B 8D BD E6	FD FF FF					       lea     edi, [ebp+Filename+2]
.text:5B8E3711 F3 AB							       rep stosd
.text:5B8E3713 66 AB							       stosw
.text:5B8E3715 68 04 01	00 00						       push    104h	       ; nSize
.text:5B8E371A 8D 85 E4	FD FF FF					       lea     eax, [ebp+Filename]
.text:5B8E3720 50							       push    eax	       ; lpFilename
.text:5B8E3721 8B 45 08							       mov     eax, [ebp+pptlib]
.text:5B8E3724 FF 70 0C							       push    dword ptr [eax+0Ch] ; hModule
.text:5B8E3727 FF 15 9C	10 8E 5B					       call    ds:__imp__GetModuleFileNameW@12 ; GetModuleFileNameW(x,x,x)
.text:5B8E372D 39 5D 0C							       cmp     [ebp+lpString2],	ebx
.text:5B8E3730 74 10							       jz      short loc_5B8E3742
.text:5B8E3732 FF 75 0C							       push    [ebp+lpString2] ; lpString2
.text:5B8E3735 8D 85 E4	FD FF FF					       lea     eax, [ebp+Filename]
.text:5B8E373B 50							       push    eax	       ; lpString1
.text:5B8E373C FF 15 A0	10 8E 5B					       call    ds:__imp__lstrcatW@8 ; lstrcatW(x,x)
.text:5B8E3742
.text:5B8E3742						       loc_5B8E3742:			       ; CODE XREF: ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const *)+41j
.text:5B8E3742 8B 35 F0	10 8E 5B					       mov     esi, ds:__imp__LoadTypeLib@8 ; LoadTypeLib(x,x)
.text:5B8E3748 8D 45 08							       lea     eax, [ebp+pptlib]
.text:5B8E374B 50							       push    eax	       ; pptlib
.text:5B8E374C 8D 85 E4	FD FF FF					       lea     eax, [ebp+Filename]
.text:5B8E3752 50							       push    eax	       ; szFile
.text:5B8E3753 FF D6							       call    esi ; LoadTypeLib(x,x) ;	LoadTypeLib(x,x)
.text:5B8E3755 3B C3							       cmp     eax, ebx
.text:5B8E3757 8B 3D 74	10 8E 5B					       mov     edi, ds:__imp__lstrcpyW@8 ; lstrcpyW(x,x)
.text:5B8E375D 7D 4E							       jge     short loc_5B8E37AD
.text:5B8E375F 66 83 BD	E4 FD FF FF 00					       cmp     [ebp+Filename], 0
.text:5B8E3767 8D 85 E4	FD FF FF					       lea     eax, [ebp+Filename]
.text:5B8E376D 74 21							       jz      short loc_5B8E3790
.text:5B8E376F 8B 8D E4	FD FF FF					       mov     ecx, dword ptr [ebp+Filename]
.text:5B8E3775
.text:5B8E3775						       loc_5B8E3775:			       ; CODE XREF: ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const *)+9Bj
.text:5B8E3775 66 83 F9	2E						       cmp     cx, 2Eh
.text:5B8E3779 75 02							       jnz     short loc_5B8E377D
.text:5B8E377B 8B D8							       mov     ebx, eax
.text:5B8E377D
.text:5B8E377D						       loc_5B8E377D:			       ; CODE XREF: ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const *)+8Aj
.text:5B8E377D 50							       push    eax	       ; lpsz
.text:5B8E377E FF 15 50	11 8E 5B					       call    ds:__imp__CharNextW@4 ; CharNextW(x)
.text:5B8E3784 66 8B 08							       mov     cx, [eax]
.text:5B8E3787 66 85 C9							       test    cx, cx
.text:5B8E378A 75 E9							       jnz     short loc_5B8E3775
.text:5B8E378C 85 DB							       test    ebx, ebx
.text:5B8E378E 75 02							       jnz     short loc_5B8E3792
.text:5B8E3790
.text:5B8E3790						       loc_5B8E3790:			       ; CODE XREF: ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const *)+7Ej
.text:5B8E3790 8B D8							       mov     ebx, eax
.text:5B8E3792
.text:5B8E3792						       loc_5B8E3792:			       ; CODE XREF: ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const *)+9Fj
.text:5B8E3792 68 A8 18	8E 5B						       push    offset String2  ; ".tlb"
.text:5B8E3797 53							       push    ebx	       ; lpString1
.text:5B8E3798 FF D7							       call    edi ; lstrcpyW(x,x) ; lstrcpyW(x,x)
.text:5B8E379A 8D 45 08							       lea     eax, [ebp+pptlib]
.text:5B8E379D 50							       push    eax	       ; pptlib
.text:5B8E379E 8D 85 E4	FD FF FF					       lea     eax, [ebp+Filename]
.text:5B8E37A4 50							       push    eax	       ; szFile
.text:5B8E37A5 FF D6							       call    esi ; LoadTypeLib(x,x) ;	LoadTypeLib(x,x)
.text:5B8E37A7 8B F0							       mov     esi, eax
.text:5B8E37A9 85 F6							       test    esi, esi
.text:5B8E37AB 7C 77							       jl      short loc_5B8E3824
.text:5B8E37AD
.text:5B8E37AD						       loc_5B8E37AD:			       ; CODE XREF: ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const *)+6Ej
.text:5B8E37AD 8D 85 E4	FD FF FF					       lea     eax, [ebp+Filename]
.text:5B8E37B3 50							       push    eax	       ; lpString2
.text:5B8E37B4 8D 85 DC	FB FF FF					       lea     eax, [ebp+String1]
.text:5B8E37BA 50							       push    eax	       ; lpString1
.text:5B8E37BB FF D7							       call    edi ; lstrcpyW(x,x) ; lstrcpyW(x,x)
.text:5B8E37BD 33 DB							       xor     ebx, ebx
.text:5B8E37BF 66 39 9D	DC FB FF FF					       cmp     [ebp+String1], bx
.text:5B8E37C6 8D B5 DC	FB FF FF					       lea     esi, [ebp+String1]
.text:5B8E37CC 8D BD DC	FB FF FF					       lea     edi, [ebp+String1]
.text:5B8E37D2 74 25							       jz      short loc_5B8E37F9
.text:5B8E37D4
.text:5B8E37D4						       loc_5B8E37D4:			       ; CODE XREF: ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const *)+108j
.text:5B8E37D4 57							       push    edi	       ; lpsz
.text:5B8E37D5 FF 15 50	11 8E 5B					       call    ds:__imp__CharNextW@4 ; CharNextW(x)
.text:5B8E37DB 66 8B 3F							       mov     di, [edi]
.text:5B8E37DE 66 83 FF	5C						       cmp     di, 5Ch
.text:5B8E37E2 74 0C							       jz      short loc_5B8E37F0
.text:5B8E37E4 66 83 FF	2F						       cmp     di, 2Fh
.text:5B8E37E8 74 06							       jz      short loc_5B8E37F0
.text:5B8E37EA 66 83 FF	3A						       cmp     di, 3Ah
.text:5B8E37EE 75 02							       jnz     short loc_5B8E37F2
.text:5B8E37F0
.text:5B8E37F0						       loc_5B8E37F0:			       ; CODE XREF: ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const *)+F3j
.text:5B8E37F0											       ; ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE	*,ushort const *)+F9j
.text:5B8E37F0 8B F0							       mov     esi, eax
.text:5B8E37F2
.text:5B8E37F2						       loc_5B8E37F2:			       ; CODE XREF: ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const *)+FFj
.text:5B8E37F2 66 39 18							       cmp     [eax], bx
.text:5B8E37F5 8B F8							       mov     edi, eax
.text:5B8E37F7 75 DB							       jnz     short loc_5B8E37D4
.text:5B8E37F9
.text:5B8E37F9						       loc_5B8E37F9:			       ; CODE XREF: ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const *)+E3j
.text:5B8E37F9 8D 85 DC	FB FF FF					       lea     eax, [ebp+String1]
.text:5B8E37FF 2B F0							       sub     esi, eax
.text:5B8E3801 8D 85 DC	FB FF FF					       lea     eax, [ebp+String1]
.text:5B8E3807 50							       push    eax	       ; szHelpDir
.text:5B8E3808 8D 85 E4	FD FF FF					       lea     eax, [ebp+Filename]
.text:5B8E380E D1 FE							       sar     esi, 1
.text:5B8E3810 50							       push    eax	       ; szFullPath
.text:5B8E3811 66 89 9C	75 DC FB FF FF					       mov     [ebp+esi*2+String1], bx
.text:5B8E3819 FF 75 08							       push    [ebp+pptlib]    ; ptlib
.text:5B8E381C FF 15 EC	10 8E 5B					       call    ds:__imp__RegisterTypeLib@12 ; RegisterTypeLib(x,x,x)
.text:5B8E3822 8B F0							       mov     esi, eax
.text:5B8E3824
.text:5B8E3824						       loc_5B8E3824:			       ; CODE XREF: ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const *)+BCj
.text:5B8E3824 8B 45 08							       mov     eax, [ebp+pptlib]
.text:5B8E3827 85 C0							       test    eax, eax
.text:5B8E3829 74 06							       jz      short loc_5B8E3831
.text:5B8E382B 8B 08							       mov     ecx, [eax]
.text:5B8E382D 50							       push    eax
.text:5B8E382E FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E3831
.text:5B8E3831						       loc_5B8E3831:			       ; CODE XREF: ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const *)+13Aj
.text:5B8E3831 5F							       pop     edi
.text:5B8E3832 8B C6							       mov     eax, esi
.text:5B8E3834 5E							       pop     esi
.text:5B8E3835 5B							       pop     ebx
.text:5B8E3836 C9							       leave
.text:5B8E3837 C2 08 00							       retn    8
.text:5B8E3837						       ?AtlModuleRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z	endp
.text:5B8E3837
.text:5B8E383A
.text:5B8E383A						       ; =============== S U B R O U T I N E =======================================
.text:5B8E383A
.text:5B8E383A						       ; Attributes: bp-based frame
.text:5B8E383A
.text:5B8E383A						       ; __int32 __fastcall ATL::CComDispatchDriver::GetProperty(struct	IDispatch *, __int32, struct tagVARIANT	*)
.text:5B8E383A						       ?GetProperty@CComDispatchDriver@ATL@@SIJPAUIDispatch@@JPAUtagVARIANT@@@Z	proc near
.text:5B8E383A											       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::DoVerbPrimary(tagRECT const	*,HWND__ *)+2Cp
.text:5B8E383A											       ; ATL::CComControlBase::IPersistStreamInit_Save(IStream *,int,ATL::ATL_PROPMAP_ENTRY *)+9Ep
.text:5B8E383A
.text:5B8E383A						       var_10	       = dword ptr -10h
.text:5B8E383A						       var_C	       = dword ptr -0Ch
.text:5B8E383A						       var_8	       = dword ptr -8
.text:5B8E383A						       var_4	       = dword ptr -4
.text:5B8E383A						       arg_0	       = dword ptr  8
.text:5B8E383A
.text:5B8E383A 55							       push    ebp
.text:5B8E383B 8B EC							       mov     ebp, esp
.text:5B8E383D 83 EC 10							       sub     esp, 10h
.text:5B8E3840 56							       push    esi
.text:5B8E3841 8B 31							       mov     esi, [ecx]
.text:5B8E3843 33 C0							       xor     eax, eax
.text:5B8E3845 50							       push    eax
.text:5B8E3846 50							       push    eax
.text:5B8E3847 FF 75 08							       push    [ebp+arg_0]
.text:5B8E384A 89 45 F0							       mov     [ebp+var_10], eax
.text:5B8E384D 89 45 F4							       mov     [ebp+var_C], eax
.text:5B8E3850 89 45 F8							       mov     [ebp+var_8], eax
.text:5B8E3853 89 45 FC							       mov     [ebp+var_4], eax
.text:5B8E3856 8D 45 F0							       lea     eax, [ebp+var_10]
.text:5B8E3859 50							       push    eax
.text:5B8E385A 6A 02							       push    2
.text:5B8E385C 68 00 04	00 00						       push    400h
.text:5B8E3861 68 2C 1A	8E 5B						       push    offset _GUID_NULL
.text:5B8E3866 52							       push    edx
.text:5B8E3867 51							       push    ecx
.text:5B8E3868 FF 56 18							       call    dword ptr [esi+18h]
.text:5B8E386B 5E							       pop     esi
.text:5B8E386C C9							       leave
.text:5B8E386D C2 04 00							       retn    4
.text:5B8E386D						       ?GetProperty@CComDispatchDriver@ATL@@SIJPAUIDispatch@@JPAUtagVARIANT@@@Z	endp
.text:5B8E386D
.text:5B8E3870
.text:5B8E3870						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3870
.text:5B8E3870						       ; Attributes: bp-based frame
.text:5B8E3870
.text:5B8E3870						       ; __int32 __fastcall ATL::CComDispatchDriver::PutProperty(struct	IDispatch *, __int32, struct tagVARIANT	*)
.text:5B8E3870						       ?PutProperty@CComDispatchDriver@ATL@@SIJPAUIDispatch@@JPAUtagVARIANT@@@Z	proc near
.text:5B8E3870											       ; CODE XREF: ATL::CComControlBase::IPersistStreamInit_Load(IStream *,ATL::ATL_PROPMAP_ENTRY *)+B2p
.text:5B8E3870
.text:5B8E3870						       var_14	       = dword ptr -14h
.text:5B8E3870						       var_10	       = dword ptr -10h
.text:5B8E3870						       var_C	       = dword ptr -0Ch
.text:5B8E3870						       var_8	       = dword ptr -8
.text:5B8E3870						       var_4	       = dword ptr -4
.text:5B8E3870						       arg_0	       = dword ptr  8
.text:5B8E3870
.text:5B8E3870 55							       push    ebp
.text:5B8E3871 8B EC							       mov     ebp, esp
.text:5B8E3873 83 EC 14							       sub     esp, 14h
.text:5B8E3876 33 C0							       xor     eax, eax
.text:5B8E3878 40							       inc     eax
.text:5B8E3879 53							       push    ebx
.text:5B8E387A 89 45 F4							       mov     [ebp+var_C], eax
.text:5B8E387D 89 45 F8							       mov     [ebp+var_8], eax
.text:5B8E3880 8B 45 08							       mov     eax, [ebp+arg_0]
.text:5B8E3883 56							       push    esi
.text:5B8E3884 89 45 EC							       mov     [ebp+var_14], eax
.text:5B8E3887 66 8B 00							       mov     ax, [eax]
.text:5B8E388A 66 3D 0D	00						       cmp     ax, 0Dh
.text:5B8E388E 8B F1							       mov     esi, ecx
.text:5B8E3890 8D 4D 08							       lea     ecx, [ebp+arg_0]
.text:5B8E3893 57							       push    edi
.text:5B8E3894 89 55 FC							       mov     [ebp+var_4], edx
.text:5B8E3897 C7 45 08	FD FF FF FF					       mov     [ebp+arg_0], 0FFFFFFFDh
.text:5B8E389E 89 4D F0							       mov     [ebp+var_10], ecx
.text:5B8E38A1 BB 00 04	00 00						       mov     ebx, 400h
.text:5B8E38A6 BF 2C 1A	8E 5B						       mov     edi, offset _GUID_NULL
.text:5B8E38AB 74 0B							       jz      short loc_5B8E38B8
.text:5B8E38AD 66 3D 09	00						       cmp     ax, 9
.text:5B8E38B1 74 05							       jz      short loc_5B8E38B8
.text:5B8E38B3 F6 C4 60							       test    ah, 60h
.text:5B8E38B6 74 18							       jz      short loc_5B8E38D0
.text:5B8E38B8
.text:5B8E38B8						       loc_5B8E38B8:			       ; CODE XREF: ATL::CComDispatchDriver::PutProperty(IDispatch *,long,tagVARIANT *)+3Bj
.text:5B8E38B8											       ; ATL::CComDispatchDriver::PutProperty(IDispatch	*,long,tagVARIANT *)+41j
.text:5B8E38B8 8B 0E							       mov     ecx, [esi]
.text:5B8E38BA 33 C0							       xor     eax, eax
.text:5B8E38BC 50							       push    eax
.text:5B8E38BD 50							       push    eax
.text:5B8E38BE 50							       push    eax
.text:5B8E38BF 8D 45 EC							       lea     eax, [ebp+var_14]
.text:5B8E38C2 50							       push    eax
.text:5B8E38C3 6A 08							       push    8
.text:5B8E38C5 53							       push    ebx
.text:5B8E38C6 57							       push    edi
.text:5B8E38C7 52							       push    edx
.text:5B8E38C8 56							       push    esi
.text:5B8E38C9 FF 51 18							       call    dword ptr [ecx+18h]
.text:5B8E38CC 85 C0							       test    eax, eax
.text:5B8E38CE 7D 16							       jge     short loc_5B8E38E6
.text:5B8E38D0
.text:5B8E38D0						       loc_5B8E38D0:			       ; CODE XREF: ATL::CComDispatchDriver::PutProperty(IDispatch *,long,tagVARIANT *)+46j
.text:5B8E38D0 8B 0E							       mov     ecx, [esi]
.text:5B8E38D2 33 C0							       xor     eax, eax
.text:5B8E38D4 50							       push    eax
.text:5B8E38D5 50							       push    eax
.text:5B8E38D6 50							       push    eax
.text:5B8E38D7 8D 45 EC							       lea     eax, [ebp+var_14]
.text:5B8E38DA 50							       push    eax
.text:5B8E38DB 6A 04							       push    4
.text:5B8E38DD 53							       push    ebx
.text:5B8E38DE 57							       push    edi
.text:5B8E38DF FF 75 FC							       push    [ebp+var_4]
.text:5B8E38E2 56							       push    esi
.text:5B8E38E3 FF 51 18							       call    dword ptr [ecx+18h]
.text:5B8E38E6
.text:5B8E38E6						       loc_5B8E38E6:			       ; CODE XREF: ATL::CComDispatchDriver::PutProperty(IDispatch *,long,tagVARIANT *)+5Ej
.text:5B8E38E6 5F							       pop     edi
.text:5B8E38E7 5E							       pop     esi
.text:5B8E38E8 5B							       pop     ebx
.text:5B8E38E9 C9							       leave
.text:5B8E38EA C2 04 00							       retn    4
.text:5B8E38EA						       ?PutProperty@CComDispatchDriver@ATL@@SIJPAUIDispatch@@JPAUtagVARIANT@@@Z	endp
.text:5B8E38EA
.text:5B8E38ED
.text:5B8E38ED						       ; =============== S U B R O U T I N E =======================================
.text:5B8E38ED
.text:5B8E38ED						       ; Attributes: bp-based frame
.text:5B8E38ED
.text:5B8E38ED						       ; __int32 __thiscall ATL::CComControlBase::IOleInPlaceObject_SetObjectRects(ATL::CComControlBase	*this, RECT *lprcSrc1, const struct tagRECT *)
.text:5B8E38ED						       ?IOleInPlaceObject_SetObjectRects@CComControlBase@ATL@@QAEJPBUtagRECT@@0@Z proc near
.text:5B8E38ED											       ; CODE XREF: ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::SetObjectRects(tagRECT const *,tagRECT const *)+15p
.text:5B8E38ED
.text:5B8E38ED						       rcDst	       = tagRECT ptr -14h
.text:5B8E38ED						       var_4	       = dword ptr -4
.text:5B8E38ED						       lprcSrc1	       = dword ptr  8
.text:5B8E38ED						       lprcSrc2	       = dword ptr  0Ch
.text:5B8E38ED
.text:5B8E38ED 55							       push    ebp
.text:5B8E38EE 8B EC							       mov     ebp, esp
.text:5B8E38F0 83 EC 14							       sub     esp, 14h
.text:5B8E38F3 53							       push    ebx
.text:5B8E38F4 8B 5D 08							       mov     ebx, [ebp+lprcSrc1]
.text:5B8E38F7 85 DB							       test    ebx, ebx
.text:5B8E38F9 89 4D FC							       mov     [ebp+var_4], ecx
.text:5B8E38FC 0F 84 9A	00 00 00					       jz      loc_5B8E399C
.text:5B8E3902 83 7D 0C	00						       cmp     [ebp+lprcSrc2], 0
.text:5B8E3906 0F 84 90	00 00 00					       jz      loc_5B8E399C
.text:5B8E390C 8B 41 3C							       mov     eax, [ecx+3Ch]
.text:5B8E390F 56							       push    esi
.text:5B8E3910 57							       push    edi
.text:5B8E3911 8D 79 2C							       lea     edi, [ecx+2Ch]
.text:5B8E3914 8B F3							       mov     esi, ebx
.text:5B8E3916 A5							       movsd
.text:5B8E3917 A5							       movsd
.text:5B8E3918 A5							       movsd
.text:5B8E3919 A5							       movsd
.text:5B8E391A 83 38 00							       cmp     dword ptr [eax],	0
.text:5B8E391D 74 77							       jz      short loc_5B8E3996
.text:5B8E391F FF 75 0C							       push    [ebp+lprcSrc2]  ; lprcSrc2
.text:5B8E3922 8D 45 EC							       lea     eax, [ebp+rcDst]
.text:5B8E3925 53							       push    ebx	       ; lprcSrc1
.text:5B8E3926 50							       push    eax	       ; lprcDst
.text:5B8E3927 33 F6							       xor     esi, esi
.text:5B8E3929 FF 15 3C	11 8E 5B					       call    ds:__imp__IntersectRect@12 ; IntersectRect(x,x,x)
.text:5B8E392F 85 C0							       test    eax, eax
.text:5B8E3931 74 30							       jz      short loc_5B8E3963
.text:5B8E3933 53							       push    ebx	       ; lprc2
.text:5B8E3934 8D 45 EC							       lea     eax, [ebp+rcDst]
.text:5B8E3937 50							       push    eax	       ; lprc1
.text:5B8E3938 FF 15 40	11 8E 5B					       call    ds:__imp__EqualRect@8 ; EqualRect(x,x)
.text:5B8E393E 85 C0							       test    eax, eax
.text:5B8E3940 75 21							       jnz     short loc_5B8E3963
.text:5B8E3942 8B 43 04							       mov     eax, [ebx+4]
.text:5B8E3945 F7 D8							       neg     eax
.text:5B8E3947 50							       push    eax	       ; dy
.text:5B8E3948 8B 03							       mov     eax, [ebx]
.text:5B8E394A F7 D8							       neg     eax
.text:5B8E394C 50							       push    eax	       ; dx
.text:5B8E394D 8D 45 EC							       lea     eax, [ebp+rcDst]
.text:5B8E3950 50							       push    eax	       ; lprc
.text:5B8E3951 FF 15 68	11 8E 5B					       call    ds:__imp__OffsetRect@12 ; OffsetRect(x,x,x)
.text:5B8E3957 8D 45 EC							       lea     eax, [ebp+rcDst]
.text:5B8E395A 50							       push    eax	       ; lprect
.text:5B8E395B FF 15 28	10 8E 5B					       call    ds:__imp__CreateRectRgnIndirect@4 ; CreateRectRgnIndirect(x)
.text:5B8E3961 8B F0							       mov     esi, eax
.text:5B8E3963
.text:5B8E3963						       loc_5B8E3963:			       ; CODE XREF: ATL::CComControlBase::IOleInPlaceObject_SetObjectRects(tagRECT const *,tagRECT const *)+44j
.text:5B8E3963											       ; ATL::CComControlBase::IOleInPlaceObject_SetObjectRects(tagRECT	const *,tagRECT	const *)+53j
.text:5B8E3963 6A 01							       push    1	       ; bRedraw
.text:5B8E3965 56							       push    esi	       ; hRgn
.text:5B8E3966 8B 75 FC							       mov     esi, [ebp+var_4]
.text:5B8E3969 8B 46 3C							       mov     eax, [esi+3Ch]
.text:5B8E396C FF 30							       push    dword ptr [eax] ; hWnd
.text:5B8E396E FF 15 44	11 8E 5B					       call    ds:__imp__SetWindowRgn@12 ; SetWindowRgn(x,x,x)
.text:5B8E3974 8B 0B							       mov     ecx, [ebx]
.text:5B8E3976 8B 43 08							       mov     eax, [ebx+8]
.text:5B8E3979 8B 53 04							       mov     edx, [ebx+4]
.text:5B8E397C 8B 5B 0C							       mov     ebx, [ebx+0Ch]
.text:5B8E397F 6A 14							       push    14h	       ; uFlags
.text:5B8E3981 2B DA							       sub     ebx, edx
.text:5B8E3983 53							       push    ebx	       ; cy
.text:5B8E3984 2B C1							       sub     eax, ecx
.text:5B8E3986 50							       push    eax	       ; cx
.text:5B8E3987 8B 46 3C							       mov     eax, [esi+3Ch]
.text:5B8E398A 52							       push    edx	       ; Y
.text:5B8E398B 51							       push    ecx	       ; X
.text:5B8E398C 6A 00							       push    0	       ; hWndInsertAfter
.text:5B8E398E FF 30							       push    dword ptr [eax] ; hWnd
.text:5B8E3990 FF 15 48	11 8E 5B					       call    ds:__imp__SetWindowPos@28 ; SetWindowPos(x,x,x,x,x,x,x)
.text:5B8E3996
.text:5B8E3996						       loc_5B8E3996:			       ; CODE XREF: ATL::CComControlBase::IOleInPlaceObject_SetObjectRects(tagRECT const *,tagRECT const *)+30j
.text:5B8E3996 5F							       pop     edi
.text:5B8E3997 33 C0							       xor     eax, eax
.text:5B8E3999 5E							       pop     esi
.text:5B8E399A EB 05							       jmp     short loc_5B8E39A1
.text:5B8E399C						       ; ---------------------------------------------------------------------------
.text:5B8E399C
.text:5B8E399C						       loc_5B8E399C:			       ; CODE XREF: ATL::CComControlBase::IOleInPlaceObject_SetObjectRects(tagRECT const *,tagRECT const *)+Fj
.text:5B8E399C											       ; ATL::CComControlBase::IOleInPlaceObject_SetObjectRects(tagRECT	const *,tagRECT	const *)+19j
.text:5B8E399C B8 03 40	00 80						       mov     eax, 80004003h
.text:5B8E39A1
.text:5B8E39A1						       loc_5B8E39A1:			       ; CODE XREF: ATL::CComControlBase::IOleInPlaceObject_SetObjectRects(tagRECT const *,tagRECT const *)+ADj
.text:5B8E39A1 5B							       pop     ebx
.text:5B8E39A2 C9							       leave
.text:5B8E39A3 C2 08 00							       retn    8
.text:5B8E39A3						       ?IOleInPlaceObject_SetObjectRects@CComControlBase@ATL@@QAEJPBUtagRECT@@0@Z endp
.text:5B8E39A3
.text:5B8E39A6
.text:5B8E39A6						       ; =============== S U B R O U T I N E =======================================
.text:5B8E39A6
.text:5B8E39A6						       ; Attributes: bp-based frame
.text:5B8E39A6
.text:5B8E39A6						       ; __int32 __thiscall ATL::CComControlBase::IViewObject_Draw(ATL::CComControlBase	*this, unsigned	__int32, __int32, void *, struct tagDVTARGETDEVICE *, HDC, HDC,	const struct _RECTL *, const struct _RECTL *)
.text:5B8E39A6						       ?IViewObject_Draw@CComControlBase@ATL@@QAEJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@2PBU_RECTL@@3@Z proc near
.text:5B8E39A6											       ; CODE XREF: ATL::IViewObjectExImpl<CTrialEnd>::Draw(ulong,long,void *,tagDVTARGETDEVICE	*,HDC__	*,HDC__	*,_RECTL const *,_RECTL	const *,int (*)(ulong),ulong)+27p
.text:5B8E39A6
.text:5B8E39A6						       var_3C	       = dword ptr -3Ch
.text:5B8E39A6						       var_38	       = dword ptr -38h
.text:5B8E39A6						       var_34	       = dword ptr -34h
.text:5B8E39A6						       var_30	       = dword ptr -30h
.text:5B8E39A6						       var_2C	       = dword ptr -2Ch
.text:5B8E39A6						       var_28	       = dword ptr -28h
.text:5B8E39A6						       var_24	       = dword ptr -24h
.text:5B8E39A6						       var_20	       = dword ptr -20h
.text:5B8E39A6						       var_1C	       = dword ptr -1Ch
.text:5B8E39A6						       arg_0	       = dword ptr  8
.text:5B8E39A6						       arg_4	       = dword ptr  0Ch
.text:5B8E39A6						       arg_8	       = dword ptr  10h
.text:5B8E39A6						       arg_C	       = dword ptr  14h
.text:5B8E39A6						       arg_10	       = dword ptr  18h
.text:5B8E39A6						       arg_14	       = dword ptr  1Ch
.text:5B8E39A6						       arg_18	       = dword ptr  20h
.text:5B8E39A6						       arg_1C	       = dword ptr  24h
.text:5B8E39A6
.text:5B8E39A6 55							       push    ebp
.text:5B8E39A7 8B EC							       mov     ebp, esp
.text:5B8E39A9 83 EC 3C							       sub     esp, 3Ch
.text:5B8E39AC 33 D2							       xor     edx, edx
.text:5B8E39AE 39 55 20							       cmp     [ebp+arg_18], edx
.text:5B8E39B1 56							       push    esi
.text:5B8E39B2 8B F1							       mov     esi, ecx
.text:5B8E39B4 75 16							       jnz     short loc_5B8E39CC
.text:5B8E39B6 F6 46 44	02						       test    byte ptr	[esi+44h], 2
.text:5B8E39BA 75 0A							       jnz     short loc_5B8E39C6
.text:5B8E39BC B8 57 00	07 80						       mov     eax, 80070057h
.text:5B8E39C1 E9 84 00	00 00						       jmp     loc_5B8E3A4A
.text:5B8E39C6						       ; ---------------------------------------------------------------------------
.text:5B8E39C6
.text:5B8E39C6						       loc_5B8E39C6:			       ; CODE XREF: ATL::CComControlBase::IViewObject_Draw(ulong,long,void *,tagDVTARGETDEVICE *,HDC__ *,HDC__ *,_RECTL	const *,_RECTL const *)+14j
.text:5B8E39C6 8D 46 2C							       lea     eax, [esi+2Ch]
.text:5B8E39C9 89 45 20							       mov     [ebp+arg_18], eax
.text:5B8E39CC
.text:5B8E39CC						       loc_5B8E39CC:			       ; CODE XREF: ATL::CComControlBase::IViewObject_Draw(ulong,long,void *,tagDVTARGETDEVICE *,HDC__ *,HDC__ *,_RECTL	const *,_RECTL const *)+Ej
.text:5B8E39CC 8B 45 08							       mov     eax, [ebp+arg_0]
.text:5B8E39CF 48							       dec     eax
.text:5B8E39D0 6A 0F							       push    0Fh
.text:5B8E39D2 59							       pop     ecx
.text:5B8E39D3 74 10							       jz      short loc_5B8E39E5
.text:5B8E39D5 2B C1							       sub     eax, ecx
.text:5B8E39D7 74 0C							       jz      short loc_5B8E39E5
.text:5B8E39D9 83 E8 10							       sub     eax, 10h
.text:5B8E39DC 74 07							       jz      short loc_5B8E39E5
.text:5B8E39DE B8 6B 00	04 80						       mov     eax, 8004006Bh
.text:5B8E39E3 EB 65							       jmp     short loc_5B8E3A4A
.text:5B8E39E5						       ; ---------------------------------------------------------------------------
.text:5B8E39E5
.text:5B8E39E5						       loc_5B8E39E5:			       ; CODE XREF: ATL::CComControlBase::IViewObject_Draw(ulong,long,void *,tagDVTARGETDEVICE *,HDC__ *,HDC__ *,_RECTL	const *,_RECTL const *)+2Dj
.text:5B8E39E5											       ; ATL::CComControlBase::IViewObject_Draw(ulong,long,void	*,tagDVTARGETDEVICE *,HDC__ *,HDC__ *,_RECTL const *,_RECTL const *)+31j ...
.text:5B8E39E5 39 55 14							       cmp     [ebp+arg_C], edx
.text:5B8E39E8 53							       push    ebx
.text:5B8E39E9 57							       push    edi
.text:5B8E39EA 75 04							       jnz     short loc_5B8E39F0
.text:5B8E39EC 33 DB							       xor     ebx, ebx
.text:5B8E39EE EB 03							       jmp     short loc_5B8E39F3
.text:5B8E39F0						       ; ---------------------------------------------------------------------------
.text:5B8E39F0
.text:5B8E39F0						       loc_5B8E39F0:			       ; CODE XREF: ATL::CComControlBase::IViewObject_Draw(ulong,long,void *,tagDVTARGETDEVICE *,HDC__ *,HDC__ *,_RECTL	const *,_RECTL const *)+44j
.text:5B8E39F0 8B 5D 18							       mov     ebx, [ebp+arg_10]
.text:5B8E39F3
.text:5B8E39F3						       loc_5B8E39F3:			       ; CODE XREF: ATL::CComControlBase::IViewObject_Draw(ulong,long,void *,tagDVTARGETDEVICE *,HDC__ *,HDC__ *,_RECTL	const *,_RECTL const *)+48j
.text:5B8E39F3 8B 45 10							       mov     eax, [ebp+arg_8]
.text:5B8E39F6 3B C2							       cmp     eax, edx
.text:5B8E39F8 74 0B							       jz      short loc_5B8E3A05
.text:5B8E39FA 83 38 08							       cmp     dword ptr [eax],	8
.text:5B8E39FD 72 06							       jb      short loc_5B8E3A05
.text:5B8E39FF 8B 50 04							       mov     edx, [eax+4]
.text:5B8E3A02 83 E2 01							       and     edx, 1
.text:5B8E3A05
.text:5B8E3A05						       loc_5B8E3A05:			       ; CODE XREF: ATL::CComControlBase::IViewObject_Draw(ulong,long,void *,tagDVTARGETDEVICE *,HDC__ *,HDC__ *,_RECTL	const *,_RECTL const *)+52j
.text:5B8E3A05											       ; ATL::CComControlBase::IViewObject_Draw(ulong,long,void	*,tagDVTARGETDEVICE *,HDC__ *,HDC__ *,_RECTL const *,_RECTL const *)+57j
.text:5B8E3A05 33 C0							       xor     eax, eax
.text:5B8E3A07 8D 7D C4							       lea     edi, [ebp+var_3C]
.text:5B8E3A0A F3 AB							       rep stosd
.text:5B8E3A0C 8B 45 08							       mov     eax, [ebp+arg_0]
.text:5B8E3A0F 89 45 C8							       mov     [ebp+var_38], eax
.text:5B8E3A12 8B 45 0C							       mov     eax, [ebp+arg_4]
.text:5B8E3A15 89 45 CC							       mov     [ebp+var_34], eax
.text:5B8E3A18 8B 45 14							       mov     eax, [ebp+arg_C]
.text:5B8E3A1B 89 45 D0							       mov     [ebp+var_30], eax
.text:5B8E3A1E 8B 45 1C							       mov     eax, [ebp+arg_14]
.text:5B8E3A21 89 45 D8							       mov     [ebp+var_28], eax
.text:5B8E3A24 8B 45 20							       mov     eax, [ebp+arg_18]
.text:5B8E3A27 89 45 DC							       mov     [ebp+var_24], eax
.text:5B8E3A2A 8B 45 24							       mov     eax, [ebp+arg_1C]
.text:5B8E3A2D 8D 4D C4							       lea     ecx, [ebp+var_3C]
.text:5B8E3A30 89 45 E0							       mov     [ebp+var_20], eax
.text:5B8E3A33 8B 06							       mov     eax, [esi]
.text:5B8E3A35 51							       push    ecx
.text:5B8E3A36 8B CE							       mov     ecx, esi
.text:5B8E3A38 C7 45 C4	3C 00 00 00					       mov     [ebp+var_3C], 3Ch
.text:5B8E3A3F 89 5D D4							       mov     [ebp+var_2C], ebx
.text:5B8E3A42 89 55 E4							       mov     [ebp+var_1C], edx
.text:5B8E3A45 FF 50 08							       call    dword ptr [eax+8]
.text:5B8E3A48 5F							       pop     edi
.text:5B8E3A49 5B							       pop     ebx
.text:5B8E3A4A
.text:5B8E3A4A						       loc_5B8E3A4A:			       ; CODE XREF: ATL::CComControlBase::IViewObject_Draw(ulong,long,void *,tagDVTARGETDEVICE *,HDC__ *,HDC__ *,_RECTL	const *,_RECTL const *)+1Bj
.text:5B8E3A4A											       ; ATL::CComControlBase::IViewObject_Draw(ulong,long,void	*,tagDVTARGETDEVICE *,HDC__ *,HDC__ *,_RECTL const *,_RECTL const *)+3Dj
.text:5B8E3A4A 5E							       pop     esi
.text:5B8E3A4B C9							       leave
.text:5B8E3A4C C2 20 00							       retn    20h
.text:5B8E3A4C						       ?IViewObject_Draw@CComControlBase@ATL@@QAEJKJPAXPAUtagDVTARGETDEVICE@@PAUHDC__@@2PBU_RECTL@@3@Z endp
.text:5B8E3A4C
.text:5B8E3A4F
.text:5B8E3A4F						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3A4F
.text:5B8E3A4F						       ; Attributes: bp-based frame
.text:5B8E3A4F
.text:5B8E3A4F						       ; __int32 __thiscall ATL::CComControlBase::OnPaint(ATL::CComControlBase *this, unsigned int, unsigned int, __int32, int *)
.text:5B8E3A4F						       ?OnPaint@CComControlBase@ATL@@QAEJIIJAAH@Z proc near
.text:5B8E3A4F											       ; CODE XREF: CTrialEnd::ProcessWindowMessage(HWND__ *,uint,uint,long,long &,ulong)+25p
.text:5B8E3A4F
.text:5B8E3A4F						       Paint	       = tagPAINTSTRUCT	ptr -8Ch
.text:5B8E3A4F						       var_4C	       = dword ptr -4Ch
.text:5B8E3A4F						       var_48	       = dword ptr -48h
.text:5B8E3A4F						       var_44	       = dword ptr -44h
.text:5B8E3A4F						       var_38	       = dword ptr -38h
.text:5B8E3A4F						       var_34	       = dword ptr -34h
.text:5B8E3A4F						       Rect	       = tagRECT ptr -10h
.text:5B8E3A4F
.text:5B8E3A4F 55							       push    ebp
.text:5B8E3A50 8B EC							       mov     ebp, esp
.text:5B8E3A52 81 EC 8C	00 00 00					       sub     esp, 8Ch
.text:5B8E3A58 53							       push    ebx
.text:5B8E3A59 56							       push    esi
.text:5B8E3A5A 8D 85 74	FF FF FF					       lea     eax, [ebp+Paint]
.text:5B8E3A60 8B F1							       mov     esi, ecx
.text:5B8E3A62 50							       push    eax	       ; lpPaint
.text:5B8E3A63 8B 46 3C							       mov     eax, [esi+3Ch]
.text:5B8E3A66 FF 30							       push    dword ptr [eax] ; hWnd
.text:5B8E3A68 FF 15 30	11 8E 5B					       call    ds:__imp__BeginPaint@8 ;	BeginPaint(x,x)
.text:5B8E3A6E 8B D8							       mov     ebx, eax
.text:5B8E3A70 85 DB							       test    ebx, ebx
.text:5B8E3A72 74 53							       jz      short loc_5B8E3AC7
.text:5B8E3A74 57							       push    edi
.text:5B8E3A75 8D 45 F0							       lea     eax, [ebp+Rect]
.text:5B8E3A78 50							       push    eax	       ; lpRect
.text:5B8E3A79 8B 46 3C							       mov     eax, [esi+3Ch]
.text:5B8E3A7C FF 30							       push    dword ptr [eax] ; hWnd
.text:5B8E3A7E FF 15 34	11 8E 5B					       call    ds:__imp__GetClientRect@8 ; GetClientRect(x,x)
.text:5B8E3A84 6A 0F							       push    0Fh
.text:5B8E3A86 33 C0							       xor     eax, eax
.text:5B8E3A88 59							       pop     ecx
.text:5B8E3A89 8D 7D B4							       lea     edi, [ebp+var_4C]
.text:5B8E3A8C F3 AB							       rep stosd
.text:5B8E3A8E 83 4D BC	FF						       or      [ebp+var_44], 0FFFFFFFFh
.text:5B8E3A92 8D 45 F0							       lea     eax, [ebp+Rect]
.text:5B8E3A95 8D 4D B4							       lea     ecx, [ebp+var_4C]
.text:5B8E3A98 89 45 CC							       mov     [ebp+var_34], eax
.text:5B8E3A9B 8B 06							       mov     eax, [esi]
.text:5B8E3A9D 51							       push    ecx
.text:5B8E3A9E 8B CE							       mov     ecx, esi
.text:5B8E3AA0 C7 45 B4	3C 00 00 00					       mov     [ebp+var_4C], 3Ch
.text:5B8E3AA7 C7 45 B8	01 00 00 00					       mov     [ebp+var_48], 1
.text:5B8E3AAE 89 5D C8							       mov     [ebp+var_38], ebx
.text:5B8E3AB1 FF 50 08							       call    dword ptr [eax+8]
.text:5B8E3AB4 8D 85 74	FF FF FF					       lea     eax, [ebp+Paint]
.text:5B8E3ABA 50							       push    eax	       ; lpPaint
.text:5B8E3ABB 8B 46 3C							       mov     eax, [esi+3Ch]
.text:5B8E3ABE FF 30							       push    dword ptr [eax] ; hWnd
.text:5B8E3AC0 FF 15 38	11 8E 5B					       call    ds:__imp__EndPaint@8 ; EndPaint(x,x)
.text:5B8E3AC6 5F							       pop     edi
.text:5B8E3AC7
.text:5B8E3AC7						       loc_5B8E3AC7:			       ; CODE XREF: ATL::CComControlBase::OnPaint(uint,uint,long,int &)+23j
.text:5B8E3AC7 5E							       pop     esi
.text:5B8E3AC8 33 C0							       xor     eax, eax
.text:5B8E3ACA 5B							       pop     ebx
.text:5B8E3ACB C9							       leave
.text:5B8E3ACC C2 10 00							       retn    10h
.text:5B8E3ACC						       ?OnPaint@CComControlBase@ATL@@QAEJIIJAAH@Z endp
.text:5B8E3ACC
.text:5B8E3ACF
.text:5B8E3ACF						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3ACF
.text:5B8E3ACF
.text:5B8E3ACF						       ; HDC __stdcall AtlCreateTargetDC(HDC hdc, struct tagDVTARGETDEVICE *)
.text:5B8E3ACF						       ?AtlCreateTargetDC@@YGPAUHDC__@@PAU1@PAUtagDVTARGETDEVICE@@@Z proc near
.text:5B8E3ACF											       ; CODE XREF: ATL::CComControlBase::OnDrawAdvanced(ATL::ATL_DRAWINFO &)+1Dp
.text:5B8E3ACF
.text:5B8E3ACF						       hdc	       = dword ptr  4
.text:5B8E3ACF						       arg_4	       = dword ptr  8
.text:5B8E3ACF
.text:5B8E3ACF 8B 44 24	08						       mov     eax, [esp+arg_4]
.text:5B8E3AD3 57							       push    edi
.text:5B8E3AD4 33 FF							       xor     edi, edi
.text:5B8E3AD6 3B C7							       cmp     eax, edi
.text:5B8E3AD8 74 2E							       jz      short loc_5B8E3B08
.text:5B8E3ADA 66 8B 48	0A						       mov     cx, [eax+0Ah]
.text:5B8E3ADE 66 3B CF							       cmp     cx, di
.text:5B8E3AE1 74 05							       jz      short loc_5B8E3AE8
.text:5B8E3AE3 0F B7 F9							       movzx   edi, cx
.text:5B8E3AE6 03 F8							       add     edi, eax
.text:5B8E3AE8
.text:5B8E3AE8						       loc_5B8E3AE8:			       ; CODE XREF: AtlCreateTargetDC(HDC__ *,tagDVTARGETDEVICE	*)+12j
.text:5B8E3AE8 0F B7 50	06						       movzx   edx, word ptr [eax+6]
.text:5B8E3AEC 0F B7 48	04						       movzx   ecx, word ptr [eax+4]
.text:5B8E3AF0 56							       push    esi
.text:5B8E3AF1 0F B7 70	08						       movzx   esi, word ptr [eax+8]
.text:5B8E3AF5 57							       push    edi	       ; pdm
.text:5B8E3AF6 03 F0							       add     esi, eax
.text:5B8E3AF8 56							       push    esi	       ; pszPort
.text:5B8E3AF9 03 D0							       add     edx, eax
.text:5B8E3AFB 03 C8							       add     ecx, eax
.text:5B8E3AFD 52							       push    edx	       ; pwszDevice
.text:5B8E3AFE 51							       push    ecx	       ; pwszDriver
.text:5B8E3AFF FF 15 2C	10 8E 5B					       call    ds:__imp__CreateDCW@16 ;	CreateDCW(x,x,x,x)
.text:5B8E3B05 5E							       pop     esi
.text:5B8E3B06 EB 2B							       jmp     short loc_5B8E3B33
.text:5B8E3B08						       ; ---------------------------------------------------------------------------
.text:5B8E3B08
.text:5B8E3B08						       loc_5B8E3B08:			       ; CODE XREF: AtlCreateTargetDC(HDC__ *,tagDVTARGETDEVICE	*)+9j
.text:5B8E3B08 39 7C 24	08						       cmp     [esp+4+hdc], edi
.text:5B8E3B0C 74 17							       jz      short loc_5B8E3B25
.text:5B8E3B0E 6A 02							       push    2	       ; index
.text:5B8E3B10 FF 74 24	0C						       push    [esp+8+hdc]     ; hdc
.text:5B8E3B14 FF 15 4C	10 8E 5B					       call    ds:__imp__GetDeviceCaps@8 ; GetDeviceCaps(x,x)
.text:5B8E3B1A 83 F8 05							       cmp     eax, 5
.text:5B8E3B1D 74 06							       jz      short loc_5B8E3B25
.text:5B8E3B1F 8B 44 24	08						       mov     eax, [esp+4+hdc]
.text:5B8E3B23 EB 0E							       jmp     short loc_5B8E3B33
.text:5B8E3B25						       ; ---------------------------------------------------------------------------
.text:5B8E3B25
.text:5B8E3B25						       loc_5B8E3B25:			       ; CODE XREF: AtlCreateTargetDC(HDC__ *,tagDVTARGETDEVICE	*)+3Dj
.text:5B8E3B25											       ; AtlCreateTargetDC(HDC__ *,tagDVTARGETDEVICE *)+4Ej
.text:5B8E3B25 57							       push    edi	       ; pdm
.text:5B8E3B26 57							       push    edi	       ; pszPort
.text:5B8E3B27 57							       push    edi	       ; pwszDevice
.text:5B8E3B28 68 B4 18	8E 5B						       push    offset pwszDriver ; "DISPLAY"
.text:5B8E3B2D FF 15 2C	10 8E 5B					       call    ds:__imp__CreateDCW@16 ;	CreateDCW(x,x,x,x)
.text:5B8E3B33
.text:5B8E3B33						       loc_5B8E3B33:			       ; CODE XREF: AtlCreateTargetDC(HDC__ *,tagDVTARGETDEVICE	*)+37j
.text:5B8E3B33											       ; AtlCreateTargetDC(HDC__ *,tagDVTARGETDEVICE *)+54j
.text:5B8E3B33 5F							       pop     edi
.text:5B8E3B34 C2 08 00							       retn    8
.text:5B8E3B34						       ?AtlCreateTargetDC@@YGPAUHDC__@@PAU1@PAUtagDVTARGETDEVICE@@@Z endp
.text:5B8E3B34
.text:5B8E3B37
.text:5B8E3B37						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3B37
.text:5B8E3B37						       ; Attributes: bp-based frame
.text:5B8E3B37
.text:5B8E3B37						       ; void __stdcall	AtlHiMetricToPixel(const struct	tagSIZE	*, struct tagSIZE *)
.text:5B8E3B37						       ?AtlHiMetricToPixel@@YGXPBUtagSIZE@@PAU1@@Z proc	near
.text:5B8E3B37											       ; CODE XREF: ATL::CComControlBase::GetZoomInfo(ATL::ATL_DRAWINFO	&)+36p
.text:5B8E3B37
.text:5B8E3B37						       var_4	       = dword ptr -4
.text:5B8E3B37						       arg_0	       = dword ptr  8
.text:5B8E3B37						       arg_4	       = dword ptr  0Ch
.text:5B8E3B37
.text:5B8E3B37 55							       push    ebp
.text:5B8E3B38 8B EC							       mov     ebp, esp
.text:5B8E3B3A 51							       push    ecx
.text:5B8E3B3B 53							       push    ebx
.text:5B8E3B3C 56							       push    esi
.text:5B8E3B3D 57							       push    edi
.text:5B8E3B3E 6A 00							       push    0	       ; hWnd
.text:5B8E3B40 FF 15 28	11 8E 5B					       call    ds:__imp__GetDC@4 ; GetDC(x)
.text:5B8E3B46 8B F8							       mov     edi, eax
.text:5B8E3B48 85 FF							       test    edi, edi
.text:5B8E3B4A 74 20							       jz      short loc_5B8E3B6C
.text:5B8E3B4C 8B 35 4C	10 8E 5B					       mov     esi, ds:__imp__GetDeviceCaps@8 ;	GetDeviceCaps(x,x)
.text:5B8E3B52 6A 58							       push    58h	       ; index
.text:5B8E3B54 57							       push    edi	       ; hdc
.text:5B8E3B55 FF D6							       call    esi ; GetDeviceCaps(x,x)	; GetDeviceCaps(x,x)
.text:5B8E3B57 6A 5A							       push    5Ah	       ; index
.text:5B8E3B59 57							       push    edi	       ; hdc
.text:5B8E3B5A 8B D8							       mov     ebx, eax
.text:5B8E3B5C FF D6							       call    esi ; GetDeviceCaps(x,x)	; GetDeviceCaps(x,x)
.text:5B8E3B5E 57							       push    edi	       ; hDC
.text:5B8E3B5F 6A 00							       push    0	       ; hWnd
.text:5B8E3B61 89 45 FC							       mov     [ebp+var_4], eax
.text:5B8E3B64 FF 15 2C	11 8E 5B					       call    ds:__imp__ReleaseDC@8 ; ReleaseDC(x,x)
.text:5B8E3B6A EB 06							       jmp     short loc_5B8E3B72
.text:5B8E3B6C						       ; ---------------------------------------------------------------------------
.text:5B8E3B6C
.text:5B8E3B6C						       loc_5B8E3B6C:			       ; CODE XREF: AtlHiMetricToPixel(tagSIZE const *,tagSIZE *)+13j
.text:5B8E3B6C 33 DB							       xor     ebx, ebx
.text:5B8E3B6E 43							       inc     ebx
.text:5B8E3B6F 89 5D FC							       mov     [ebp+var_4], ebx
.text:5B8E3B72
.text:5B8E3B72						       loc_5B8E3B72:			       ; CODE XREF: AtlHiMetricToPixel(tagSIZE const *,tagSIZE *)+33j
.text:5B8E3B72 8B 75 08							       mov     esi, [ebp+arg_0]
.text:5B8E3B75 8B 06							       mov     eax, [esi]
.text:5B8E3B77 0F AF C3							       imul    eax, ebx
.text:5B8E3B7A B9 F6 04	00 00						       mov     ecx, 4F6h
.text:5B8E3B7F 03 C1							       add     eax, ecx
.text:5B8E3B81 99							       cdq
.text:5B8E3B82 BB EC 09	00 00						       mov     ebx, 9ECh
.text:5B8E3B87 8B FB							       mov     edi, ebx
.text:5B8E3B89 F7 FF							       idiv    edi
.text:5B8E3B8B 8B 7D 0C							       mov     edi, [ebp+arg_4]
.text:5B8E3B8E 89 07							       mov     [edi], eax
.text:5B8E3B90 8B 46 04							       mov     eax, [esi+4]
.text:5B8E3B93 0F AF 45	FC						       imul    eax, [ebp+var_4]
.text:5B8E3B97 03 C1							       add     eax, ecx
.text:5B8E3B99 99							       cdq
.text:5B8E3B9A F7 FB							       idiv    ebx
.text:5B8E3B9C 89 47 04							       mov     [edi+4],	eax
.text:5B8E3B9F 5F							       pop     edi
.text:5B8E3BA0 5E							       pop     esi
.text:5B8E3BA1 5B							       pop     ebx
.text:5B8E3BA2 C9							       leave
.text:5B8E3BA3 C2 08 00							       retn    8
.text:5B8E3BA3						       ?AtlHiMetricToPixel@@YGXPBUtagSIZE@@PAU1@@Z endp
.text:5B8E3BA3
.text:5B8E3BA6
.text:5B8E3BA6						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3BA6
.text:5B8E3BA6						       ; Attributes: bp-based frame
.text:5B8E3BA6
.text:5B8E3BA6						       ; unsigned __int16 __thiscall ATL::CWndClassInfo::Register(WNDCLASSEXW *this, __int32 (__stdcall	**)(HWND, unsigned int,	unsigned int, __int32))
.text:5B8E3BA6						       ?Register@CWndClassInfo@ATL@@QAEGPAP6GJPAUHWND__@@IIJ@Z@Z proc near
.text:5B8E3BA6											       ; CODE XREF: ATL::CComControl<CTrialEnd>::CreateControlWindow(HWND__ *,tagRECT &)+Dp
.text:5B8E3BA6
.text:5B8E3BA6						       var_6C	       = tagWNDCLASSEXW	ptr -6Ch
.text:5B8E3BA6						       wcx	       = tagWNDCLASSEXW	ptr -3Ch
.text:5B8E3BA6						       var_C	       = dword ptr -0Ch
.text:5B8E3BA6						       var_8	       = dword ptr -8
.text:5B8E3BA6						       var_4	       = dword ptr -4
.text:5B8E3BA6						       arg_0	       = dword ptr  8
.text:5B8E3BA6
.text:5B8E3BA6 55							       push    ebp
.text:5B8E3BA7 8B EC							       mov     ebp, esp
.text:5B8E3BA9 83 EC 6C							       sub     esp, 6Ch
.text:5B8E3BAC 53							       push    ebx
.text:5B8E3BAD 8B D9							       mov     ebx, ecx
.text:5B8E3BAF 66 83 7B	40 00						       cmp     word ptr	[ebx+40h], 0
.text:5B8E3BB4 56							       push    esi
.text:5B8E3BB5 57							       push    edi
.text:5B8E3BB6 0F 85 EF	00 00 00					       jnz     loc_5B8E3CAB
.text:5B8E3BBC BF 0C 71	8E 5B						       mov     edi, offset stru_5B8E710C
.text:5B8E3BC1 57							       push    edi	       ; lpCriticalSection
.text:5B8E3BC2 FF 15 68	10 8E 5B					       call    ds:__imp__EnterCriticalSection@4	; EnterCriticalSection(x)
.text:5B8E3BC8 66 83 7B	40 00						       cmp     word ptr	[ebx+40h], 0
.text:5B8E3BCD 0F 85 CD	00 00 00					       jnz     loc_5B8E3CA0
.text:5B8E3BD3 8B 43 30							       mov     eax, [ebx+30h]
.text:5B8E3BD6 85 C0							       test    eax, eax
.text:5B8E3BD8 8B 35 DC	70 8E 5B					       mov     esi, hInstance
.text:5B8E3BDE 89 75 F4							       mov     [ebp+var_C], esi
.text:5B8E3BE1 74 54							       jz      short loc_5B8E3C37
.text:5B8E3BE3 8B 4B 28							       mov     ecx, [ebx+28h]
.text:5B8E3BE6 89 4D FC							       mov     [ebp+var_4], ecx
.text:5B8E3BE9 8B 4B 08							       mov     ecx, [ebx+8]
.text:5B8E3BEC 89 4D F8							       mov     [ebp+var_8], ecx
.text:5B8E3BEF 8D 4D C4							       lea     ecx, [ebp+wcx]
.text:5B8E3BF2 51							       push    ecx	       ; lpwcx
.text:5B8E3BF3 50							       push    eax	       ; lpszClass
.text:5B8E3BF4 6A 00							       push    0	       ; hInstance
.text:5B8E3BF6 C7 45 C4	30 00 00 00					       mov     [ebp+wcx.cbSize], 30h
.text:5B8E3BFD FF 15 10	11 8E 5B					       call    ds:__imp__GetClassInfoExW@12 ; GetClassInfoExW(x,x,x)
.text:5B8E3C03 85 C0							       test    eax, eax
.text:5B8E3C05 75 0F							       jnz     short loc_5B8E3C16
.text:5B8E3C07 57							       push    edi	       ; lpCriticalSection
.text:5B8E3C08 FF 15 B8	10 8E 5B					       call    ds:__imp__LeaveCriticalSection@4	; LeaveCriticalSection(x)
.text:5B8E3C0E 66 33 C0							       xor     ax, ax
.text:5B8E3C11 E9 A7 00	00 00						       jmp     loc_5B8E3CBD
.text:5B8E3C16						       ; ---------------------------------------------------------------------------
.text:5B8E3C16
.text:5B8E3C16						       loc_5B8E3C16:			       ; CODE XREF: ATL::CWndClassInfo::Register(long (**)(HWND__ *,uint,uint,long))+5Fj
.text:5B8E3C16 6A 0C							       push    0Ch
.text:5B8E3C18 59							       pop     ecx
.text:5B8E3C19 8D 75 C4							       lea     esi, [ebp+wcx]
.text:5B8E3C1C 8B FB							       mov     edi, ebx
.text:5B8E3C1E F3 A5							       rep movsd
.text:5B8E3C20 8B 43 08							       mov     eax, [ebx+8]
.text:5B8E3C23 8B 75 F4							       mov     esi, [ebp+var_C]
.text:5B8E3C26 89 43 34							       mov     [ebx+34h], eax
.text:5B8E3C29 8B 45 FC							       mov     eax, [ebp+var_4]
.text:5B8E3C2C 89 43 28							       mov     [ebx+28h], eax
.text:5B8E3C2F 8B 45 F8							       mov     eax, [ebp+var_8]
.text:5B8E3C32 89 43 08							       mov     [ebx+8],	eax
.text:5B8E3C35 EB 18							       jmp     short loc_5B8E3C4F
.text:5B8E3C37						       ; ---------------------------------------------------------------------------
.text:5B8E3C37
.text:5B8E3C37						       loc_5B8E3C37:			       ; CODE XREF: ATL::CWndClassInfo::Register(long (**)(HWND__ *,uint,uint,long))+3Bj
.text:5B8E3C37 8B 43 3C							       mov     eax, [ebx+3Ch]
.text:5B8E3C3A FF 73 38							       push    dword ptr [ebx+38h] ; lpCursorName
.text:5B8E3C3D F7 D8							       neg     eax
.text:5B8E3C3F 1B C0							       sbb     eax, eax
.text:5B8E3C41 F7 D0							       not     eax
.text:5B8E3C43 23 C6							       and     eax, esi
.text:5B8E3C45 50							       push    eax	       ; hInstance
.text:5B8E3C46 FF 15 14	11 8E 5B					       call    ds:__imp__LoadCursorW@8 ; LoadCursorW(x,x)
.text:5B8E3C4C 89 43 1C							       mov     [ebx+1Ch], eax
.text:5B8E3C4F
.text:5B8E3C4F						       loc_5B8E3C4F:			       ; CODE XREF: ATL::CWndClassInfo::Register(long (**)(HWND__ *,uint,uint,long))+8Fj
.text:5B8E3C4F 80 63 05	BF						       and     byte ptr	[ebx+5], 0BFh
.text:5B8E3C53 83 7B 28	00						       cmp     dword ptr [ebx+28h], 0
.text:5B8E3C57 89 73 14							       mov     [ebx+14h], esi
.text:5B8E3C5A 75 16							       jnz     short loc_5B8E3C72
.text:5B8E3C5C 53							       push    ebx
.text:5B8E3C5D 8D 73 42							       lea     esi, [ebx+42h]
.text:5B8E3C60 68 C4 18	8E 5B						       push    offset aAtl8_8x ; "ATL:%8.8X"
.text:5B8E3C65 56							       push    esi	       ; LPWSTR
.text:5B8E3C66 FF 15 18	11 8E 5B					       call    ds:__imp__wsprintfW
.text:5B8E3C6C 83 C4 0C							       add     esp, 0Ch
.text:5B8E3C6F 89 73 28							       mov     [ebx+28h], esi
.text:5B8E3C72
.text:5B8E3C72						       loc_5B8E3C72:			       ; CODE XREF: ATL::CWndClassInfo::Register(long (**)(HWND__ *,uint,uint,long))+B4j
.text:5B8E3C72 6A 0C							       push    0Ch
.text:5B8E3C74 59							       pop     ecx
.text:5B8E3C75 8D 45 94							       lea     eax, [ebp+var_6C]
.text:5B8E3C78 50							       push    eax	       ; lpwcx
.text:5B8E3C79 FF 73 28							       push    dword ptr [ebx+28h] ; lpszClass
.text:5B8E3C7C 8B F3							       mov     esi, ebx
.text:5B8E3C7E FF 73 14							       push    dword ptr [ebx+14h] ; hInstance
.text:5B8E3C81 8D 7D 94							       lea     edi, [ebp+var_6C]
.text:5B8E3C84 F3 A5							       rep movsd
.text:5B8E3C86 FF 15 10	11 8E 5B					       call    ds:__imp__GetClassInfoExW@12 ; GetClassInfoExW(x,x,x)
.text:5B8E3C8C 66 85 C0							       test    ax, ax
.text:5B8E3C8F 66 89 43	40						       mov     [ebx+40h], ax
.text:5B8E3C93 75 0B							       jnz     short loc_5B8E3CA0
.text:5B8E3C95 53							       push    ebx	       ; WNDCLASSEXW *
.text:5B8E3C96 FF 15 1C	11 8E 5B					       call    ds:__imp__RegisterClassExW@4 ; RegisterClassExW(x)
.text:5B8E3C9C 66 89 43	40						       mov     [ebx+40h], ax
.text:5B8E3CA0
.text:5B8E3CA0						       loc_5B8E3CA0:			       ; CODE XREF: ATL::CWndClassInfo::Register(long (**)(HWND__ *,uint,uint,long))+27j
.text:5B8E3CA0											       ; ATL::CWndClassInfo::Register(long (**)(HWND__ *,uint,uint,long))+EDj
.text:5B8E3CA0 68 0C 71	8E 5B						       push    offset stru_5B8E710C ; lpCriticalSection
.text:5B8E3CA5 FF 15 B8	10 8E 5B					       call    ds:__imp__LeaveCriticalSection@4	; LeaveCriticalSection(x)
.text:5B8E3CAB
.text:5B8E3CAB						       loc_5B8E3CAB:			       ; CODE XREF: ATL::CWndClassInfo::Register(long (**)(HWND__ *,uint,uint,long))+10j
.text:5B8E3CAB 83 7B 30	00						       cmp     dword ptr [ebx+30h], 0
.text:5B8E3CAF 74 08							       jz      short loc_5B8E3CB9
.text:5B8E3CB1 8B 43 34							       mov     eax, [ebx+34h]
.text:5B8E3CB4 8B 4D 08							       mov     ecx, [ebp+arg_0]
.text:5B8E3CB7 89 01							       mov     [ecx], eax
.text:5B8E3CB9
.text:5B8E3CB9						       loc_5B8E3CB9:			       ; CODE XREF: ATL::CWndClassInfo::Register(long (**)(HWND__ *,uint,uint,long))+109j
.text:5B8E3CB9 66 8B 43	40						       mov     ax, [ebx+40h]
.text:5B8E3CBD
.text:5B8E3CBD						       loc_5B8E3CBD:			       ; CODE XREF: ATL::CWndClassInfo::Register(long (**)(HWND__ *,uint,uint,long))+6Bj
.text:5B8E3CBD 5F							       pop     edi
.text:5B8E3CBE 5E							       pop     esi
.text:5B8E3CBF 5B							       pop     ebx
.text:5B8E3CC0 C9							       leave
.text:5B8E3CC1 C2 04 00							       retn    4
.text:5B8E3CC1						       ?Register@CWndClassInfo@ATL@@QAEGPAP6GJPAUHWND__@@IIJ@Z@Z endp
.text:5B8E3CC1
.text:5B8E3CC4
.text:5B8E3CC4						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3CC4
.text:5B8E3CC4						       ; Attributes: bp-based frame
.text:5B8E3CC4
.text:5B8E3CC4						       ; __int32 __stdcall ATL::CWindowImplBase::WindowProc(HWND, UINT Msg, WPARAM wParam, __int32)
.text:5B8E3CC4						       ?WindowProc@CWindowImplBase@ATL@@SGJPAUHWND__@@IIJ@Z proc near
.text:5B8E3CC4											       ; DATA XREF: ATL::CWindowImplBase::StartWindowProc(HWND__ *,uint,uint,long)+14o
.text:5B8E3CC4
.text:5B8E3CC4						       arg_0	       = dword ptr  8
.text:5B8E3CC4						       Msg	       = dword ptr  0Ch
.text:5B8E3CC4						       wParam	       = dword ptr  10h
.text:5B8E3CC4						       arg_C	       = dword ptr  14h
.text:5B8E3CC4
.text:5B8E3CC4 55							       push    ebp
.text:5B8E3CC5 8B EC							       mov     ebp, esp
.text:5B8E3CC7 56							       push    esi
.text:5B8E3CC8 8B 75 08							       mov     esi, [ebp+arg_0]
.text:5B8E3CCB 8B 06							       mov     eax, [esi]
.text:5B8E3CCD 6A 00							       push    0
.text:5B8E3CCF 8D 4D 08							       lea     ecx, [ebp+arg_0]
.text:5B8E3CD2 51							       push    ecx
.text:5B8E3CD3 FF 75 14							       push    [ebp+arg_C]
.text:5B8E3CD6 8B CE							       mov     ecx, esi
.text:5B8E3CD8 FF 75 10							       push    [ebp+wParam]
.text:5B8E3CDB FF 75 0C							       push    [ebp+Msg]
.text:5B8E3CDE FF 76 04							       push    dword ptr [esi+4]
.text:5B8E3CE1 FF 10							       call    dword ptr [eax]
.text:5B8E3CE3 81 7D 0C	82 00 00 00					       cmp     [ebp+Msg], 82h
.text:5B8E3CEA 75 08							       jnz     short loc_5B8E3CF4
.text:5B8E3CEC 83 66 04	00						       and     dword ptr [esi+4], 0
.text:5B8E3CF0 33 C0							       xor     eax, eax
.text:5B8E3CF2 EB 19							       jmp     short loc_5B8E3D0D
.text:5B8E3CF4						       ; ---------------------------------------------------------------------------
.text:5B8E3CF4
.text:5B8E3CF4						       loc_5B8E3CF4:			       ; CODE XREF: ATL::CWindowImplBase::WindowProc(HWND__ *,uint,uint,long)+26j
.text:5B8E3CF4 85 C0							       test    eax, eax
.text:5B8E3CF6 74 05							       jz      short loc_5B8E3CFD
.text:5B8E3CF8 8B 45 08							       mov     eax, [ebp+arg_0]
.text:5B8E3CFB EB 10							       jmp     short loc_5B8E3D0D
.text:5B8E3CFD						       ; ---------------------------------------------------------------------------
.text:5B8E3CFD
.text:5B8E3CFD						       loc_5B8E3CFD:			       ; CODE XREF: ATL::CWindowImplBase::WindowProc(HWND__ *,uint,uint,long)+32j
.text:5B8E3CFD FF 75 14							       push    [ebp+arg_C]     ; __int32
.text:5B8E3D00 8B CE							       mov     ecx, esi	       ; this
.text:5B8E3D02 FF 75 10							       push    [ebp+wParam]    ; wParam
.text:5B8E3D05 FF 75 0C							       push    [ebp+Msg]       ; Msg
.text:5B8E3D08 E8 03 F7	FF FF						       call    ?DefWindowProcW@CWindowImplBase@ATL@@QAEJIIJ@Z ;	ATL::CWindowImplBase::DefWindowProcW(uint,uint,long)
.text:5B8E3D0D
.text:5B8E3D0D						       loc_5B8E3D0D:			       ; CODE XREF: ATL::CWindowImplBase::WindowProc(HWND__ *,uint,uint,long)+2Ej
.text:5B8E3D0D											       ; ATL::CWindowImplBase::WindowProc(HWND__ *,uint,uint,long)+37j
.text:5B8E3D0D 5E							       pop     esi
.text:5B8E3D0E 5D							       pop     ebp
.text:5B8E3D0F C2 10 00							       retn    10h
.text:5B8E3D0F						       ?WindowProc@CWindowImplBase@ATL@@SGJPAUHWND__@@IIJ@Z endp
.text:5B8E3D0F
.text:5B8E3D12
.text:5B8E3D12						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3D12
.text:5B8E3D12						       ; Attributes: bp-based frame
.text:5B8E3D12
.text:5B8E3D12						       ; HWND __thiscall ATL::CWindowImplBase::Create(ATL::CWindowImplBase *this, HWND hWndParent, struct tagRECT *, LPCWSTR lpWindowName, unsigned __int32, DWORD dwExStyle, HMENU hMenu, unsigned __int16)
.text:5B8E3D12						       ?Create@CWindowImplBase@ATL@@QAEPAUHWND__@@PAU3@AAUtagRECT@@PBGKKIG@Z proc near
.text:5B8E3D12											       ; CODE XREF: ATL::CComControl<CTrialEnd>::CreateControlWindow(HWND__ *,tagRECT &)+27p
.text:5B8E3D12
.text:5B8E3D12						       hWndParent      = dword ptr  8
.text:5B8E3D12						       arg_4	       = dword ptr  0Ch
.text:5B8E3D12						       lpWindowName    = dword ptr  10h
.text:5B8E3D12						       arg_F	       = byte ptr  17h
.text:5B8E3D12						       dwExStyle       = dword ptr  18h
.text:5B8E3D12						       hMenu	       = dword ptr  1Ch
.text:5B8E3D12						       arg_18	       = word ptr  20h
.text:5B8E3D12
.text:5B8E3D12 55							       push    ebp
.text:5B8E3D13 8B EC							       mov     ebp, esp
.text:5B8E3D15 66 83 7D	20 00						       cmp     [ebp+arg_18], 0
.text:5B8E3D1A 56							       push    esi
.text:5B8E3D1B 8B F1							       mov     esi, ecx
.text:5B8E3D1D 75 04							       jnz     short loc_5B8E3D23
.text:5B8E3D1F 33 C0							       xor     eax, eax
.text:5B8E3D21 EB 56							       jmp     short loc_5B8E3D79
.text:5B8E3D23						       ; ---------------------------------------------------------------------------
.text:5B8E3D23
.text:5B8E3D23						       loc_5B8E3D23:			       ; CODE XREF: ATL::CWindowImplBase::Create(HWND__	*,tagRECT &,ushort const *,ulong,ulong,uint,ushort)+Bj
.text:5B8E3D23 56							       push    esi	       ; void *
.text:5B8E3D24 8D 46 08							       lea     eax, [esi+8]
.text:5B8E3D27 50							       push    eax	       ; struct	ATL::_AtlCreateWndData *
.text:5B8E3D28 B9 D8 70	8E 5B						       mov     ecx, offset ?_Module@@3VCComModule@ATL@@A ; this
.text:5B8E3D2D E8 17 F5	FF FF						       call    ?AddCreateWndData@CComModule@ATL@@QAEXPAU_AtlCreateWndData@2@PAX@Z ; ATL::CComModule::AddCreateWndData(ATL::_AtlCreateWndData *,void *)
.text:5B8E3D32 83 7D 1C	00						       cmp     [ebp+hMenu], 0
.text:5B8E3D36 75 09							       jnz     short loc_5B8E3D41
.text:5B8E3D38 F6 45 17	40						       test    [ebp+arg_F], 40h
.text:5B8E3D3C 74 03							       jz      short loc_5B8E3D41
.text:5B8E3D3E 89 75 1C							       mov     [ebp+hMenu], esi
.text:5B8E3D41
.text:5B8E3D41						       loc_5B8E3D41:			       ; CODE XREF: ATL::CWindowImplBase::Create(HWND__	*,tagRECT &,ushort const *,ulong,ulong,uint,ushort)+24j
.text:5B8E3D41											       ; ATL::CWindowImplBase::Create(HWND__ *,tagRECT &,ushort	const *,ulong,ulong,uint,ushort)+2Aj
.text:5B8E3D41 8B 45 0C							       mov     eax, [ebp+arg_4]
.text:5B8E3D44 8B 48 04							       mov     ecx, [eax+4]
.text:5B8E3D47 8B 70 0C							       mov     esi, [eax+0Ch]
.text:5B8E3D4A 8B 10							       mov     edx, [eax]
.text:5B8E3D4C 8B 40 08							       mov     eax, [eax+8]
.text:5B8E3D4F 6A 00							       push    0	       ; lpParam
.text:5B8E3D51 FF 35 DC	70 8E 5B					       push    hInstance       ; hInstance
.text:5B8E3D57 2B F1							       sub     esi, ecx
.text:5B8E3D59 FF 75 1C							       push    [ebp+hMenu]     ; hMenu
.text:5B8E3D5C 2B C2							       sub     eax, edx
.text:5B8E3D5E FF 75 08							       push    [ebp+hWndParent]	; hWndParent
.text:5B8E3D61 56							       push    esi	       ; nHeight
.text:5B8E3D62 50							       push    eax	       ; nWidth
.text:5B8E3D63 0F B7 45	20						       movzx   eax, [ebp+arg_18]
.text:5B8E3D67 51							       push    ecx	       ; Y
.text:5B8E3D68 52							       push    edx	       ; X
.text:5B8E3D69 FF 75 14							       push    dword ptr [ebp+14h] ; dwStyle
.text:5B8E3D6C FF 75 10							       push    [ebp+lpWindowName] ; lpWindowName
.text:5B8E3D6F 50							       push    eax	       ; lpClassName
.text:5B8E3D70 FF 75 18							       push    [ebp+dwExStyle] ; dwExStyle
.text:5B8E3D73 FF 15 0C	11 8E 5B					       call    ds:__imp__CreateWindowExW@48 ; CreateWindowExW(x,x,x,x,x,x,x,x,x,x,x,x)
.text:5B8E3D79
.text:5B8E3D79						       loc_5B8E3D79:			       ; CODE XREF: ATL::CWindowImplBase::Create(HWND__	*,tagRECT &,ushort const *,ulong,ulong,uint,ushort)+Fj
.text:5B8E3D79 5E							       pop     esi
.text:5B8E3D7A 5D							       pop     ebp
.text:5B8E3D7B C2 1C 00							       retn    1Ch
.text:5B8E3D7B						       ?Create@CWindowImplBase@ATL@@QAEPAUHWND__@@PAU3@AAUtagRECT@@PBGKKIG@Z endp
.text:5B8E3D7B
.text:5B8E3D7E
.text:5B8E3D7E						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3D7E
.text:5B8E3D7E
.text:5B8E3D7E						       ; void __thiscall ATL::CComDispatchDriver::Release(ATL::CComDispatchDriver *__hidden this)
.text:5B8E3D7E						       ?Release@CComDispatchDriver@ATL@@QAEXXZ proc near
.text:5B8E3D7E											       ; CODE XREF: ATL::CComControlBase::IOleObject_SetClientSite(IOleClientSite *)+16p
.text:5B8E3D7E											       ; ATL::CComControlBase::IOleObject_Close(ulong)+ABp ...
.text:5B8E3D7E 56							       push    esi
.text:5B8E3D7F 8B F1							       mov     esi, ecx
.text:5B8E3D81 8B 06							       mov     eax, [esi]
.text:5B8E3D83 85 C0							       test    eax, eax
.text:5B8E3D85 74 06							       jz      short loc_5B8E3D8D
.text:5B8E3D87 8B 08							       mov     ecx, [eax]
.text:5B8E3D89 50							       push    eax
.text:5B8E3D8A FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E3D8D
.text:5B8E3D8D						       loc_5B8E3D8D:			       ; CODE XREF: ATL::CComDispatchDriver::Release(void)+7j
.text:5B8E3D8D 83 26 00							       and     dword ptr [esi],	0
.text:5B8E3D90 5E							       pop     esi
.text:5B8E3D91 C3							       retn
.text:5B8E3D91						       ?Release@CComDispatchDriver@ATL@@QAEXXZ endp
.text:5B8E3D91
.text:5B8E3D92
.text:5B8E3D92						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3D92
.text:5B8E3D92						       ; Attributes: bp-based frame
.text:5B8E3D92
.text:5B8E3D92						       ; __int32 __thiscall ATL::CRegParser::NextToken(ATL::CRegParser *this, unsigned __int16 *)
.text:5B8E3D92						       ?NextToken@CRegParser@ATL@@IAEJPAG@Z proc near
.text:5B8E3D92											       ; CODE XREF: ATL::CRegParser::AddValue(ATL::CRegKey &,ushort const *,ushort *)+2Ep
.text:5B8E3D92											       ; ATL::CRegParser::AddValue(ATL::CRegKey	&,ushort const *,ushort	*)+72p	...
.text:5B8E3D92
.text:5B8E3D92						       arg_0	       = dword ptr  8
.text:5B8E3D92
.text:5B8E3D92 55							       push    ebp
.text:5B8E3D93 8B EC							       mov     ebp, esp
.text:5B8E3D95 56							       push    esi
.text:5B8E3D96 57							       push    edi
.text:5B8E3D97 8B F1							       mov     esi, ecx
.text:5B8E3D99 E8 1C EE	FF FF						       call    ?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ ;	ATL::CRegParser::SkipWhiteSpace(void)
.text:5B8E3D9E 8B 3E							       mov     edi, [esi]
.text:5B8E3DA0 66 8B 07							       mov     ax, [edi]
.text:5B8E3DA3 66 85 C0							       test    ax, ax
.text:5B8E3DA6 75 0A							       jnz     short loc_5B8E3DB2
.text:5B8E3DA8 B8 09 00	02 80						       mov     eax, 80020009h
.text:5B8E3DAD E9 BF 00	00 00						       jmp     loc_5B8E3E71
.text:5B8E3DB2						       ; ---------------------------------------------------------------------------
.text:5B8E3DB2
.text:5B8E3DB2						       loc_5B8E3DB2:			       ; CODE XREF: ATL::CRegParser::NextToken(ushort *)+14j
.text:5B8E3DB2 66 3D 27	00						       cmp     ax, 27h
.text:5B8E3DB6 53							       push    ebx
.text:5B8E3DB7 75 7D							       jnz     short loc_5B8E3E36
.text:5B8E3DB9 8B 7D 08							       mov     edi, [ebp+arg_0]
.text:5B8E3DBC 8B CE							       mov     ecx, esi	       ; this
.text:5B8E3DBE 89 7D 08							       mov     [ebp+arg_0], edi
.text:5B8E3DC1 E8 DC ED	FF FF						       call    ?IncrementLinePos@CRegParser@ATL@@IAEXXZ	; ATL::CRegParser::IncrementLinePos(void)
.text:5B8E3DC6 EB 4A							       jmp     short loc_5B8E3E12
.text:5B8E3DC8						       ; ---------------------------------------------------------------------------
.text:5B8E3DC8
.text:5B8E3DC8						       loc_5B8E3DC8:			       ; CODE XREF: ATL::CRegParser::NextToken(ushort *)+86j
.text:5B8E3DC8 8B CE							       mov     ecx, esi	       ; this
.text:5B8E3DCA E8 4A ED	FF FF						       call    ?EndOfVar@CRegParser@ATL@@IAEHXZ	; ATL::CRegParser::EndOfVar(void)
.text:5B8E3DCF 85 C0							       test    eax, eax
.text:5B8E3DD1 75 47							       jnz     short loc_5B8E3E1A
.text:5B8E3DD3 8B 06							       mov     eax, [esi]
.text:5B8E3DD5 66 83 38	27						       cmp     word ptr	[eax], 27h
.text:5B8E3DD9 75 07							       jnz     short loc_5B8E3DE2
.text:5B8E3DDB 8B CE							       mov     ecx, esi	       ; this
.text:5B8E3DDD E8 C0 ED	FF FF						       call    ?IncrementLinePos@CRegParser@ATL@@IAEXXZ	; ATL::CRegParser::IncrementLinePos(void)
.text:5B8E3DE2
.text:5B8E3DE2						       loc_5B8E3DE2:			       ; CODE XREF: ATL::CRegParser::NextToken(ushort *)+47j
.text:5B8E3DE2 8B 1E							       mov     ebx, [esi]
.text:5B8E3DE4 8B CE							       mov     ecx, esi	       ; this
.text:5B8E3DE6 E8 B7 ED	FF FF						       call    ?IncrementLinePos@CRegParser@ATL@@IAEXXZ	; ATL::CRegParser::IncrementLinePos(void)
.text:5B8E3DEB 8B 45 08							       mov     eax, [ebp+arg_0]
.text:5B8E3DEE 05 00 20	00 00						       add     eax, 2000h
.text:5B8E3DF3 8D 4F 04							       lea     ecx, [edi+4]
.text:5B8E3DF6 3B C8							       cmp     ecx, eax
.text:5B8E3DF8 73 35							       jnb     short loc_5B8E3E2F
.text:5B8E3DFA 3B 1E							       cmp     ebx, [esi]
.text:5B8E3DFC 73 14							       jnb     short loc_5B8E3E12
.text:5B8E3DFE 8B CB							       mov     ecx, ebx
.text:5B8E3E00 8B C3							       mov     eax, ebx
.text:5B8E3E02
.text:5B8E3E02						       loc_5B8E3E02:			       ; CODE XREF: ATL::CRegParser::NextToken(ushort *)+7Ej
.text:5B8E3E02 66 8B 09							       mov     cx, [ecx]
.text:5B8E3E05 40							       inc     eax
.text:5B8E3E06 66 89 0F							       mov     [edi], cx
.text:5B8E3E09 40							       inc     eax
.text:5B8E3E0A 47							       inc     edi
.text:5B8E3E0B 47							       inc     edi
.text:5B8E3E0C 3B 06							       cmp     eax, [esi]
.text:5B8E3E0E 8B C8							       mov     ecx, eax
.text:5B8E3E10 72 F0							       jb      short loc_5B8E3E02
.text:5B8E3E12
.text:5B8E3E12						       loc_5B8E3E12:			       ; CODE XREF: ATL::CRegParser::NextToken(ushort *)+34j
.text:5B8E3E12											       ; ATL::CRegParser::NextToken(ushort *)+6Aj
.text:5B8E3E12 8B 06							       mov     eax, [esi]
.text:5B8E3E14 66 83 38	00						       cmp     word ptr	[eax], 0
.text:5B8E3E18 75 AE							       jnz     short loc_5B8E3DC8
.text:5B8E3E1A
.text:5B8E3E1A						       loc_5B8E3E1A:			       ; CODE XREF: ATL::CRegParser::NextToken(ushort *)+3Fj
.text:5B8E3E1A 8B 06							       mov     eax, [esi]
.text:5B8E3E1C 66 83 38	00						       cmp     word ptr	[eax], 0
.text:5B8E3E20 74 0D							       jz      short loc_5B8E3E2F
.text:5B8E3E22 66 83 27	00						       and     word ptr	[edi], 0
.text:5B8E3E26 8B CE							       mov     ecx, esi	       ; this
.text:5B8E3E28 E8 75 ED	FF FF						       call    ?IncrementLinePos@CRegParser@ATL@@IAEXXZ	; ATL::CRegParser::IncrementLinePos(void)
.text:5B8E3E2D EB 3F							       jmp     short loc_5B8E3E6E
.text:5B8E3E2F						       ; ---------------------------------------------------------------------------
.text:5B8E3E2F
.text:5B8E3E2F						       loc_5B8E3E2F:			       ; CODE XREF: ATL::CRegParser::NextToken(ushort *)+66j
.text:5B8E3E2F											       ; ATL::CRegParser::NextToken(ushort *)+8Ej
.text:5B8E3E2F B8 09 00	02 80						       mov     eax, 80020009h
.text:5B8E3E34 EB 3A							       jmp     short loc_5B8E3E70
.text:5B8E3E36						       ; ---------------------------------------------------------------------------
.text:5B8E3E36
.text:5B8E3E36						       loc_5B8E3E36:			       ; CODE XREF: ATL::CRegParser::NextToken(ushort *)+25j
.text:5B8E3E36 8B 5D 08							       mov     ebx, [ebp+arg_0]
.text:5B8E3E39
.text:5B8E3E39						       loc_5B8E3E39:			       ; CODE XREF: ATL::CRegParser::NextToken(ushort *)+D6j
.text:5B8E3E39 50							       push    eax	       ; unsigned __int16
.text:5B8E3E3A 8B CE							       mov     ecx, esi	       ; this
.text:5B8E3E3C E8 3E ED	FF FF						       call    ?IsSpace@CRegParser@ATL@@IAEHG@Z	; ATL::CRegParser::IsSpace(ushort)
.text:5B8E3E41 85 C0							       test    eax, eax
.text:5B8E3E43 75 25							       jnz     short loc_5B8E3E6A
.text:5B8E3E45 E8 58 ED	FF FF						       call    ?IncrementLinePos@CRegParser@ATL@@IAEXXZ	; ATL::CRegParser::IncrementLinePos(void)
.text:5B8E3E4A 3B 3E							       cmp     edi, [esi]
.text:5B8E3E4C 73 12							       jnb     short loc_5B8E3E60
.text:5B8E3E4E 8B C7							       mov     eax, edi
.text:5B8E3E50
.text:5B8E3E50						       loc_5B8E3E50:			       ; CODE XREF: ATL::CRegParser::NextToken(ushort *)+CCj
.text:5B8E3E50 66 8B 00							       mov     ax, [eax]
.text:5B8E3E53 47							       inc     edi
.text:5B8E3E54 66 89 03							       mov     [ebx], ax
.text:5B8E3E57 47							       inc     edi
.text:5B8E3E58 43							       inc     ebx
.text:5B8E3E59 43							       inc     ebx
.text:5B8E3E5A 3B 3E							       cmp     edi, [esi]
.text:5B8E3E5C 8B C7							       mov     eax, edi
.text:5B8E3E5E 72 F0							       jb      short loc_5B8E3E50
.text:5B8E3E60
.text:5B8E3E60						       loc_5B8E3E60:			       ; CODE XREF: ATL::CRegParser::NextToken(ushort *)+BAj
.text:5B8E3E60 8B 3E							       mov     edi, [esi]
.text:5B8E3E62 66 8B 07							       mov     ax, [edi]
.text:5B8E3E65 66 85 C0							       test    ax, ax
.text:5B8E3E68 75 CF							       jnz     short loc_5B8E3E39
.text:5B8E3E6A
.text:5B8E3E6A						       loc_5B8E3E6A:			       ; CODE XREF: ATL::CRegParser::NextToken(ushort *)+B1j
.text:5B8E3E6A 66 83 23	00						       and     word ptr	[ebx], 0
.text:5B8E3E6E
.text:5B8E3E6E						       loc_5B8E3E6E:			       ; CODE XREF: ATL::CRegParser::NextToken(ushort *)+9Bj
.text:5B8E3E6E 33 C0							       xor     eax, eax
.text:5B8E3E70
.text:5B8E3E70						       loc_5B8E3E70:			       ; CODE XREF: ATL::CRegParser::NextToken(ushort *)+A2j
.text:5B8E3E70 5B							       pop     ebx
.text:5B8E3E71
.text:5B8E3E71						       loc_5B8E3E71:			       ; CODE XREF: ATL::CRegParser::NextToken(ushort *)+1Bj
.text:5B8E3E71 5F							       pop     edi
.text:5B8E3E72 5E							       pop     esi
.text:5B8E3E73 5D							       pop     ebp
.text:5B8E3E74 C2 04 00							       retn    4
.text:5B8E3E74						       ?NextToken@CRegParser@ATL@@IAEJPAG@Z endp
.text:5B8E3E74
.text:5B8E3E77
.text:5B8E3E77						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3E77
.text:5B8E3E77						       ; Attributes: bp-based frame
.text:5B8E3E77
.text:5B8E3E77						       ; __int32 __thiscall ATL::CRegParser::AddValue(ATL::CRegParser *this, struct ATL::CRegKey *, const unsigned __int16 *, unsigned __int16 *)
.text:5B8E3E77						       ?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PBGPAG@Z proc	near
.text:5B8E3E77											       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+1C4p
.text:5B8E3E77											       ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+2B4p
.text:5B8E3E77
.text:5B8E3E77						       plOut	       = dword ptr -0Ch
.text:5B8E3E77						       Memory	       = dword ptr -8
.text:5B8E3E77						       var_4	       = dword ptr -4
.text:5B8E3E77						       arg_0	       = dword ptr  8
.text:5B8E3E77						       arg_4	       = dword ptr  0Ch
.text:5B8E3E77						       arg_8	       = dword ptr  10h
.text:5B8E3E77
.text:5B8E3E77 55							       push    ebp
.text:5B8E3E78 8B EC							       mov     ebp, esp
.text:5B8E3E7A 83 EC 0C							       sub     esp, 0Ch
.text:5B8E3E7D 53							       push    ebx
.text:5B8E3E7E 56							       push    esi
.text:5B8E3E7F 8B 35 78	11 8E 5B					       mov     esi, ds:__imp__malloc
.text:5B8E3E85 57							       push    edi
.text:5B8E3E86 BF 00 20	00 00						       mov     edi, 2000h
.text:5B8E3E8B 57							       push    edi	       ; Size
.text:5B8E3E8C 8B D9							       mov     ebx, ecx
.text:5B8E3E8E FF D6							       call    esi ; __imp__malloc
.text:5B8E3E90 85 C0							       test    eax, eax
.text:5B8E3E92 59							       pop     ecx
.text:5B8E3E93 89 45 F8							       mov     [ebp+Memory], eax
.text:5B8E3E96 75 0A							       jnz     short loc_5B8E3EA2
.text:5B8E3E98 B8 0E 00	07 80						       mov     eax, 8007000Eh
.text:5B8E3E9D E9 AB 00	00 00						       jmp     loc_5B8E3F4D
.text:5B8E3EA2						       ; ---------------------------------------------------------------------------
.text:5B8E3EA2
.text:5B8E3EA2						       loc_5B8E3EA2:			       ; CODE XREF: ATL::CRegParser::AddValue(ATL::CRegKey &,ushort const *,ushort *)+1Fj
.text:5B8E3EA2 50							       push    eax	       ; unsigned __int16 *
.text:5B8E3EA3 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E3EA5 E8 E8 FE	FF FF						       call    ?NextToken@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::NextToken(ushort	*)
.text:5B8E3EAA 85 C0							       test    eax, eax
.text:5B8E3EAC 7D 07							       jge     short loc_5B8E3EB5
.text:5B8E3EAE 8B F0							       mov     esi, eax
.text:5B8E3EB0 E9 8C 00	00 00						       jmp     loc_5B8E3F41
.text:5B8E3EB5						       ; ---------------------------------------------------------------------------
.text:5B8E3EB5
.text:5B8E3EB5						       loc_5B8E3EB5:			       ; CODE XREF: ATL::CRegParser::AddValue(ATL::CRegKey &,ushort const *,ushort *)+35j
.text:5B8E3EB5 8D 45 FC							       lea     eax, [ebp+var_4]
.text:5B8E3EB8 50							       push    eax	       ; int
.text:5B8E3EB9 FF 75 F8							       push    [ebp+Memory]    ; lpString1
.text:5B8E3EBC E8 18 ED	FF FF						       call    sub_5B8E2BD9
.text:5B8E3EC1 85 C0							       test    eax, eax
.text:5B8E3EC3 75 07							       jnz     short loc_5B8E3ECC
.text:5B8E3EC5 BE 09 00	02 80						       mov     esi, 80020009h
.text:5B8E3ECA EB 75							       jmp     short loc_5B8E3F41
.text:5B8E3ECC						       ; ---------------------------------------------------------------------------
.text:5B8E3ECC
.text:5B8E3ECC						       loc_5B8E3ECC:			       ; CODE XREF: ATL::CRegParser::AddValue(ATL::CRegKey &,ushort const *,ushort *)+4Cj
.text:5B8E3ECC 57							       push    edi	       ; Size
.text:5B8E3ECD FF D6							       call    esi ; __imp__malloc
.text:5B8E3ECF 8B F8							       mov     edi, eax
.text:5B8E3ED1 33 F6							       xor     esi, esi
.text:5B8E3ED3 3B FE							       cmp     edi, esi
.text:5B8E3ED5 59							       pop     ecx
.text:5B8E3ED6 75 07							       jnz     short loc_5B8E3EDF
.text:5B8E3ED8 BE 0E 00	07 80						       mov     esi, 8007000Eh
.text:5B8E3EDD EB 62							       jmp     short loc_5B8E3F41
.text:5B8E3EDF						       ; ---------------------------------------------------------------------------
.text:5B8E3EDF
.text:5B8E3EDF						       loc_5B8E3EDF:			       ; CODE XREF: ATL::CRegParser::AddValue(ATL::CRegKey &,ushort const *,ushort *)+5Fj
.text:5B8E3EDF 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E3EE1 E8 D4 EC	FF FF						       call    ?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ ;	ATL::CRegParser::SkipWhiteSpace(void)
.text:5B8E3EE6 57							       push    edi	       ; unsigned __int16 *
.text:5B8E3EE7 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E3EE9 E8 A4 FE	FF FF						       call    ?NextToken@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::NextToken(ushort	*)
.text:5B8E3EEE 3B C6							       cmp     eax, esi
.text:5B8E3EF0 7C 45							       jl      short loc_5B8E3F37
.text:5B8E3EF2 0F B7 45	FC						       movzx   eax, word ptr [ebp+var_4]
.text:5B8E3EF6 83 F8 03							       cmp     eax, 3
.text:5B8E3EF9 74 13							       jz      short loc_5B8E3F0E
.text:5B8E3EFB 83 F8 08							       cmp     eax, 8
.text:5B8E3EFE 75 29							       jnz     short loc_5B8E3F29
.text:5B8E3F00 FF 75 0C							       push    [ebp+arg_4]     ; unsigned __int16 *
.text:5B8E3F03 8B 4D 08							       mov     ecx, [ebp+arg_0]	; this
.text:5B8E3F06 57							       push    edi	       ; lpString
.text:5B8E3F07 E8 7C F4	FF FF						       call    ?SetValue@CRegKey@ATL@@QAEJPBG0@Z ; ATL::CRegKey::SetValue(ushort const *,ushort	const *)
.text:5B8E3F0C EB 1B							       jmp     short loc_5B8E3F29
.text:5B8E3F0E						       ; ---------------------------------------------------------------------------
.text:5B8E3F0E
.text:5B8E3F0E						       loc_5B8E3F0E:			       ; CODE XREF: ATL::CRegParser::AddValue(ATL::CRegKey &,ushort const *,ushort *)+82j
.text:5B8E3F0E 8D 45 F4							       lea     eax, [ebp+plOut]
.text:5B8E3F11 50							       push    eax	       ; plOut
.text:5B8E3F12 56							       push    esi	       ; dwFlags
.text:5B8E3F13 56							       push    esi	       ; lcid
.text:5B8E3F14 57							       push    edi	       ; strIn
.text:5B8E3F15 FF 15 F4	10 8E 5B					       call    ds:__imp__VarI4FromStr@16 ; VarI4FromStr(x,x,x,x)
.text:5B8E3F1B FF 75 0C							       push    [ebp+arg_4]     ; unsigned __int16 *
.text:5B8E3F1E 8B 4D 08							       mov     ecx, [ebp+arg_0]	; this
.text:5B8E3F21 FF 75 F4							       push    [ebp+plOut]     ; Data
.text:5B8E3F24 E8 45 F4	FF FF						       call    ?SetValue@CRegKey@ATL@@QAEJKPBG@Z ; ATL::CRegKey::SetValue(ulong,ushort const *)
.text:5B8E3F29
.text:5B8E3F29						       loc_5B8E3F29:			       ; CODE XREF: ATL::CRegParser::AddValue(ATL::CRegKey &,ushort const *,ushort *)+87j
.text:5B8E3F29											       ; ATL::CRegParser::AddValue(ATL::CRegKey	&,ushort const *,ushort	*)+95j
.text:5B8E3F29 FF 75 10							       push    [ebp+arg_8]     ; unsigned __int16 *
.text:5B8E3F2C 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E3F2E E8 5F FE	FF FF						       call    ?NextToken@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::NextToken(ushort	*)
.text:5B8E3F33 3B C6							       cmp     eax, esi
.text:5B8E3F35 7D 02							       jge     short loc_5B8E3F39
.text:5B8E3F37
.text:5B8E3F37						       loc_5B8E3F37:			       ; CODE XREF: ATL::CRegParser::AddValue(ATL::CRegKey &,ushort const *,ushort *)+79j
.text:5B8E3F37 8B F0							       mov     esi, eax
.text:5B8E3F39
.text:5B8E3F39						       loc_5B8E3F39:			       ; CODE XREF: ATL::CRegParser::AddValue(ATL::CRegKey &,ushort const *,ushort *)+BEj
.text:5B8E3F39 57							       push    edi	       ; Memory
.text:5B8E3F3A FF 15 80	11 8E 5B					       call    ds:__imp__free
.text:5B8E3F40 59							       pop     ecx
.text:5B8E3F41
.text:5B8E3F41						       loc_5B8E3F41:			       ; CODE XREF: ATL::CRegParser::AddValue(ATL::CRegKey &,ushort const *,ushort *)+39j
.text:5B8E3F41											       ; ATL::CRegParser::AddValue(ATL::CRegKey	&,ushort const *,ushort	*)+53j	...
.text:5B8E3F41 FF 75 F8							       push    [ebp+Memory]    ; Memory
.text:5B8E3F44 FF 15 80	11 8E 5B					       call    ds:__imp__free
.text:5B8E3F4A 59							       pop     ecx
.text:5B8E3F4B 8B C6							       mov     eax, esi
.text:5B8E3F4D
.text:5B8E3F4D						       loc_5B8E3F4D:			       ; CODE XREF: ATL::CRegParser::AddValue(ATL::CRegKey &,ushort const *,ushort *)+26j
.text:5B8E3F4D 5F							       pop     edi
.text:5B8E3F4E 5E							       pop     esi
.text:5B8E3F4F 5B							       pop     ebx
.text:5B8E3F50 C9							       leave
.text:5B8E3F51 C2 0C 00							       retn    0Ch
.text:5B8E3F51						       ?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PBGPAG@Z endp
.text:5B8E3F51
.text:5B8E3F54
.text:5B8E3F54						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3F54
.text:5B8E3F54						       ; Attributes: bp-based frame
.text:5B8E3F54
.text:5B8E3F54						       ; int __thiscall	ATL::CRegParser::HasSubKeys(ATL::CRegParser *this, HKEY)
.text:5B8E3F54						       ?HasSubKeys@CRegParser@ATL@@IAEHPAUHKEY__@@@Z proc near
.text:5B8E3F54											       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+30Bp
.text:5B8E3F54											       ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+3B9p
.text:5B8E3F54
.text:5B8E3F54						       cSubKeys	       = dword ptr -4
.text:5B8E3F54						       hKey	       = dword ptr  8
.text:5B8E3F54
.text:5B8E3F54 55							       push    ebp
.text:5B8E3F55 8B EC							       mov     ebp, esp
.text:5B8E3F57 51							       push    ecx
.text:5B8E3F58 33 C0							       xor     eax, eax
.text:5B8E3F5A 50							       push    eax	       ; lpftLastWriteTime
.text:5B8E3F5B 50							       push    eax	       ; lpcbSecurityDescriptor
.text:5B8E3F5C 50							       push    eax	       ; lpcbMaxValueLen
.text:5B8E3F5D 50							       push    eax	       ; lpcbMaxValueNameLen
.text:5B8E3F5E 50							       push    eax	       ; lpcValues
.text:5B8E3F5F 50							       push    eax	       ; lpcbMaxClassLen
.text:5B8E3F60 50							       push    eax	       ; lpcbMaxSubKeyLen
.text:5B8E3F61 8D 4D FC							       lea     ecx, [ebp+cSubKeys]
.text:5B8E3F64 51							       push    ecx	       ; lpcSubKeys
.text:5B8E3F65 50							       push    eax	       ; lpReserved
.text:5B8E3F66 50							       push    eax	       ; lpcchClass
.text:5B8E3F67 50							       push    eax	       ; lpClass
.text:5B8E3F68 FF 75 08							       push    [ebp+hKey]      ; hKey
.text:5B8E3F6B 89 45 FC							       mov     [ebp+cSubKeys], eax
.text:5B8E3F6E FF 15 18	10 8E 5B					       call    ds:__imp__RegQueryInfoKeyW@48 ; RegQueryInfoKeyW(x,x,x,x,x,x,x,x,x,x,x,x)
.text:5B8E3F74 85 C0							       test    eax, eax
.text:5B8E3F76 7D 04							       jge     short loc_5B8E3F7C
.text:5B8E3F78 33 C0							       xor     eax, eax
.text:5B8E3F7A EB 09							       jmp     short locret_5B8E3F85
.text:5B8E3F7C						       ; ---------------------------------------------------------------------------
.text:5B8E3F7C
.text:5B8E3F7C						       loc_5B8E3F7C:			       ; CODE XREF: ATL::CRegParser::HasSubKeys(HKEY__ *)+22j
.text:5B8E3F7C 33 C0							       xor     eax, eax
.text:5B8E3F7E 3B 45 FC							       cmp     eax, [ebp+cSubKeys]
.text:5B8E3F81 1B C0							       sbb     eax, eax
.text:5B8E3F83 F7 D8							       neg     eax
.text:5B8E3F85
.text:5B8E3F85						       locret_5B8E3F85:			       ; CODE XREF: ATL::CRegParser::HasSubKeys(HKEY__ *)+26j
.text:5B8E3F85 C9							       leave
.text:5B8E3F86 C2 04 00							       retn    4
.text:5B8E3F86						       ?HasSubKeys@CRegParser@ATL@@IAEHPAUHKEY__@@@Z endp
.text:5B8E3F86
.text:5B8E3F89
.text:5B8E3F89						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3F89
.text:5B8E3F89						       ; Attributes: bp-based frame
.text:5B8E3F89
.text:5B8E3F89						       ; int __thiscall	ATL::CRegParser::HasValues(ATL::CRegParser *this, HKEY)
.text:5B8E3F89						       ?HasValues@CRegParser@ATL@@IAEHPAUHKEY__@@@Z proc near
.text:5B8E3F89											       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+319p
.text:5B8E3F89
.text:5B8E3F89						       cbData	       = dword ptr -8
.text:5B8E3F89						       cValues	       = dword ptr -4
.text:5B8E3F89						       hKey	       = dword ptr  8
.text:5B8E3F89
.text:5B8E3F89 55							       push    ebp
.text:5B8E3F8A 8B EC							       mov     ebp, esp
.text:5B8E3F8C 51							       push    ecx
.text:5B8E3F8D 51							       push    ecx
.text:5B8E3F8E 56							       push    esi
.text:5B8E3F8F 33 F6							       xor     esi, esi
.text:5B8E3F91 56							       push    esi	       ; lpftLastWriteTime
.text:5B8E3F92 56							       push    esi	       ; lpcbSecurityDescriptor
.text:5B8E3F93 56							       push    esi	       ; lpcbMaxValueLen
.text:5B8E3F94 56							       push    esi	       ; lpcbMaxValueNameLen
.text:5B8E3F95 8D 45 FC							       lea     eax, [ebp+cValues]
.text:5B8E3F98 50							       push    eax	       ; lpcValues
.text:5B8E3F99 56							       push    esi	       ; lpcbMaxClassLen
.text:5B8E3F9A 56							       push    esi	       ; lpcbMaxSubKeyLen
.text:5B8E3F9B 56							       push    esi	       ; lpcSubKeys
.text:5B8E3F9C 56							       push    esi	       ; lpReserved
.text:5B8E3F9D 56							       push    esi	       ; lpcchClass
.text:5B8E3F9E 56							       push    esi	       ; lpClass
.text:5B8E3F9F FF 75 08							       push    [ebp+hKey]      ; hKey
.text:5B8E3FA2 89 75 FC							       mov     [ebp+cValues], esi
.text:5B8E3FA5 FF 15 18	10 8E 5B					       call    ds:__imp__RegQueryInfoKeyW@48 ; RegQueryInfoKeyW(x,x,x,x,x,x,x,x,x,x,x,x)
.text:5B8E3FAB 85 C0							       test    eax, eax
.text:5B8E3FAD 74 04							       jz      short loc_5B8E3FB3
.text:5B8E3FAF 33 C0							       xor     eax, eax
.text:5B8E3FB1 EB 34							       jmp     short loc_5B8E3FE7
.text:5B8E3FB3						       ; ---------------------------------------------------------------------------
.text:5B8E3FB3
.text:5B8E3FB3						       loc_5B8E3FB3:			       ; CODE XREF: ATL::CRegParser::HasValues(HKEY__ *)+24j
.text:5B8E3FB3 83 7D FC	01						       cmp     [ebp+cValues], 1
.text:5B8E3FB7 75 25							       jnz     short loc_5B8E3FDE
.text:5B8E3FB9 8D 45 F8							       lea     eax, [ebp+cbData]
.text:5B8E3FBC 50							       push    eax	       ; lpcbData
.text:5B8E3FBD 56							       push    esi	       ; lpData
.text:5B8E3FBE 56							       push    esi	       ; lpType
.text:5B8E3FBF 56							       push    esi	       ; lpReserved
.text:5B8E3FC0 56							       push    esi	       ; lpValueName
.text:5B8E3FC1 FF 75 08							       push    [ebp+hKey]      ; hKey
.text:5B8E3FC4 89 75 F8							       mov     [ebp+cbData], esi
.text:5B8E3FC7 FF 15 14	10 8E 5B					       call    ds:__imp__RegQueryValueExW@24 ; RegQueryValueExW(x,x,x,x,x,x)
.text:5B8E3FCD 85 C0							       test    eax, eax
.text:5B8E3FCF 75 08							       jnz     short loc_5B8E3FD9
.text:5B8E3FD1 39 75 F8							       cmp     [ebp+cbData], esi
.text:5B8E3FD4 0F 94 C0							       setz    al
.text:5B8E3FD7 EB 0E							       jmp     short loc_5B8E3FE7
.text:5B8E3FD9						       ; ---------------------------------------------------------------------------
.text:5B8E3FD9
.text:5B8E3FD9						       loc_5B8E3FD9:			       ; CODE XREF: ATL::CRegParser::HasValues(HKEY__ *)+46j
.text:5B8E3FD9 33 C0							       xor     eax, eax
.text:5B8E3FDB 40							       inc     eax
.text:5B8E3FDC EB 09							       jmp     short loc_5B8E3FE7
.text:5B8E3FDE						       ; ---------------------------------------------------------------------------
.text:5B8E3FDE
.text:5B8E3FDE						       loc_5B8E3FDE:			       ; CODE XREF: ATL::CRegParser::HasValues(HKEY__ *)+2Ej
.text:5B8E3FDE 33 C0							       xor     eax, eax
.text:5B8E3FE0 3B 45 FC							       cmp     eax, [ebp+cValues]
.text:5B8E3FE3 1B C0							       sbb     eax, eax
.text:5B8E3FE5 F7 D8							       neg     eax
.text:5B8E3FE7
.text:5B8E3FE7						       loc_5B8E3FE7:			       ; CODE XREF: ATL::CRegParser::HasValues(HKEY__ *)+28j
.text:5B8E3FE7											       ; ATL::CRegParser::HasValues(HKEY__ *)+4Ej ...
.text:5B8E3FE7 5E							       pop     esi
.text:5B8E3FE8 C9							       leave
.text:5B8E3FE9 C2 04 00							       retn    4
.text:5B8E3FE9						       ?HasValues@CRegParser@ATL@@IAEHPAUHKEY__@@@Z endp
.text:5B8E3FE9
.text:5B8E3FEC
.text:5B8E3FEC						       ; =============== S U B R O U T I N E =======================================
.text:5B8E3FEC
.text:5B8E3FEC						       ; Attributes: bp-based frame
.text:5B8E3FEC
.text:5B8E3FEC						       ; __int32 __thiscall ATL::CRegParser::SkipAssignment(ATL::CRegParser *this, unsigned __int16 *)
.text:5B8E3FEC						       ?SkipAssignment@CRegParser@ATL@@IAEJPAG@Z proc near
.text:5B8E3FEC											       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+FEp
.text:5B8E3FEC											       ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+1FBp ...
.text:5B8E3FEC
.text:5B8E3FEC						       var_2000	       = word ptr -2000h
.text:5B8E3FEC						       arg_0	       = dword ptr  8
.text:5B8E3FEC
.text:5B8E3FEC 55							       push    ebp
.text:5B8E3FED 8B EC							       mov     ebp, esp
.text:5B8E3FEF B8 00 20	00 00						       mov     eax, 2000h
.text:5B8E3FF4 E8 87 17	00 00						       call    __chkstk
.text:5B8E3FF9 56							       push    esi
.text:5B8E3FFA 57							       push    edi
.text:5B8E3FFB 8B 7D 08							       mov     edi, [ebp+arg_0]
.text:5B8E3FFE 66 83 3F	3D						       cmp     word ptr	[edi], 3Dh
.text:5B8E4002 8B F1							       mov     esi, ecx
.text:5B8E4004 75 2F							       jnz     short loc_5B8E4035
.text:5B8E4006 57							       push    edi	       ; unsigned __int16 *
.text:5B8E4007 E8 86 FD	FF FF						       call    ?NextToken@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::NextToken(ushort	*)
.text:5B8E400C 85 C0							       test    eax, eax
.text:5B8E400E 7C 27							       jl      short loc_5B8E4037
.text:5B8E4010 8B CE							       mov     ecx, esi	       ; this
.text:5B8E4012 E8 A3 EB	FF FF						       call    ?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ ;	ATL::CRegParser::SkipWhiteSpace(void)
.text:5B8E4017 8D 85 00	E0 FF FF					       lea     eax, [ebp+var_2000]
.text:5B8E401D 50							       push    eax	       ; unsigned __int16 *
.text:5B8E401E 8B CE							       mov     ecx, esi	       ; this
.text:5B8E4020 E8 6D FD	FF FF						       call    ?NextToken@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::NextToken(ushort	*)
.text:5B8E4025 85 C0							       test    eax, eax
.text:5B8E4027 7C 0E							       jl      short loc_5B8E4037
.text:5B8E4029 57							       push    edi	       ; unsigned __int16 *
.text:5B8E402A 8B CE							       mov     ecx, esi	       ; this
.text:5B8E402C E8 61 FD	FF FF						       call    ?NextToken@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::NextToken(ushort	*)
.text:5B8E4031 85 C0							       test    eax, eax
.text:5B8E4033 7C 02							       jl      short loc_5B8E4037
.text:5B8E4035
.text:5B8E4035						       loc_5B8E4035:			       ; CODE XREF: ATL::CRegParser::SkipAssignment(ushort *)+18j
.text:5B8E4035 33 C0							       xor     eax, eax
.text:5B8E4037
.text:5B8E4037						       loc_5B8E4037:			       ; CODE XREF: ATL::CRegParser::SkipAssignment(ushort *)+22j
.text:5B8E4037											       ; ATL::CRegParser::SkipAssignment(ushort	*)+3Bj	...
.text:5B8E4037 5F							       pop     edi
.text:5B8E4038 5E							       pop     esi
.text:5B8E4039 C9							       leave
.text:5B8E403A C2 04 00							       retn    4
.text:5B8E403A						       ?SkipAssignment@CRegParser@ATL@@IAEJPAG@Z endp
.text:5B8E403A
.text:5B8E403D
.text:5B8E403D						       ; =============== S U B R O U T I N E =======================================
.text:5B8E403D
.text:5B8E403D
.text:5B8E403D						       ; int __thiscall	ATL::CParseBuffer::AddString(ATL::CParseBuffer *this, const unsigned __int16 *)
.text:5B8E403D						       ?AddString@CParseBuffer@ATL@@QAEHPBG@Z proc near
.text:5B8E403D											       ; CODE XREF: ATL::CRegParser::PreProcessBuffer(ushort *,ushort *	*)+9Ep
.text:5B8E403D
.text:5B8E403D						       arg_0	       = dword ptr  4
.text:5B8E403D
.text:5B8E403D 56							       push    esi
.text:5B8E403E 8B 74 24	08						       mov     esi, [esp+4+arg_0]
.text:5B8E4042 57							       push    edi
.text:5B8E4043 8B F9							       mov     edi, ecx
.text:5B8E4045 EB 0A							       jmp     short loc_5B8E4051
.text:5B8E4047						       ; ---------------------------------------------------------------------------
.text:5B8E4047
.text:5B8E4047						       loc_5B8E4047:			       ; CODE XREF: ATL::CParseBuffer::AddString(ushort	const *)+1Cj
.text:5B8E4047 50							       push    eax	       ; unsigned __int16
.text:5B8E4048 8B CF							       mov     ecx, edi	       ; this
.text:5B8E404A E8 43 EC	FF FF						       call    ?AddChar@CParseBuffer@ATL@@QAEHG@Z ; ATL::CParseBuffer::AddChar(ushort)
.text:5B8E404F 46							       inc     esi
.text:5B8E4050 46							       inc     esi
.text:5B8E4051
.text:5B8E4051						       loc_5B8E4051:			       ; CODE XREF: ATL::CParseBuffer::AddString(ushort	const *)+8j
.text:5B8E4051 33 C0							       xor     eax, eax
.text:5B8E4053 66 8B 06							       mov     ax, [esi]
.text:5B8E4056 66 85 C0							       test    ax, ax
.text:5B8E4059 75 EC							       jnz     short loc_5B8E4047
.text:5B8E405B 33 C0							       xor     eax, eax
.text:5B8E405D 5F							       pop     edi
.text:5B8E405E 40							       inc     eax
.text:5B8E405F 5E							       pop     esi
.text:5B8E4060 C2 04 00							       retn    4
.text:5B8E4060						       ?AddString@CParseBuffer@ATL@@QAEHPBG@Z endp
.text:5B8E4060
.text:5B8E4063
.text:5B8E4063						       ; =============== S U B R O U T I N E =======================================
.text:5B8E4063
.text:5B8E4063						       ; Attributes: bp-based frame
.text:5B8E4063
.text:5B8E4063						       ; __int32 __thiscall ATL::CRegParser::PreProcessBuffer(ATL::CRegParser *this, LPCWSTR lpString, unsigned	__int16	**)
.text:5B8E4063						       ?PreProcessBuffer@CRegParser@ATL@@QAEJPAGPAPAG@Z	proc near
.text:5B8E4063											       ; CODE XREF: ATL::CRegParser::RegisterBuffer(ushort *,int)+15p
.text:5B8E4063
.text:5B8E4063						       String1	       = word ptr -4Ch
.text:5B8E4063						       var_C	       = byte ptr -0Ch
.text:5B8E4063						       pv	       = dword ptr -4
.text:5B8E4063						       lpString	       = dword ptr  8
.text:5B8E4063						       arg_4	       = dword ptr  0Ch
.text:5B8E4063
.text:5B8E4063 55							       push    ebp
.text:5B8E4064 8B EC							       mov     ebp, esp
.text:5B8E4066 83 EC 4C							       sub     esp, 4Ch
.text:5B8E4069 8B 45 0C							       mov     eax, [ebp+arg_4]
.text:5B8E406C 53							       push    ebx
.text:5B8E406D 56							       push    esi
.text:5B8E406E 57							       push    edi
.text:5B8E406F 8B 7D 08							       mov     edi, [ebp+lpString]
.text:5B8E4072 33 DB							       xor     ebx, ebx
.text:5B8E4074 57							       push    edi	       ; lpString
.text:5B8E4075 8B F1							       mov     esi, ecx
.text:5B8E4077 89 18							       mov     [eax], ebx
.text:5B8E4079 FF 15 78	10 8E 5B					       call    ds:__imp__lstrlenW@4 ; lstrlenW(x)
.text:5B8E407F D1 E0							       shl     eax, 1
.text:5B8E4081 50							       push    eax	       ; int
.text:5B8E4082 8D 4D F4							       lea     ecx, [ebp+var_C]	; this
.text:5B8E4085 E8 E9 EB	FF FF						       call    ??0CParseBuffer@ATL@@QAE@H@Z ; ATL::CParseBuffer::CParseBuffer(int)
.text:5B8E408A 39 5D FC							       cmp     [ebp+pv], ebx
.text:5B8E408D 75 11							       jnz     short loc_5B8E40A0
.text:5B8E408F 53							       push    ebx	       ; pv
.text:5B8E4090 FF 15 98	11 8E 5B					       call    ds:__imp__CoTaskMemFree@4 ; CoTaskMemFree(x)
.text:5B8E4096 B8 0E 00	07 80						       mov     eax, 8007000Eh
.text:5B8E409B E9 C3 00	00 00						       jmp     loc_5B8E4163
.text:5B8E40A0						       ; ---------------------------------------------------------------------------
.text:5B8E40A0
.text:5B8E40A0						       loc_5B8E40A0:			       ; CODE XREF: ATL::CRegParser::PreProcessBuffer(ushort *,ushort *	*)+2Aj
.text:5B8E40A0 89 3E							       mov     [esi], edi
.text:5B8E40A2 66 39 1F							       cmp     [edi], bx
.text:5B8E40A5 89 5D 08							       mov     [ebp+lpString], ebx
.text:5B8E40A8 0F 84 90	00 00 00					       jz      loc_5B8E413E
.text:5B8E40AE
.text:5B8E40AE						       loc_5B8E40AE:			       ; CODE XREF: ATL::CRegParser::PreProcessBuffer(ushort *,ushort *	*)+C7j
.text:5B8E40AE 8B 06							       mov     eax, [esi]
.text:5B8E40B0 66 8B 00							       mov     ax, [eax]
.text:5B8E40B3 6A 25							       push    25h
.text:5B8E40B5 5F							       pop     edi
.text:5B8E40B6 66 3B C7							       cmp     ax, di
.text:5B8E40B9 75 5A							       jnz     short loc_5B8E4115
.text:5B8E40BB 8B CE							       mov     ecx, esi	       ; this
.text:5B8E40BD E8 E0 EA	FF FF						       call    ?IncrementLinePos@CRegParser@ATL@@IAEXXZ	; ATL::CRegParser::IncrementLinePos(void)
.text:5B8E40C2 8B 06							       mov     eax, [esi]
.text:5B8E40C4 66 39 38							       cmp     [eax], di
.text:5B8E40C7 57							       push    edi
.text:5B8E40C8 74 4C							       jz      short loc_5B8E4116
.text:5B8E40CA E8 66 EA	FF FF						       call    sub_5B8E2B35
.text:5B8E40CF 8B F8							       mov     edi, eax
.text:5B8E40D1 3B FB							       cmp     edi, ebx
.text:5B8E40D3 74 62							       jz      short loc_5B8E4137
.text:5B8E40D5 8B 0E							       mov     ecx, [esi]
.text:5B8E40D7 2B C1							       sub     eax, ecx
.text:5B8E40D9 D1 F8							       sar     eax, 1
.text:5B8E40DB 83 F8 1F							       cmp     eax, 1Fh
.text:5B8E40DE 7F 4E							       jg      short loc_5B8E412E
.text:5B8E40E0 40							       inc     eax
.text:5B8E40E1 50							       push    eax	       ; iMaxLength
.text:5B8E40E2 51							       push    ecx	       ; lpString2
.text:5B8E40E3 8D 45 B4							       lea     eax, [ebp+String1]
.text:5B8E40E6 50							       push    eax	       ; lpString1
.text:5B8E40E7 FF 15 C0	10 8E 5B					       call    ds:__imp__lstrcpynW@12 ;	lstrcpynW(x,x,x)
.text:5B8E40ED 8B 4E 08							       mov     ecx, [esi+8]    ; this
.text:5B8E40F0 8D 45 B4							       lea     eax, [ebp+String1]
.text:5B8E40F3 50							       push    eax	       ; unsigned __int16 *
.text:5B8E40F4 E8 DB EC	FF FF						       call    ?Find@CExpansionVector@ATL@@QAEPBGPAG@Z ; ATL::CExpansionVector::Find(ushort *)
.text:5B8E40F9 3B C3							       cmp     eax, ebx
.text:5B8E40FB 74 3A							       jz      short loc_5B8E4137
.text:5B8E40FD 50							       push    eax	       ; unsigned __int16 *
.text:5B8E40FE 8D 4D F4							       lea     ecx, [ebp+var_C]	; this
.text:5B8E4101 E8 37 FF	FF FF						       call    ?AddString@CParseBuffer@ATL@@QAEHPBG@Z ;	ATL::CParseBuffer::AddString(ushort const *)
.text:5B8E4106 EB 07							       jmp     short loc_5B8E410F
.text:5B8E4108						       ; ---------------------------------------------------------------------------
.text:5B8E4108
.text:5B8E4108						       loc_5B8E4108:			       ; CODE XREF: ATL::CRegParser::PreProcessBuffer(ushort *,ushort *	*)+AEj
.text:5B8E4108 8B CE							       mov     ecx, esi	       ; this
.text:5B8E410A E8 93 EA	FF FF						       call    ?IncrementLinePos@CRegParser@ATL@@IAEXXZ	; ATL::CRegParser::IncrementLinePos(void)
.text:5B8E410F
.text:5B8E410F						       loc_5B8E410F:			       ; CODE XREF: ATL::CRegParser::PreProcessBuffer(ushort *,ushort *	*)+A3j
.text:5B8E410F 39 3E							       cmp     [esi], edi
.text:5B8E4111 75 F5							       jnz     short loc_5B8E4108
.text:5B8E4113 EB 09							       jmp     short loc_5B8E411E
.text:5B8E4115						       ; ---------------------------------------------------------------------------
.text:5B8E4115
.text:5B8E4115						       loc_5B8E4115:			       ; CODE XREF: ATL::CRegParser::PreProcessBuffer(ushort *,ushort *	*)+56j
.text:5B8E4115 50							       push    eax	       ; unsigned __int16
.text:5B8E4116
.text:5B8E4116						       loc_5B8E4116:			       ; CODE XREF: ATL::CRegParser::PreProcessBuffer(ushort *,ushort *	*)+65j
.text:5B8E4116 8D 4D F4							       lea     ecx, [ebp+var_C]	; this
.text:5B8E4119 E8 74 EB	FF FF						       call    ?AddChar@CParseBuffer@ATL@@QAEHG@Z ; ATL::CParseBuffer::AddChar(ushort)
.text:5B8E411E
.text:5B8E411E						       loc_5B8E411E:			       ; CODE XREF: ATL::CRegParser::PreProcessBuffer(ushort *,ushort *	*)+B0j
.text:5B8E411E 8B CE							       mov     ecx, esi	       ; this
.text:5B8E4120 E8 7D EA	FF FF						       call    ?IncrementLinePos@CRegParser@ATL@@IAEXXZ	; ATL::CRegParser::IncrementLinePos(void)
.text:5B8E4125 8B 06							       mov     eax, [esi]
.text:5B8E4127 66 39 18							       cmp     [eax], bx
.text:5B8E412A 75 82							       jnz     short loc_5B8E40AE
.text:5B8E412C EB 10							       jmp     short loc_5B8E413E
.text:5B8E412E						       ; ---------------------------------------------------------------------------
.text:5B8E412E
.text:5B8E412E						       loc_5B8E412E:			       ; CODE XREF: ATL::CRegParser::PreProcessBuffer(ushort *,ushort *	*)+7Bj
.text:5B8E412E C7 45 08	05 40 00 80					       mov     [ebp+lpString], 80004005h
.text:5B8E4135 EB 07							       jmp     short loc_5B8E413E
.text:5B8E4137						       ; ---------------------------------------------------------------------------
.text:5B8E4137
.text:5B8E4137						       loc_5B8E4137:			       ; CODE XREF: ATL::CRegParser::PreProcessBuffer(ushort *,ushort *	*)+70j
.text:5B8E4137											       ; ATL::CRegParser::PreProcessBuffer(ushort *,ushort * *)+98j
.text:5B8E4137 C7 45 08	09 00 02 80					       mov     [ebp+lpString], 80020009h
.text:5B8E413E
.text:5B8E413E						       loc_5B8E413E:			       ; CODE XREF: ATL::CRegParser::PreProcessBuffer(ushort *,ushort *	*)+45j
.text:5B8E413E											       ; ATL::CRegParser::PreProcessBuffer(ushort *,ushort * *)+C9j ...
.text:5B8E413E 53							       push    ebx	       ; unsigned __int16
.text:5B8E413F 8D 4D F4							       lea     ecx, [ebp+var_C]	; this
.text:5B8E4142 E8 4B EB	FF FF						       call    ?AddChar@CParseBuffer@ATL@@QAEHG@Z ; ATL::CParseBuffer::AddChar(ushort)
.text:5B8E4147 39 5D 08							       cmp     [ebp+lpString], ebx
.text:5B8E414A 7C 0B							       jl      short loc_5B8E4157
.text:5B8E414C 8B 45 FC							       mov     eax, [ebp+pv]
.text:5B8E414F 8B 4D 0C							       mov     ecx, [ebp+arg_4]
.text:5B8E4152 89 5D FC							       mov     [ebp+pv], ebx
.text:5B8E4155 89 01							       mov     [ecx], eax
.text:5B8E4157
.text:5B8E4157						       loc_5B8E4157:			       ; CODE XREF: ATL::CRegParser::PreProcessBuffer(ushort *,ushort *	*)+E7j
.text:5B8E4157 FF 75 FC							       push    [ebp+pv]	       ; pv
.text:5B8E415A FF 15 98	11 8E 5B					       call    ds:__imp__CoTaskMemFree@4 ; CoTaskMemFree(x)
.text:5B8E4160 8B 45 08							       mov     eax, [ebp+lpString]
.text:5B8E4163
.text:5B8E4163						       loc_5B8E4163:			       ; CODE XREF: ATL::CRegParser::PreProcessBuffer(ushort *,ushort *	*)+38j
.text:5B8E4163 5F							       pop     edi
.text:5B8E4164 5E							       pop     esi
.text:5B8E4165 5B							       pop     ebx
.text:5B8E4166 C9							       leave
.text:5B8E4167 C2 08 00							       retn    8
.text:5B8E4167						       ?PreProcessBuffer@CRegParser@ATL@@QAEJPAGPAPAG@Z	endp
.text:5B8E4167
.text:5B8E416A
.text:5B8E416A						       ; =============== S U B R O U T I N E =======================================
.text:5B8E416A
.text:5B8E416A						       ; Attributes: bp-based frame
.text:5B8E416A
.text:5B8E416A						       ; __int32 __thiscall ATL::CComVariant::WriteToStream(VARIANTARG *pvarSrc, LPPERSISTSTREAM pPStm)
.text:5B8E416A						       ?WriteToStream@CComVariant@ATL@@QAEJPAUIStream@@@Z proc near
.text:5B8E416A											       ; CODE XREF: ATL::CComControlBase::IPersistStreamInit_Save(IStream *,int,ATL::ATL_PROPMAP_ENTRY *)+ABp
.text:5B8E416A
.text:5B8E416A						       pvarg	       = VARIANTARG ptr	-10h
.text:5B8E416A						       pPStm	       = dword ptr  8
.text:5B8E416A
.text:5B8E416A 55							       push    ebp
.text:5B8E416B 8B EC							       mov     ebp, esp
.text:5B8E416D 83 EC 10							       sub     esp, 10h
.text:5B8E4170 53							       push    ebx
.text:5B8E4171 56							       push    esi
.text:5B8E4172 57							       push    edi
.text:5B8E4173 8B 7D 08							       mov     edi, [ebp+pPStm]
.text:5B8E4176 8B 07							       mov     eax, [edi]
.text:5B8E4178 33 DB							       xor     ebx, ebx
.text:5B8E417A 53							       push    ebx
.text:5B8E417B 6A 02							       push    2
.text:5B8E417D 8B F1							       mov     esi, ecx
.text:5B8E417F 56							       push    esi
.text:5B8E4180 57							       push    edi
.text:5B8E4181 FF 50 10							       call    dword ptr [eax+10h]
.text:5B8E4184 3B C3							       cmp     eax, ebx
.text:5B8E4186 0F 8C EF	00 00 00					       jl      loc_5B8E427B
.text:5B8E418C 0F B7 06							       movzx   eax, word ptr [esi]
.text:5B8E418F 83 C0 FE							       add     eax, 0FFFFFFFEh
.text:5B8E4192 83 F8 15							       cmp     eax, 15h	       ; switch	22 cases
.text:5B8E4195 77 7F							       ja      short loc_5B8E4216 ; jumptable 5B8E419E default case
.text:5B8E4197 0F B6 80	9A 42 8E 5B					       movzx   eax, ds:byte_5B8E429A[eax]
.text:5B8E419E FF 24 85	82 42 8E 5B					       jmp     ds:off_5B8E4282[eax*4] ;	switch jump
.text:5B8E41A5						       ; ---------------------------------------------------------------------------
.text:5B8E41A5
.text:5B8E41A5						       loc_5B8E41A5:			       ; CODE XREF: ATL::CComVariant::WriteToStream(IStream *)+34j
.text:5B8E41A5											       ; DATA XREF: .text:off_5B8E4282o
.text:5B8E41A5 8B 76 08							       mov     esi, [esi+8]    ; jumptable 5B8E419E cases 7,11
.text:5B8E41A8 3B F3							       cmp     esi, ebx
.text:5B8E41AA 89 5D 08							       mov     [ebp+pPStm], ebx
.text:5B8E41AD 74 25							       jz      short loc_5B8E41D4
.text:5B8E41AF 8B 06							       mov     eax, [esi]
.text:5B8E41B1 8D 4D 08							       lea     ecx, [ebp+pPStm]
.text:5B8E41B4 51							       push    ecx
.text:5B8E41B5 68 4C 1A	8E 5B						       push    offset _IID_IPersistStream
.text:5B8E41BA 56							       push    esi
.text:5B8E41BB FF 10							       call    dword ptr [eax]
.text:5B8E41BD 8B F0							       mov     esi, eax
.text:5B8E41BF 3B F3							       cmp     esi, ebx
.text:5B8E41C1 7C 1F							       jl      short loc_5B8E41E2
.text:5B8E41C3 39 5D 08							       cmp     [ebp+pPStm], ebx
.text:5B8E41C6 74 0C							       jz      short loc_5B8E41D4
.text:5B8E41C8 57							       push    edi	       ; pStm
.text:5B8E41C9 FF 75 08							       push    [ebp+pPStm]     ; pPStm
.text:5B8E41CC FF 15 A8	11 8E 5B					       call    ds:__imp__OleSaveToStream@8 ; OleSaveToStream(x,x)
.text:5B8E41D2 EB 0C							       jmp     short loc_5B8E41E0
.text:5B8E41D4						       ; ---------------------------------------------------------------------------
.text:5B8E41D4
.text:5B8E41D4						       loc_5B8E41D4:			       ; CODE XREF: ATL::CComVariant::WriteToStream(IStream *)+43j
.text:5B8E41D4											       ; ATL::CComVariant::WriteToStream(IStream *)+5Cj
.text:5B8E41D4 68 2C 1A	8E 5B						       push    offset _GUID_NULL ; rclsid
.text:5B8E41D9 57							       push    edi	       ; pStm
.text:5B8E41DA FF 15 AC	11 8E 5B					       call    ds:__imp__WriteClassStm@8 ; WriteClassStm(x,x)
.text:5B8E41E0
.text:5B8E41E0						       loc_5B8E41E0:			       ; CODE XREF: ATL::CComVariant::WriteToStream(IStream *)+68j
.text:5B8E41E0 8B F0							       mov     esi, eax
.text:5B8E41E2
.text:5B8E41E2						       loc_5B8E41E2:			       ; CODE XREF: ATL::CComVariant::WriteToStream(IStream *)+57j
.text:5B8E41E2 8B 45 08							       mov     eax, [ebp+pPStm]
.text:5B8E41E5 3B C3							       cmp     eax, ebx
.text:5B8E41E7 0F 84 8C	00 00 00					       jz      loc_5B8E4279
.text:5B8E41ED 8B 08							       mov     ecx, [eax]
.text:5B8E41EF 50							       push    eax
.text:5B8E41F0 FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E41F3 E9 81 00	00 00						       jmp     loc_5B8E4279
.text:5B8E41F8						       ; ---------------------------------------------------------------------------
.text:5B8E41F8
.text:5B8E41F8						       loc_5B8E41F8:			       ; CODE XREF: ATL::CComVariant::WriteToStream(IStream *)+34j
.text:5B8E41F8											       ; DATA XREF: .text:off_5B8E4282o
.text:5B8E41F8 33 C0							       xor     eax, eax	       ; jumptable 5B8E419E cases 14,15
.text:5B8E41FA 40							       inc     eax
.text:5B8E41FB EB 0B							       jmp     short loc_5B8E4208
.text:5B8E41FD						       ; ---------------------------------------------------------------------------
.text:5B8E41FD
.text:5B8E41FD						       loc_5B8E41FD:			       ; CODE XREF: ATL::CComVariant::WriteToStream(IStream *)+34j
.text:5B8E41FD											       ; DATA XREF: .text:off_5B8E4282o
.text:5B8E41FD 6A 02							       push    2	       ; jumptable 5B8E419E cases 0,9,16
.text:5B8E41FF EB 06							       jmp     short loc_5B8E4207
.text:5B8E4201						       ; ---------------------------------------------------------------------------
.text:5B8E4201
.text:5B8E4201						       loc_5B8E4201:			       ; CODE XREF: ATL::CComVariant::WriteToStream(IStream *)+34j
.text:5B8E4201											       ; DATA XREF: .text:off_5B8E4282o
.text:5B8E4201 6A 04							       push    4	       ; jumptable 5B8E419E cases 1,2,8,17,20,21
.text:5B8E4203 EB 02							       jmp     short loc_5B8E4207
.text:5B8E4205						       ; ---------------------------------------------------------------------------
.text:5B8E4205
.text:5B8E4205						       loc_5B8E4205:			       ; CODE XREF: ATL::CComVariant::WriteToStream(IStream *)+34j
.text:5B8E4205											       ; DATA XREF: .text:off_5B8E4282o
.text:5B8E4205 6A 08							       push    8	       ; jumptable 5B8E419E cases 3-5
.text:5B8E4207
.text:5B8E4207						       loc_5B8E4207:			       ; CODE XREF: ATL::CComVariant::WriteToStream(IStream *)+95j
.text:5B8E4207											       ; ATL::CComVariant::WriteToStream(IStream *)+99j
.text:5B8E4207 58							       pop     eax
.text:5B8E4208
.text:5B8E4208						       loc_5B8E4208:			       ; CODE XREF: ATL::CComVariant::WriteToStream(IStream *)+91j
.text:5B8E4208 8B 0F							       mov     ecx, [edi]
.text:5B8E420A 53							       push    ebx
.text:5B8E420B 50							       push    eax
.text:5B8E420C 83 C6 08							       add     esi, 8
.text:5B8E420F 56							       push    esi
.text:5B8E4210 57							       push    edi
.text:5B8E4211 FF 51 10							       call    dword ptr [ecx+10h]
.text:5B8E4214 EB 65							       jmp     short loc_5B8E427B
.text:5B8E4216						       ; ---------------------------------------------------------------------------
.text:5B8E4216
.text:5B8E4216						       loc_5B8E4216:			       ; CODE XREF: ATL::CComVariant::WriteToStream(IStream *)+2Bj
.text:5B8E4216											       ; ATL::CComVariant::WriteToStream(IStream *)+34j
.text:5B8E4216											       ; DATA XREF: ...
.text:5B8E4216 8D 45 F0							       lea     eax, [ebp+pvarg]	; jumptable 5B8E419E default case
.text:5B8E4219 50							       push    eax	       ; pvarg
.text:5B8E421A 89 5D 08							       mov     [ebp+pPStm], ebx
.text:5B8E421D FF 15 E4	10 8E 5B					       call    ds:__imp__VariantInit@4 ; VariantInit(x)
.text:5B8E4223 66 83 3E	08						       cmp     word ptr	[esi], 8
.text:5B8E4227 74 27							       jz      short loc_5B8E4250
.text:5B8E4229 6A 08							       push    8	       ; vt
.text:5B8E422B 6A 01							       push    1	       ; wFlags
.text:5B8E422D 56							       push    esi	       ; pvarSrc
.text:5B8E422E 8D 45 F0							       lea     eax, [ebp+pvarg]
.text:5B8E4231 50							       push    eax	       ; pvargDest
.text:5B8E4232 FF 15 D0	10 8E 5B					       call    ds:__imp__VariantChangeType@16 ;	VariantChangeType(x,x,x,x)
.text:5B8E4238 8B F0							       mov     esi, eax
.text:5B8E423A 3B F3							       cmp     esi, ebx
.text:5B8E423C 7D 0D							       jge     short loc_5B8E424B
.text:5B8E423E 8D 45 F0							       lea     eax, [ebp+pvarg]
.text:5B8E4241 50							       push    eax	       ; pvarg
.text:5B8E4242 FF 15 C8	10 8E 5B					       call    ds:__imp__VariantClear@4	; VariantClear(x)
.text:5B8E4248 53							       push    ebx
.text:5B8E4249 EB 28							       jmp     short loc_5B8E4273
.text:5B8E424B						       ; ---------------------------------------------------------------------------
.text:5B8E424B
.text:5B8E424B						       loc_5B8E424B:			       ; CODE XREF: ATL::CComVariant::WriteToStream(IStream *)+D2j
.text:5B8E424B FF 75 F8							       push    dword ptr [ebp+pvarg.anonymous_0+8]
.text:5B8E424E EB 03							       jmp     short loc_5B8E4253
.text:5B8E4250						       ; ---------------------------------------------------------------------------
.text:5B8E4250
.text:5B8E4250						       loc_5B8E4250:			       ; CODE XREF: ATL::CComVariant::WriteToStream(IStream *)+BDj
.text:5B8E4250 FF 76 08							       push    dword ptr [esi+8] ; psz
.text:5B8E4253
.text:5B8E4253						       loc_5B8E4253:			       ; CODE XREF: ATL::CComVariant::WriteToStream(IStream *)+E4j
.text:5B8E4253 8D 4D 08							       lea     ecx, [ebp+pPStm]
.text:5B8E4256 E8 21 EC	FF FF						       call    ??4CComBSTR@ATL@@QAEAAV01@PBG@Z ; ATL::CComBSTR::operator=(ushort const *)
.text:5B8E425B 57							       push    edi	       ; struct	IStream	*
.text:5B8E425C 8D 4D 08							       lea     ecx, [ebp+pPStm]	; this
.text:5B8E425F E8 88 EC	FF FF						       call    ?WriteToStream@CComBSTR@ATL@@QAEJPAUIStream@@@Z ; ATL::CComBSTR::WriteToStream(IStream *)
.text:5B8E4264 8B F0							       mov     esi, eax
.text:5B8E4266 8D 45 F0							       lea     eax, [ebp+pvarg]
.text:5B8E4269 50							       push    eax	       ; pvarg
.text:5B8E426A FF 15 C8	10 8E 5B					       call    ds:__imp__VariantClear@4	; VariantClear(x)
.text:5B8E4270 FF 75 08							       push    [ebp+pPStm]     ; bstrString
.text:5B8E4273
.text:5B8E4273						       loc_5B8E4273:			       ; CODE XREF: ATL::CComVariant::WriteToStream(IStream *)+DFj
.text:5B8E4273 FF 15 E0	10 8E 5B					       call    ds:__imp__SysFreeString@4 ; SysFreeString(x)
.text:5B8E4279
.text:5B8E4279						       loc_5B8E4279:			       ; CODE XREF: ATL::CComVariant::WriteToStream(IStream *)+7Dj
.text:5B8E4279											       ; ATL::CComVariant::WriteToStream(IStream *)+89j
.text:5B8E4279 8B C6							       mov     eax, esi
.text:5B8E427B
.text:5B8E427B						       loc_5B8E427B:			       ; CODE XREF: ATL::CComVariant::WriteToStream(IStream *)+1Cj
.text:5B8E427B											       ; ATL::CComVariant::WriteToStream(IStream *)+AAj
.text:5B8E427B 5F							       pop     edi
.text:5B8E427C 5E							       pop     esi
.text:5B8E427D 5B							       pop     ebx
.text:5B8E427E C9							       leave
.text:5B8E427F C2 04 00							       retn    4
.text:5B8E427F						       ?WriteToStream@CComVariant@ATL@@QAEJPAUIStream@@@Z endp
.text:5B8E427F
.text:5B8E427F						       ; ---------------------------------------------------------------------------
.text:5B8E4282 FD 41 8E	5B 01 42 8E 5B 05 42 8E	5B A5 41 8E 5B+off_5B8E4282    dd offset loc_5B8E41FD  ; DATA XREF: ATL::CComVariant::WriteToStream(IStream *)+34r
.text:5B8E4282 F8 41 8E	5B 16 42 8E 5B					       dd offset loc_5B8E4201  ; jump table for	switch statement
.text:5B8E4282								       dd offset loc_5B8E4205
.text:5B8E4282								       dd offset loc_5B8E41A5
.text:5B8E4282								       dd offset loc_5B8E41F8
.text:5B8E4282								       dd offset loc_5B8E4216
.text:5B8E429A 00 01 01	02 02 02 05 03 01 00 05	03 05 05 04 04+byte_5B8E429A   db      0,     1,     1,	    2
.text:5B8E429A 00 01 05	05 01 01								       ; DATA XREF: ATL::CComVariant::WriteToStream(IStream *)+2Dr
.text:5B8E429A								       db      2,     2,     5,	    3 ;	indirect table for switch statement
.text:5B8E429A								       db      1,     0,     5,	    3
.text:5B8E429A								       db      5,     5,     4,	    4
.text:5B8E429A								       db      0,     1,     5,	    5
.text:5B8E429A								       db      1,     1
.text:5B8E42B0
.text:5B8E42B0						       ; =============== S U B R O U T I N E =======================================
.text:5B8E42B0
.text:5B8E42B0						       ; Attributes: bp-based frame
.text:5B8E42B0
.text:5B8E42B0						       ; __int32 __thiscall ATL::CRegKey::RecurseDeleteKey(ATL::CRegKey	*this, const unsigned __int16 *)
.text:5B8E42B0						       ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBG@Z	proc near
.text:5B8E42B0											       ; CODE XREF: ATL::CRegKey::RecurseDeleteKey(ushort const	*)+38p
.text:5B8E42B0											       ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+D0p ...
.text:5B8E42B0
.text:5B8E42B0						       Name	       = word ptr -210h
.text:5B8E42B0						       ftLastWriteTime = _FILETIME ptr -10h
.text:5B8E42B0						       cchName	       = dword ptr -8
.text:5B8E42B0						       hKey	       = dword ptr -4
.text:5B8E42B0						       lpSubKey	       = dword ptr  8
.text:5B8E42B0
.text:5B8E42B0 55							       push    ebp
.text:5B8E42B1 8B EC							       mov     ebp, esp
.text:5B8E42B3 81 EC 10	02 00 00					       sub     esp, 210h
.text:5B8E42B9 53							       push    ebx
.text:5B8E42BA 56							       push    esi
.text:5B8E42BB 68 3F 00	0F 00						       push    0F003Fh	       ; samDesired
.text:5B8E42C0 FF 75 08							       push    [ebp+lpSubKey]  ; lpSubKey
.text:5B8E42C3 8B D9							       mov     ebx, ecx
.text:5B8E42C5 FF 33							       push    dword ptr [ebx] ; hKey
.text:5B8E42C7 33 F6							       xor     esi, esi
.text:5B8E42C9 8D 4D FC							       lea     ecx, [ebp+hKey] ; this
.text:5B8E42CC 89 75 FC							       mov     [ebp+hKey], esi
.text:5B8E42CF E8 65 F0	FF FF						       call    ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBGK@Z	; ATL::CRegKey::Open(HKEY__ *,ushort const *,ulong)
.text:5B8E42D4 3B C6							       cmp     eax, esi
.text:5B8E42D6 75 50							       jnz     short loc_5B8E4328
.text:5B8E42D8 57							       push    edi
.text:5B8E42D9 8B 3D 1C	10 8E 5B					       mov     edi, ds:__imp__RegEnumKeyExW@32 ; RegEnumKeyExW(x,x,x,x,x,x,x,x)
.text:5B8E42DF EB 10							       jmp     short loc_5B8E42F1
.text:5B8E42E1						       ; ---------------------------------------------------------------------------
.text:5B8E42E1
.text:5B8E42E1						       loc_5B8E42E1:			       ; CODE XREF: ATL::CRegKey::RecurseDeleteKey(ushort const	*)+65j
.text:5B8E42E1 8D 85 F0	FD FF FF					       lea     eax, [ebp+Name]
.text:5B8E42E7 50							       push    eax	       ; unsigned __int16 *
.text:5B8E42E8 E8 C3 FF	FF FF						       call    ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBG@Z	; ATL::CRegKey::RecurseDeleteKey(ushort	const *)
.text:5B8E42ED 3B C6							       cmp     eax, esi
.text:5B8E42EF 75 36							       jnz     short loc_5B8E4327
.text:5B8E42F1
.text:5B8E42F1						       loc_5B8E42F1:			       ; CODE XREF: ATL::CRegKey::RecurseDeleteKey(ushort const	*)+2Fj
.text:5B8E42F1 8D 45 F0							       lea     eax, [ebp+ftLastWriteTime]
.text:5B8E42F4 50							       push    eax	       ; lpftLastWriteTime
.text:5B8E42F5 56							       push    esi	       ; lpcchClass
.text:5B8E42F6 56							       push    esi	       ; lpClass
.text:5B8E42F7 56							       push    esi	       ; lpReserved
.text:5B8E42F8 8D 45 F8							       lea     eax, [ebp+cchName]
.text:5B8E42FB 50							       push    eax	       ; lpcchName
.text:5B8E42FC 8D 85 F0	FD FF FF					       lea     eax, [ebp+Name]
.text:5B8E4302 50							       push    eax	       ; lpName
.text:5B8E4303 56							       push    esi	       ; dwIndex
.text:5B8E4304 FF 75 FC							       push    [ebp+hKey]      ; hKey
.text:5B8E4307 C7 45 F8	00 01 00 00					       mov     [ebp+cchName], 100h
.text:5B8E430E FF D7							       call    edi ; RegEnumKeyExW(x,x,x,x,x,x,x,x) ; RegEnumKeyExW(x,x,x,x,x,x,x,x)
.text:5B8E4310 85 C0							       test    eax, eax
.text:5B8E4312 8D 4D FC							       lea     ecx, [ebp+hKey] ; this
.text:5B8E4315 74 CA							       jz      short loc_5B8E42E1
.text:5B8E4317 E8 B8 EF	FF FF						       call    ?Close@CRegKey@ATL@@QAEJXZ ; ATL::CRegKey::Close(void)
.text:5B8E431C FF 75 08							       push    [ebp+lpSubKey]  ; lpSubKey
.text:5B8E431F FF 33							       push    dword ptr [ebx] ; hKey
.text:5B8E4321 FF 15 04	10 8E 5B					       call    ds:__imp__RegDeleteKeyW@8 ; RegDeleteKeyW(x,x)
.text:5B8E4327
.text:5B8E4327						       loc_5B8E4327:			       ; CODE XREF: ATL::CRegKey::RecurseDeleteKey(ushort const	*)+3Fj
.text:5B8E4327 5F							       pop     edi
.text:5B8E4328
.text:5B8E4328						       loc_5B8E4328:			       ; CODE XREF: ATL::CRegKey::RecurseDeleteKey(ushort const	*)+26j
.text:5B8E4328 8D 4D FC							       lea     ecx, [ebp+hKey] ; this
.text:5B8E432B 8B F0							       mov     esi, eax
.text:5B8E432D E8 A2 EF	FF FF						       call    ?Close@CRegKey@ATL@@QAEJXZ ; ATL::CRegKey::Close(void)
.text:5B8E4332 8B C6							       mov     eax, esi
.text:5B8E4334 5E							       pop     esi
.text:5B8E4335 5B							       pop     ebx
.text:5B8E4336 C9							       leave
.text:5B8E4337 C2 04 00							       retn    4
.text:5B8E4337						       ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBG@Z	endp
.text:5B8E4337
.text:5B8E433A
.text:5B8E433A						       ; =============== S U B R O U T I N E =======================================
.text:5B8E433A
.text:5B8E433A
.text:5B8E433A						       ; int __thiscall	ATL::CComControlBase::DoesVerbUIActivate(ATL::CComControlBase *this, __int32)
.text:5B8E433A						       ?DoesVerbUIActivate@CComControlBase@ATL@@QAEHJ@Z	proc near
.text:5B8E433A											       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+1BFp
.text:5B8E433A
.text:5B8E433A						       arg_0	       = dword ptr  4
.text:5B8E433A
.text:5B8E433A 8B 44 24	04						       mov     eax, [esp+arg_0]
.text:5B8E433E 56							       push    esi
.text:5B8E433F 57							       push    edi
.text:5B8E4340 33 FF							       xor     edi, edi
.text:5B8E4342 83 F8 FC							       cmp     eax, 0FFFFFFFCh
.text:5B8E4345 8B F1							       mov     esi, ecx
.text:5B8E4347 74 04							       jz      short loc_5B8E434D
.text:5B8E4349 85 C0							       test    eax, eax
.text:5B8E434B 75 03							       jnz     short loc_5B8E4350
.text:5B8E434D
.text:5B8E434D						       loc_5B8E434D:			       ; CODE XREF: ATL::CComControlBase::DoesVerbUIActivate(long)+Dj
.text:5B8E434D 33 FF							       xor     edi, edi
.text:5B8E434F 47							       inc     edi
.text:5B8E4350
.text:5B8E4350						       loc_5B8E4350:			       ; CODE XREF: ATL::CComControlBase::DoesVerbUIActivate(long)+11j
.text:5B8E4350 50							       push    eax	       ; __int32
.text:5B8E4351 8B CE							       mov     ecx, esi	       ; this
.text:5B8E4353 E8 D3 F0	FF FF						       call    ?DoesVerbActivate@CComControlBase@ATL@@QAEHJ@Z ;	ATL::CComControlBase::DoesVerbActivate(long)
.text:5B8E4358 85 C0							       test    eax, eax
.text:5B8E435A 74 09							       jz      short loc_5B8E4365
.text:5B8E435C 83 7E 18	00						       cmp     dword ptr [esi+18h], 0
.text:5B8E4360 75 03							       jnz     short loc_5B8E4365
.text:5B8E4362 33 FF							       xor     edi, edi
.text:5B8E4364 47							       inc     edi
.text:5B8E4365
.text:5B8E4365						       loc_5B8E4365:			       ; CODE XREF: ATL::CComControlBase::DoesVerbUIActivate(long)+20j
.text:5B8E4365											       ; ATL::CComControlBase::DoesVerbUIActivate(long)+26j
.text:5B8E4365 8B C7							       mov     eax, edi
.text:5B8E4367 5F							       pop     edi
.text:5B8E4368 5E							       pop     esi
.text:5B8E4369 C2 04 00							       retn    4
.text:5B8E4369						       ?DoesVerbUIActivate@CComControlBase@ATL@@QAEHJ@Z	endp
.text:5B8E4369
.text:5B8E436C
.text:5B8E436C						       ; =============== S U B R O U T I N E =======================================
.text:5B8E436C
.text:5B8E436C						       ; Attributes: bp-based frame
.text:5B8E436C
.text:5B8E436C						       ; __int32 __stdcall ATL::AtlModuleRegisterServer(ITypeLib *pptlib, int, const struct _GUID *)
.text:5B8E436C						       ?AtlModuleRegisterServer@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z proc near
.text:5B8E436C											       ; CODE XREF: DllRegisterServer()+9p
.text:5B8E436C
.text:5B8E436C						       var_4	       = dword ptr -4
.text:5B8E436C						       pptlib	       = dword ptr  8
.text:5B8E436C						       arg_4	       = dword ptr  0Ch
.text:5B8E436C						       arg_8	       = dword ptr  10h
.text:5B8E436C
.text:5B8E436C 55							       push    ebp
.text:5B8E436D 8B EC							       mov     ebp, esp
.text:5B8E436F 51							       push    ecx
.text:5B8E4370 8B 45 08							       mov     eax, [ebp+pptlib]
.text:5B8E4373 85 C0							       test    eax, eax
.text:5B8E4375 75 07							       jnz     short loc_5B8E437E
.text:5B8E4377 B8 57 00	07 80						       mov     eax, 80070057h
.text:5B8E437C EB 5A							       jmp     short locret_5B8E43D8
.text:5B8E437E						       ; ---------------------------------------------------------------------------
.text:5B8E437E
.text:5B8E437E						       loc_5B8E437E:			       ; CODE XREF: ATL::AtlModuleRegisterServer(ATL::_ATL_MODULE *,int,_GUID const *)+9j
.text:5B8E437E 83 65 FC	00						       and     [ebp+var_4], 0
.text:5B8E4382 53							       push    ebx
.text:5B8E4383 8B 58 10							       mov     ebx, [eax+10h]
.text:5B8E4386 56							       push    esi
.text:5B8E4387 57							       push    edi
.text:5B8E4388 8B 3B							       mov     edi, [ebx]
.text:5B8E438A 85 FF							       test    edi, edi
.text:5B8E438C 74 31							       jz      short loc_5B8E43BF
.text:5B8E438E
.text:5B8E438E						       loc_5B8E438E:			       ; CODE XREF: ATL::AtlModuleRegisterServer(ATL::_ATL_MODULE *,int,_GUID const *)+4Cj
.text:5B8E438E 8B 75 10							       mov     esi, [ebp+arg_8]
.text:5B8E4391 85 F6							       test    esi, esi
.text:5B8E4393 75 07							       jnz     short loc_5B8E439C
.text:5B8E4395 FF 53 18							       call    dword ptr [ebx+18h]
.text:5B8E4398 85 C0							       test    eax, eax
.text:5B8E439A EB 07							       jmp     short loc_5B8E43A3
.text:5B8E439C						       ; ---------------------------------------------------------------------------
.text:5B8E439C
.text:5B8E439C						       loc_5B8E439C:			       ; CODE XREF: ATL::AtlModuleRegisterServer(ATL::_ATL_MODULE *,int,_GUID const *)+27j
.text:5B8E439C 6A 04							       push    4
.text:5B8E439E 59							       pop     ecx
.text:5B8E439F 33 C0							       xor     eax, eax
.text:5B8E43A1 F3 A7							       repe cmpsd
.text:5B8E43A3
.text:5B8E43A3						       loc_5B8E43A3:			       ; CODE XREF: ATL::AtlModuleRegisterServer(ATL::_ATL_MODULE *,int,_GUID const *)+2Ej
.text:5B8E43A3 75 0C							       jnz     short loc_5B8E43B1
.text:5B8E43A5 6A 01							       push    1
.text:5B8E43A7 FF 53 04							       call    dword ptr [ebx+4]
.text:5B8E43AA 85 C0							       test    eax, eax
.text:5B8E43AC 89 45 FC							       mov     [ebp+var_4], eax
.text:5B8E43AF 7C 21							       jl      short loc_5B8E43D2
.text:5B8E43B1
.text:5B8E43B1						       loc_5B8E43B1:			       ; CODE XREF: ATL::AtlModuleRegisterServer(ATL::_ATL_MODULE *,int,_GUID const *):loc_5B8E43A3j
.text:5B8E43B1 83 C3 1C							       add     ebx, 1Ch
.text:5B8E43B4 8B 3B							       mov     edi, [ebx]
.text:5B8E43B6 85 FF							       test    edi, edi
.text:5B8E43B8 75 D4							       jnz     short loc_5B8E438E
.text:5B8E43BA 39 7D FC							       cmp     [ebp+var_4], edi
.text:5B8E43BD 7C 13							       jl      short loc_5B8E43D2
.text:5B8E43BF
.text:5B8E43BF						       loc_5B8E43BF:			       ; CODE XREF: ATL::AtlModuleRegisterServer(ATL::_ATL_MODULE *,int,_GUID const *)+20j
.text:5B8E43BF 83 7D 0C	00						       cmp     [ebp+arg_4], 0
.text:5B8E43C3 74 0D							       jz      short loc_5B8E43D2
.text:5B8E43C5 6A 00							       push    0	       ; lpString2
.text:5B8E43C7 FF 75 08							       push    [ebp+pptlib]    ; pptlib
.text:5B8E43CA E8 20 F3	FF FF						       call    ?AtlModuleRegisterTypeLib@ATL@@YGJPAU_ATL_MODULE@1@PBG@Z	; ATL::AtlModuleRegisterTypeLib(ATL::_ATL_MODULE *,ushort const	*)
.text:5B8E43CF 89 45 FC							       mov     [ebp+var_4], eax
.text:5B8E43D2
.text:5B8E43D2						       loc_5B8E43D2:			       ; CODE XREF: ATL::AtlModuleRegisterServer(ATL::_ATL_MODULE *,int,_GUID const *)+43j
.text:5B8E43D2											       ; ATL::AtlModuleRegisterServer(ATL::_ATL_MODULE *,int,_GUID const *)+51j ...
.text:5B8E43D2 8B 45 FC							       mov     eax, [ebp+var_4]
.text:5B8E43D5 5F							       pop     edi
.text:5B8E43D6 5E							       pop     esi
.text:5B8E43D7 5B							       pop     ebx
.text:5B8E43D8
.text:5B8E43D8						       locret_5B8E43D8:			       ; CODE XREF: ATL::AtlModuleRegisterServer(ATL::_ATL_MODULE *,int,_GUID const *)+10j
.text:5B8E43D8 C9							       leave
.text:5B8E43D9 C2 0C 00							       retn    0Ch
.text:5B8E43D9						       ?AtlModuleRegisterServer@ATL@@YGJPAU_ATL_MODULE@1@HPBU_GUID@@@Z endp
.text:5B8E43D9
.text:5B8E43DC
.text:5B8E43DC						       ; =============== S U B R O U T I N E =======================================
.text:5B8E43DC
.text:5B8E43DC
.text:5B8E43DC						       ; int __thiscall	ATL::CComControlBase::SetControlFocus(ATL::CComControlBase *this, int)
.text:5B8E43DC						       ?SetControlFocus@CComControlBase@ATL@@QAEHH@Z proc near
.text:5B8E43DC											       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+220p
.text:5B8E43DC
.text:5B8E43DC						       arg_0	       = dword ptr  4
.text:5B8E43DC
.text:5B8E43DC 56							       push    esi
.text:5B8E43DD 8B F1							       mov     esi, ecx
.text:5B8E43DF 8B 46 44							       mov     eax, [esi+44h]
.text:5B8E43E2 A8 02							       test    al, 2
.text:5B8E43E4 74 2C							       jz      short loc_5B8E4412
.text:5B8E43E6 A8 08							       test    al, 8
.text:5B8E43E8 75 14							       jnz     short loc_5B8E43FE
.text:5B8E43EA 83 7C 24	08 00						       cmp     [esp+4+arg_0], 0
.text:5B8E43EF 74 0D							       jz      short loc_5B8E43FE
.text:5B8E43F1 6A 00							       push    0	       ; struct	tagRECT	*
.text:5B8E43F3 6A FC							       push    0FFFFFFFCh      ; __int32
.text:5B8E43F5 E8 99 01	00 00						       call    ?InPlaceActivate@CComControlBase@ATL@@QAEJJPBUtagRECT@@@Z ; ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)
.text:5B8E43FA 85 C0							       test    eax, eax
.text:5B8E43FC 7C 60							       jl      short loc_5B8E445E
.text:5B8E43FE
.text:5B8E43FE						       loc_5B8E43FE:			       ; CODE XREF: ATL::CComControlBase::SetControlFocus(int)+Cj
.text:5B8E43FE											       ; ATL::CComControlBase::SetControlFocus(int)+13j
.text:5B8E43FE 8B 76 04							       mov     esi, [esi+4]
.text:5B8E4401 FF 74 24	08						       push    [esp+4+arg_0]
.text:5B8E4405 8B 06							       mov     eax, [esi]
.text:5B8E4407 56							       push    esi
.text:5B8E4408 FF 50 58							       call    dword ptr [eax+58h]
.text:5B8E440B F7 D8							       neg     eax
.text:5B8E440D 1B C0							       sbb     eax, eax
.text:5B8E440F 40							       inc     eax
.text:5B8E4410 EB 4E							       jmp     short loc_5B8E4460
.text:5B8E4412						       ; ---------------------------------------------------------------------------
.text:5B8E4412
.text:5B8E4412						       loc_5B8E4412:			       ; CODE XREF: ATL::CComControlBase::SetControlFocus(int)+8j
.text:5B8E4412 A8 04							       test    al, 4
.text:5B8E4414 74 48							       jz      short loc_5B8E445E
.text:5B8E4416 83 7C 24	08 00						       cmp     [esp+4+arg_0], 0
.text:5B8E441B 8B 46 3C							       mov     eax, [esi+3Ch]
.text:5B8E441E 74 04							       jz      short loc_5B8E4424
.text:5B8E4420 8B 00							       mov     eax, [eax]
.text:5B8E4422 EB 08							       jmp     short loc_5B8E442C
.text:5B8E4424						       ; ---------------------------------------------------------------------------
.text:5B8E4424
.text:5B8E4424						       loc_5B8E4424:			       ; CODE XREF: ATL::CComControlBase::SetControlFocus(int)+42j
.text:5B8E4424 FF 30							       push    dword ptr [eax] ; hWnd
.text:5B8E4426 FF 15 24	11 8E 5B					       call    ds:__imp__GetParent@4 ; GetParent(x)
.text:5B8E442C
.text:5B8E442C						       loc_5B8E442C:			       ; CODE XREF: ATL::CComControlBase::SetControlFocus(int)+46j
.text:5B8E442C F6 46 44	08						       test    byte ptr	[esi+44h], 8
.text:5B8E4430 75 1D							       jnz     short loc_5B8E444F
.text:5B8E4432 83 7C 24	08 00						       cmp     [esp+4+arg_0], 0
.text:5B8E4437 74 16							       jz      short loc_5B8E444F
.text:5B8E4439 6A 00							       push    0	       ; struct	tagRECT	*
.text:5B8E443B 6A FC							       push    0FFFFFFFCh      ; __int32
.text:5B8E443D 8B CE							       mov     ecx, esi	       ; this
.text:5B8E443F E8 4F 01	00 00						       call    ?InPlaceActivate@CComControlBase@ATL@@QAEJJPBUtagRECT@@@Z ; ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)
.text:5B8E4444 33 C9							       xor     ecx, ecx
.text:5B8E4446 85 C0							       test    eax, eax
.text:5B8E4448 0F 9D C1							       setnl   cl
.text:5B8E444B 8B C1							       mov     eax, ecx
.text:5B8E444D EB 11							       jmp     short loc_5B8E4460
.text:5B8E444F						       ; ---------------------------------------------------------------------------
.text:5B8E444F
.text:5B8E444F						       loc_5B8E444F:			       ; CODE XREF: ATL::CComControlBase::SetControlFocus(int)+54j
.text:5B8E444F											       ; ATL::CComControlBase::SetControlFocus(int)+5Bj
.text:5B8E444F 50							       push    eax	       ; hWnd
.text:5B8E4450 FF 15 08	11 8E 5B					       call    ds:__imp__SetFocus@4 ; SetFocus(x)
.text:5B8E4456 F7 D8							       neg     eax
.text:5B8E4458 1B C0							       sbb     eax, eax
.text:5B8E445A F7 D8							       neg     eax
.text:5B8E445C EB 02							       jmp     short loc_5B8E4460
.text:5B8E445E						       ; ---------------------------------------------------------------------------
.text:5B8E445E
.text:5B8E445E						       loc_5B8E445E:			       ; CODE XREF: ATL::CComControlBase::SetControlFocus(int)+20j
.text:5B8E445E											       ; ATL::CComControlBase::SetControlFocus(int)+38j
.text:5B8E445E 33 C0							       xor     eax, eax
.text:5B8E4460
.text:5B8E4460						       loc_5B8E4460:			       ; CODE XREF: ATL::CComControlBase::SetControlFocus(int)+34j
.text:5B8E4460											       ; ATL::CComControlBase::SetControlFocus(int)+71j ...
.text:5B8E4460 5E							       pop     esi
.text:5B8E4461 C2 04 00							       retn    4
.text:5B8E4461						       ?SetControlFocus@CComControlBase@ATL@@QAEHH@Z endp
.text:5B8E4461
.text:5B8E4464
.text:5B8E4464						       ; =============== S U B R O U T I N E =======================================
.text:5B8E4464
.text:5B8E4464						       ; Attributes: bp-based frame
.text:5B8E4464
.text:5B8E4464						       ; __int32 __thiscall ATL::CComControlBase::DoVerbProperties(ATL::CComControlBase	*this, const struct tagRECT *, HWND)
.text:5B8E4464						       ?DoVerbProperties@CComControlBase@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z proc near
.text:5B8E4464											       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::DoVerb(long,tagMSG *,IOleClientSite	*,long,HWND__ *,tagRECT	const *)+76p
.text:5B8E4464											       ; ATL::IOleObjectImpl<CTrialEnd>::DoVerbPrimary(tagRECT const *,HWND__ *)+4Bp
.text:5B8E4464
.text:5B8E4464						       cPages	       = dword ptr -1Ch
.text:5B8E4464						       pPageClsID      = dword ptr -18h
.text:5B8E4464						       var_14	       = dword ptr -14h
.text:5B8E4464						       lpszCaption     = dword ptr -10h
.text:5B8E4464						       var_C	       = dword ptr -0Ch
.text:5B8E4464						       var_8	       = dword ptr -8
.text:5B8E4464						       ppUnk	       = dword ptr -4
.text:5B8E4464						       hwndOwner       = dword ptr  0Ch
.text:5B8E4464
.text:5B8E4464 55							       push    ebp
.text:5B8E4465 8B EC							       mov     ebp, esp
.text:5B8E4467 83 EC 1C							       sub     esp, 1Ch
.text:5B8E446A 53							       push    ebx
.text:5B8E446B 56							       push    esi
.text:5B8E446C 57							       push    edi
.text:5B8E446D 8B F1							       mov     esi, ecx
.text:5B8E446F FF 76 10							       push    dword ptr [esi+10h]
.text:5B8E4472 33 FF							       xor     edi, edi
.text:5B8E4474 8D 4D EC							       lea     ecx, [ebp+var_14]
.text:5B8E4477 89 7D F4							       mov     [ebp+var_C], edi
.text:5B8E447A 89 7D F8							       mov     [ebp+var_8], edi
.text:5B8E447D E8 C8 EF	FF FF						       call    ??0?$CComQIPtr@UIOleControlSite@@$1?IID_IOleControlSite@@3U_GUID@@B@ATL@@QAE@PAUIUnknown@@@Z ; ATL::CComQIPtr<IOleControlSite,&_GUID const IID_IOleControlSite>::CComQIPtr<IOleControlSite,&_GUID const IID_IOleControlSite>(IUnknown *)
.text:5B8E4482 8B 45 EC							       mov     eax, [ebp+var_14]
.text:5B8E4485 3B C7							       cmp     eax, edi
.text:5B8E4487 74 3A							       jz      short loc_5B8E44C3
.text:5B8E4489 8B 08							       mov     ecx, [eax]
.text:5B8E448B 50							       push    eax
.text:5B8E448C FF 51 24							       call    dword ptr [ecx+24h]
.text:5B8E448F 8B D8							       mov     ebx, eax
.text:5B8E4491 3B DF							       cmp     ebx, edi
.text:5B8E4493 7C 2E							       jl      short loc_5B8E44C3
.text:5B8E4495 8B 45 EC							       mov     eax, [ebp+var_14]
.text:5B8E4498 3B C7							       cmp     eax, edi
.text:5B8E449A 74 06							       jz      short loc_5B8E44A2
.text:5B8E449C 8B 08							       mov     ecx, [eax]
.text:5B8E449E 50							       push    eax
.text:5B8E449F FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E44A2
.text:5B8E44A2						       loc_5B8E44A2:			       ; CODE XREF: ATL::CComControlBase::DoVerbProperties(tagRECT const *,HWND__ *)+36j
.text:5B8E44A2 8B 45 F8							       mov     eax, [ebp+var_8]
.text:5B8E44A5 3B C7							       cmp     eax, edi
.text:5B8E44A7 74 06							       jz      short loc_5B8E44AF
.text:5B8E44A9 8B 08							       mov     ecx, [eax]
.text:5B8E44AB 50							       push    eax
.text:5B8E44AC FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E44AF
.text:5B8E44AF						       loc_5B8E44AF:			       ; CODE XREF: ATL::CComControlBase::DoVerbProperties(tagRECT const *,HWND__ *)+43j
.text:5B8E44AF 8B 45 F4							       mov     eax, [ebp+var_C]
.text:5B8E44B2 3B C7							       cmp     eax, edi
.text:5B8E44B4 74 06							       jz      short loc_5B8E44BC
.text:5B8E44B6 8B 08							       mov     ecx, [eax]
.text:5B8E44B8 50							       push    eax
.text:5B8E44B9 FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E44BC
.text:5B8E44BC						       loc_5B8E44BC:			       ; CODE XREF: ATL::CComControlBase::DoVerbProperties(tagRECT const *,HWND__ *)+50j
.text:5B8E44BC 8B C3							       mov     eax, ebx
.text:5B8E44BE E9 C9 00	00 00						       jmp     loc_5B8E458C
.text:5B8E44C3						       ; ---------------------------------------------------------------------------
.text:5B8E44C3
.text:5B8E44C3						       loc_5B8E44C3:			       ; CODE XREF: ATL::CComControlBase::DoVerbProperties(tagRECT const *,HWND__ *)+23j
.text:5B8E44C3											       ; ATL::CComControlBase::DoVerbProperties(tagRECT	const *,HWND__ *)+2Fj
.text:5B8E44C3 8B 06							       mov     eax, [esi]
.text:5B8E44C5 8D 4D FC							       lea     ecx, [ebp+ppUnk]
.text:5B8E44C8 51							       push    ecx
.text:5B8E44C9 68 0C 19	8E 5B						       push    offset _IID_IUnknown
.text:5B8E44CE 8B CE							       mov     ecx, esi
.text:5B8E44D0 89 7D FC							       mov     [ebp+ppUnk], edi
.text:5B8E44D3 FF 50 04							       call    dword ptr [eax+4]
.text:5B8E44D6 68 8C 19	8E 5B						       push    offset _IID_ISpecifyPropertyPages ; struct _GUID	*
.text:5B8E44DB FF 75 FC							       push    [ebp+ppUnk]     ; struct	IUnknown *
.text:5B8E44DE 8D 45 F4							       lea     eax, [ebp+var_C]
.text:5B8E44E1 50							       push    eax	       ; struct	IUnknown **
.text:5B8E44E2 E8 3E F0	FF FF						       call    ?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z ; ATL::AtlComQIPtrAssign(IUnknown * *,IUnknown *,_GUID const &)
.text:5B8E44E7 8B 45 F4							       mov     eax, [ebp+var_C]
.text:5B8E44EA 3B C7							       cmp     eax, edi
.text:5B8E44EC 74 63							       jz      short loc_5B8E4551
.text:5B8E44EE 8B 08							       mov     ecx, [eax]
.text:5B8E44F0 8D 55 E4							       lea     edx, [ebp+cPages]
.text:5B8E44F3 52							       push    edx
.text:5B8E44F4 50							       push    eax
.text:5B8E44F5 FF 51 0C							       call    dword ptr [ecx+0Ch]
.text:5B8E44F8 68 1C 1A	8E 5B						       push    offset _IID_IOleObject ;	struct _GUID *
.text:5B8E44FD FF 75 FC							       push    [ebp+ppUnk]     ; struct	IUnknown *
.text:5B8E4500 8D 45 F8							       lea     eax, [ebp+var_8]
.text:5B8E4503 50							       push    eax	       ; struct	IUnknown **
.text:5B8E4504 E8 1C F0	FF FF						       call    ?AtlComQIPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@ABU_GUID@@@Z ; ATL::AtlComQIPtrAssign(IUnknown * *,IUnknown *,_GUID const &)
.text:5B8E4509 8B 45 F8							       mov     eax, [ebp+var_8]
.text:5B8E450C 3B C7							       cmp     eax, edi
.text:5B8E450E 74 41							       jz      short loc_5B8E4551
.text:5B8E4510 8D 55 F0							       lea     edx, [ebp+lpszCaption]
.text:5B8E4513 52							       push    edx
.text:5B8E4514 6A 02							       push    2
.text:5B8E4516 89 7D F0							       mov     [ebp+lpszCaption], edi
.text:5B8E4519 8B 08							       mov     ecx, [eax]
.text:5B8E451B 50							       push    eax
.text:5B8E451C FF 51 40							       call    dword ptr [ecx+40h]
.text:5B8E451F 57							       push    edi	       ; pvReserved
.text:5B8E4520 57							       push    edi	       ; dwReserved
.text:5B8E4521 68 00 04	00 00						       push    400h	       ; lcid
.text:5B8E4526 FF 75 E8							       push    [ebp+pPageClsID]	; pPageClsID
.text:5B8E4529 8D 45 FC							       lea     eax, [ebp+ppUnk]
.text:5B8E452C FF 75 E4							       push    [ebp+cPages]    ; cPages
.text:5B8E452F 50							       push    eax	       ; ppUnk
.text:5B8E4530 6A 01							       push    1	       ; cObjects
.text:5B8E4532 FF 75 F0							       push    [ebp+lpszCaption] ; lpszCaption
.text:5B8E4535 FF 76 2C							       push    dword ptr [esi+2Ch] ; y
.text:5B8E4538 FF 76 30							       push    dword ptr [esi+30h] ; x
.text:5B8E453B FF 75 0C							       push    [ebp+hwndOwner] ; hwndOwner
.text:5B8E453E FF 15 F8	10 8E 5B					       call    ds:__imp__OleCreatePropertyFrame@44 ; OleCreatePropertyFrame(x,x,x,x,x,x,x,x,x,x,x)
.text:5B8E4544 FF 75 F0							       push    [ebp+lpszCaption] ; pv
.text:5B8E4547 8B F0							       mov     esi, eax
.text:5B8E4549 FF 15 98	11 8E 5B					       call    ds:__imp__CoTaskMemFree@4 ; CoTaskMemFree(x)
.text:5B8E454F EB 05							       jmp     short loc_5B8E4556
.text:5B8E4551						       ; ---------------------------------------------------------------------------
.text:5B8E4551
.text:5B8E4551						       loc_5B8E4551:			       ; CODE XREF: ATL::CComControlBase::DoVerbProperties(tagRECT const *,HWND__ *)+88j
.text:5B8E4551											       ; ATL::CComControlBase::DoVerbProperties(tagRECT	const *,HWND__ *)+AAj
.text:5B8E4551 BE 81 01	04 00						       mov     esi, 40181h
.text:5B8E4556
.text:5B8E4556						       loc_5B8E4556:			       ; CODE XREF: ATL::CComControlBase::DoVerbProperties(tagRECT const *,HWND__ *)+EBj
.text:5B8E4556 8B 45 FC							       mov     eax, [ebp+ppUnk]
.text:5B8E4559 3B C7							       cmp     eax, edi
.text:5B8E455B 74 06							       jz      short loc_5B8E4563
.text:5B8E455D 8B 08							       mov     ecx, [eax]
.text:5B8E455F 50							       push    eax
.text:5B8E4560 FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E4563
.text:5B8E4563						       loc_5B8E4563:			       ; CODE XREF: ATL::CComControlBase::DoVerbProperties(tagRECT const *,HWND__ *)+F7j
.text:5B8E4563 8B 45 EC							       mov     eax, [ebp+var_14]
.text:5B8E4566 3B C7							       cmp     eax, edi
.text:5B8E4568 74 06							       jz      short loc_5B8E4570
.text:5B8E456A 8B 08							       mov     ecx, [eax]
.text:5B8E456C 50							       push    eax
.text:5B8E456D FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E4570
.text:5B8E4570						       loc_5B8E4570:			       ; CODE XREF: ATL::CComControlBase::DoVerbProperties(tagRECT const *,HWND__ *)+104j
.text:5B8E4570 8B 45 F8							       mov     eax, [ebp+var_8]
.text:5B8E4573 3B C7							       cmp     eax, edi
.text:5B8E4575 74 06							       jz      short loc_5B8E457D
.text:5B8E4577 8B 08							       mov     ecx, [eax]
.text:5B8E4579 50							       push    eax
.text:5B8E457A FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E457D
.text:5B8E457D						       loc_5B8E457D:			       ; CODE XREF: ATL::CComControlBase::DoVerbProperties(tagRECT const *,HWND__ *)+111j
.text:5B8E457D 8B 45 F4							       mov     eax, [ebp+var_C]
.text:5B8E4580 3B C7							       cmp     eax, edi
.text:5B8E4582 74 06							       jz      short loc_5B8E458A
.text:5B8E4584 8B 08							       mov     ecx, [eax]
.text:5B8E4586 50							       push    eax
.text:5B8E4587 FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E458A
.text:5B8E458A						       loc_5B8E458A:			       ; CODE XREF: ATL::CComControlBase::DoVerbProperties(tagRECT const *,HWND__ *)+11Ej
.text:5B8E458A 8B C6							       mov     eax, esi
.text:5B8E458C
.text:5B8E458C						       loc_5B8E458C:			       ; CODE XREF: ATL::CComControlBase::DoVerbProperties(tagRECT const *,HWND__ *)+5Aj
.text:5B8E458C 5F							       pop     edi
.text:5B8E458D 5E							       pop     esi
.text:5B8E458E 5B							       pop     ebx
.text:5B8E458F C9							       leave
.text:5B8E4590 C2 08 00							       retn    8
.text:5B8E4590						       ?DoVerbProperties@CComControlBase@ATL@@QAEJPBUtagRECT@@PAUHWND__@@@Z endp
.text:5B8E4590
.text:5B8E4593
.text:5B8E4593						       ; =============== S U B R O U T I N E =======================================
.text:5B8E4593
.text:5B8E4593						       ; Attributes: bp-based frame
.text:5B8E4593
.text:5B8E4593						       ; __int32 __thiscall ATL::CComControlBase::InPlaceActivate(ATL::CComControlBase *this, __int32, const struct tagRECT *)
.text:5B8E4593						       ?InPlaceActivate@CComControlBase@ATL@@QAEJJPBUtagRECT@@@Z proc near
.text:5B8E4593											       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::DoVerb(long,tagMSG *,IOleClientSite	*,long,HWND__ *,tagRECT	const *)+55p
.text:5B8E4593											       ; ATL::IOleObjectImpl<CTrialEnd>::DoVerbPrimary(tagRECT const *,HWND__ *)+63p ...
.text:5B8E4593
.text:5B8E4593						       var_48	       = dword ptr -48h
.text:5B8E4593						       var_34	       = byte ptr -34h
.text:5B8E4593						       var_24	       = byte ptr -24h
.text:5B8E4593						       var_14	       = dword ptr -14h
.text:5B8E4593						       var_10	       = dword ptr -10h
.text:5B8E4593						       var_C	       = dword ptr -0Ch
.text:5B8E4593						       var_8	       = dword ptr -8
.text:5B8E4593						       var_4	       = dword ptr -4
.text:5B8E4593						       arg_0	       = dword ptr  8
.text:5B8E4593						       arg_4	       = dword ptr  0Ch
.text:5B8E4593
.text:5B8E4593 55							       push    ebp
.text:5B8E4594 8B EC							       mov     ebp, esp
.text:5B8E4596 83 EC 48							       sub     esp, 48h
.text:5B8E4599 53							       push    ebx
.text:5B8E459A 56							       push    esi
.text:5B8E459B 8B F1							       mov     esi, ecx
.text:5B8E459D 33 DB							       xor     ebx, ebx
.text:5B8E459F 39 5E 10							       cmp     [esi+10h], ebx
.text:5B8E45A2 75 07							       jnz     short loc_5B8E45AB
.text:5B8E45A4 33 C0							       xor     eax, eax
.text:5B8E45A6 E9 90 02	00 00						       jmp     loc_5B8E483B
.text:5B8E45AB						       ; ---------------------------------------------------------------------------
.text:5B8E45AB
.text:5B8E45AB						       loc_5B8E45AB:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+Fj
.text:5B8E45AB 8B 06							       mov     eax, [esi]
.text:5B8E45AD 8D 4D FC							       lea     ecx, [ebp+var_4]
.text:5B8E45B0 51							       push    ecx
.text:5B8E45B1 68 EC 19	8E 5B						       push    offset _IID_IOleInPlaceObject
.text:5B8E45B6 8B CE							       mov     ecx, esi
.text:5B8E45B8 89 5D FC							       mov     [ebp+var_4], ebx
.text:5B8E45BB FF 50 04							       call    dword ptr [eax+4]
.text:5B8E45BE 39 5D 0C							       cmp     [ebp+arg_4], ebx
.text:5B8E45C1 74 0F							       jz      short loc_5B8E45D2
.text:5B8E45C3 FF 75 0C							       push    [ebp+arg_4]
.text:5B8E45C6 8B 45 FC							       mov     eax, [ebp+var_4]
.text:5B8E45C9 FF 75 0C							       push    [ebp+arg_4]
.text:5B8E45CC 8B 08							       mov     ecx, [eax]
.text:5B8E45CE 50							       push    eax
.text:5B8E45CF FF 51 1C							       call    dword ptr [ecx+1Ch]
.text:5B8E45D2
.text:5B8E45D2						       loc_5B8E45D2:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+2Ej
.text:5B8E45D2 8B 46 44							       mov     eax, [esi+44h]
.text:5B8E45D5 A8 01							       test    al, 1
.text:5B8E45D7 57							       push    edi
.text:5B8E45D8 75 6D							       jnz     short loc_5B8E4647
.text:5B8E45DA A8 40							       test    al, 40h
.text:5B8E45DC 75 11							       jnz     short loc_5B8E45EF
.text:5B8E45DE 8B 46 10							       mov     eax, [esi+10h]
.text:5B8E45E1 8B 08							       mov     ecx, [eax]
.text:5B8E45E3 8D 56 04							       lea     edx, [esi+4]
.text:5B8E45E6 52							       push    edx
.text:5B8E45E7 68 4C 19	8E 5B						       push    offset _IID_IOleInPlaceSiteWindowless
.text:5B8E45EC 50							       push    eax
.text:5B8E45ED FF 11							       call    dword ptr [ecx]
.text:5B8E45EF
.text:5B8E45EF						       loc_5B8E45EF:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+49j
.text:5B8E45EF 8D 7E 04							       lea     edi, [esi+4]
.text:5B8E45F2 8B 07							       mov     eax, [edi]
.text:5B8E45F4 3B C3							       cmp     eax, ebx
.text:5B8E45F6 74 29							       jz      short loc_5B8E4621
.text:5B8E45F8 83 4E 44	20						       or      dword ptr [esi+44h], 20h
.text:5B8E45FC 8B 08							       mov     ecx, [eax]
.text:5B8E45FE 50							       push    eax
.text:5B8E45FF FF 51 48							       call    dword ptr [ecx+48h]
.text:5B8E4602 33 C9							       xor     ecx, ecx
.text:5B8E4604 3B C3							       cmp     eax, ebx
.text:5B8E4606 8B 46 44							       mov     eax, [esi+44h]
.text:5B8E4609 0F 9D C1							       setnl   cl
.text:5B8E460C 83 E0 FD							       and     eax, 0FFFFFFFDh
.text:5B8E460F 83 E1 01							       and     ecx, 1
.text:5B8E4612 81 C9 80	00 00 00					       or      ecx, 80h
.text:5B8E4618 D1 E1							       shl     ecx, 1
.text:5B8E461A 0B C8							       or      ecx, eax
.text:5B8E461C 89 4E 44							       mov     [esi+44h], ecx
.text:5B8E461F EB 26							       jmp     short loc_5B8E4647
.text:5B8E4621						       ; ---------------------------------------------------------------------------
.text:5B8E4621
.text:5B8E4621						       loc_5B8E4621:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+63j
.text:5B8E4621 8B 46 10							       mov     eax, [esi+10h]
.text:5B8E4624 8B 08							       mov     ecx, [eax]
.text:5B8E4626 57							       push    edi
.text:5B8E4627 68 5C 19	8E 5B						       push    offset _IID_IOleInPlaceSiteEx
.text:5B8E462C 50							       push    eax
.text:5B8E462D FF 11							       call    dword ptr [ecx]
.text:5B8E462F 39 1F							       cmp     [edi], ebx
.text:5B8E4631 74 06							       jz      short loc_5B8E4639
.text:5B8E4633 83 4E 44	20						       or      dword ptr [esi+44h], 20h
.text:5B8E4637 EB 0E							       jmp     short loc_5B8E4647
.text:5B8E4639						       ; ---------------------------------------------------------------------------
.text:5B8E4639
.text:5B8E4639						       loc_5B8E4639:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+9Ej
.text:5B8E4639 8B 46 10							       mov     eax, [esi+10h]
.text:5B8E463C 8B 08							       mov     ecx, [eax]
.text:5B8E463E 57							       push    edi
.text:5B8E463F 68 DC 19	8E 5B						       push    offset _IID_IOleInPlaceSite
.text:5B8E4644 50							       push    eax
.text:5B8E4645 FF 11							       call    dword ptr [ecx]
.text:5B8E4647
.text:5B8E4647						       loc_5B8E4647:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+45j
.text:5B8E4647											       ; ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+8Cj ...
.text:5B8E4647 8B 46 04							       mov     eax, [esi+4]
.text:5B8E464A 3B C3							       cmp     eax, ebx
.text:5B8E464C 75 17							       jnz     short loc_5B8E4665
.text:5B8E464E 8B 45 FC							       mov     eax, [ebp+var_4]
.text:5B8E4651 3B C3							       cmp     eax, ebx
.text:5B8E4653 74 06							       jz      short loc_5B8E465B
.text:5B8E4655 8B 08							       mov     ecx, [eax]
.text:5B8E4657 50							       push    eax
.text:5B8E4658 FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E465B
.text:5B8E465B						       loc_5B8E465B:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+C0j
.text:5B8E465B B8 05 40	00 80						       mov     eax, 80004005h
.text:5B8E4660 E9 D5 01	00 00						       jmp     loc_5B8E483A
.text:5B8E4665						       ; ---------------------------------------------------------------------------
.text:5B8E4665
.text:5B8E4665						       loc_5B8E4665:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+B9j
.text:5B8E4665 83 4E 44	01						       or      dword ptr [esi+44h], 1
.text:5B8E4669 8B 4E 44							       mov     ecx, [esi+44h]
.text:5B8E466C F6 C1 04							       test    cl, 4
.text:5B8E466F 75 47							       jnz     short loc_5B8E46B8
.text:5B8E4671 F6 C1 02							       test    cl, 2
.text:5B8E4674 89 5D 0C							       mov     [ebp+arg_4], ebx
.text:5B8E4677 74 0E							       jz      short loc_5B8E4687
.text:5B8E4679 8B 08							       mov     ecx, [eax]
.text:5B8E467B 6A 01							       push    1
.text:5B8E467D
.text:5B8E467D						       loc_5B8E467D:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+FCj
.text:5B8E467D 8D 55 0C							       lea     edx, [ebp+arg_4]
.text:5B8E4680 52							       push    edx
.text:5B8E4681 50							       push    eax
.text:5B8E4682 FF 51 3C							       call    dword ptr [ecx+3Ch]
.text:5B8E4685 EB 31							       jmp     short loc_5B8E46B8
.text:5B8E4687						       ; ---------------------------------------------------------------------------
.text:5B8E4687
.text:5B8E4687						       loc_5B8E4687:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+E4j
.text:5B8E4687 F6 C1 20							       test    cl, 20h
.text:5B8E468A 8B 08							       mov     ecx, [eax]
.text:5B8E468C 74 03							       jz      short loc_5B8E4691
.text:5B8E468E 53							       push    ebx
.text:5B8E468F EB EC							       jmp     short loc_5B8E467D
.text:5B8E4691						       ; ---------------------------------------------------------------------------
.text:5B8E4691
.text:5B8E4691						       loc_5B8E4691:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+F9j
.text:5B8E4691 50							       push    eax
.text:5B8E4692 FF 51 14							       call    dword ptr [ecx+14h]
.text:5B8E4695 8B F8							       mov     edi, eax
.text:5B8E4697 3B FB							       cmp     edi, ebx
.text:5B8E4699 7D 14							       jge     short loc_5B8E46AF
.text:5B8E469B
.text:5B8E469B						       loc_5B8E469B:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+20Bj
.text:5B8E469B											       ; ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+217j
.text:5B8E469B 8B 45 FC							       mov     eax, [ebp+var_4]
.text:5B8E469E 3B C3							       cmp     eax, ebx
.text:5B8E46A0 74 06							       jz      short loc_5B8E46A8
.text:5B8E46A2 8B 08							       mov     ecx, [eax]
.text:5B8E46A4 50							       push    eax
.text:5B8E46A5 FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E46A8
.text:5B8E46A8						       loc_5B8E46A8:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+10Dj
.text:5B8E46A8 8B C7							       mov     eax, edi
.text:5B8E46AA E9 8B 01	00 00						       jmp     loc_5B8E483A
.text:5B8E46AF						       ; ---------------------------------------------------------------------------
.text:5B8E46AF
.text:5B8E46AF						       loc_5B8E46AF:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+106j
.text:5B8E46AF 8B 46 04							       mov     eax, [esi+4]
.text:5B8E46B2 8B 08							       mov     ecx, [eax]
.text:5B8E46B4 50							       push    eax
.text:5B8E46B5 FF 51 18							       call    dword ptr [ecx+18h]
.text:5B8E46B8
.text:5B8E46B8						       loc_5B8E46B8:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+DCj
.text:5B8E46B8											       ; ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+F2j
.text:5B8E46B8 8B 46 04							       mov     eax, [esi+4]
.text:5B8E46BB 83 4E 44	04						       or      dword ptr [esi+44h], 4
.text:5B8E46BF 8D 55 EC							       lea     edx, [ebp+var_14]
.text:5B8E46C2 52							       push    edx
.text:5B8E46C3 89 5D F0							       mov     [ebp+var_10], ebx
.text:5B8E46C6 89 5D F4							       mov     [ebp+var_C], ebx
.text:5B8E46C9 C7 45 B8	14 00 00 00					       mov     [ebp+var_48], 14h
.text:5B8E46D0 8B 08							       mov     ecx, [eax]
.text:5B8E46D2 50							       push    eax
.text:5B8E46D3 FF 51 0C							       call    dword ptr [ecx+0Ch]
.text:5B8E46D6 85 C0							       test    eax, eax
.text:5B8E46D8 75 60							       jnz     short loc_5B8E473A
.text:5B8E46DA 8B 46 04							       mov     eax, [esi+4]
.text:5B8E46DD 8B 08							       mov     ecx, [eax]
.text:5B8E46DF 8D 55 B8							       lea     edx, [ebp+var_48]
.text:5B8E46E2 52							       push    edx
.text:5B8E46E3 8D 55 CC							       lea     edx, [ebp+var_34]
.text:5B8E46E6 52							       push    edx
.text:5B8E46E7 8D 55 DC							       lea     edx, [ebp+var_24]
.text:5B8E46EA 52							       push    edx
.text:5B8E46EB 8D 55 F4							       lea     edx, [ebp+var_C]
.text:5B8E46EE 52							       push    edx
.text:5B8E46EF 8D 55 F0							       lea     edx, [ebp+var_10]
.text:5B8E46F2 52							       push    edx
.text:5B8E46F3 50							       push    eax
.text:5B8E46F4 FF 51 20							       call    dword ptr [ecx+20h]
.text:5B8E46F7 F6 46 44	02						       test    byte ptr	[esi+44h], 2
.text:5B8E46FB 75 2C							       jnz     short loc_5B8E4729
.text:5B8E46FD 8B 46 3C							       mov     eax, [esi+3Ch]
.text:5B8E4700 8B 00							       mov     eax, [eax]
.text:5B8E4702 3B C3							       cmp     eax, ebx
.text:5B8E4704 74 16							       jz      short loc_5B8E471C
.text:5B8E4706 6A 05							       push    5	       ; nCmdShow
.text:5B8E4708 50							       push    eax	       ; hWnd
.text:5B8E4709 FF 15 54	11 8E 5B					       call    ds:__imp__ShowWindow@8 ;	ShowWindow(x,x)
.text:5B8E470F 8B 46 3C							       mov     eax, [esi+3Ch]
.text:5B8E4712 FF 30							       push    dword ptr [eax] ; hWnd
.text:5B8E4714 FF 15 08	11 8E 5B					       call    ds:__imp__SetFocus@4 ; SetFocus(x)
.text:5B8E471A EB 0D							       jmp     short loc_5B8E4729
.text:5B8E471C						       ; ---------------------------------------------------------------------------
.text:5B8E471C
.text:5B8E471C						       loc_5B8E471C:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+171j
.text:5B8E471C 8B 06							       mov     eax, [esi]
.text:5B8E471E 8D 4D DC							       lea     ecx, [ebp+var_24]
.text:5B8E4721 51							       push    ecx
.text:5B8E4722 FF 75 EC							       push    [ebp+var_14]
.text:5B8E4725 8B CE							       mov     ecx, esi
.text:5B8E4727 FF 10							       call    dword ptr [eax]
.text:5B8E4729
.text:5B8E4729						       loc_5B8E4729:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+168j
.text:5B8E4729											       ; ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+187j
.text:5B8E4729 8B 45 FC							       mov     eax, [ebp+var_4]
.text:5B8E472C 8B 08							       mov     ecx, [eax]
.text:5B8E472E 8D 55 CC							       lea     edx, [ebp+var_34]
.text:5B8E4731 52							       push    edx
.text:5B8E4732 8D 55 DC							       lea     edx, [ebp+var_24]
.text:5B8E4735 52							       push    edx
.text:5B8E4736 50							       push    eax
.text:5B8E4737 FF 51 1C							       call    dword ptr [ecx+1Ch]
.text:5B8E473A
.text:5B8E473A						       loc_5B8E473A:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+145j
.text:5B8E473A 8B 06							       mov     eax, [esi]
.text:5B8E473C 8D 4D F8							       lea     ecx, [ebp+var_8]
.text:5B8E473F 51							       push    ecx
.text:5B8E4740 68 FC 19	8E 5B						       push    offset _IID_IOleInPlaceActiveObject
.text:5B8E4745 8B CE							       mov     ecx, esi
.text:5B8E4747 89 5D F8							       mov     [ebp+var_8], ebx
.text:5B8E474A FF 50 04							       call    dword ptr [eax+4]
.text:5B8E474D FF 75 08							       push    [ebp+arg_0]     ; __int32
.text:5B8E4750 8B CE							       mov     ecx, esi	       ; this
.text:5B8E4752 E8 E3 FB	FF FF						       call    ?DoesVerbUIActivate@CComControlBase@ATL@@QAEHJ@Z	; ATL::CComControlBase::DoesVerbUIActivate(long)
.text:5B8E4757 85 C0							       test    eax, eax
.text:5B8E4759 0F 84 9C	00 00 00					       jz      loc_5B8E47FB
.text:5B8E475F 8B 46 44							       mov     eax, [esi+44h]
.text:5B8E4762 A8 08							       test    al, 8
.text:5B8E4764 0F 85 91	00 00 00					       jnz     loc_5B8E47FB
.text:5B8E476A 83 C8 08							       or      eax, 8
.text:5B8E476D 89 46 44							       mov     [esi+44h], eax
.text:5B8E4770 8B 46 04							       mov     eax, [esi+4]
.text:5B8E4773 8B 08							       mov     ecx, [eax]
.text:5B8E4775 50							       push    eax
.text:5B8E4776 FF 51 1C							       call    dword ptr [ecx+1Ch]
.text:5B8E4779 8B F8							       mov     edi, eax
.text:5B8E477B 3B FB							       cmp     edi, ebx
.text:5B8E477D 7D 30							       jge     short loc_5B8E47AF
.text:5B8E477F 8B 45 F8							       mov     eax, [ebp+var_8]
.text:5B8E4782 3B C3							       cmp     eax, ebx
.text:5B8E4784 74 06							       jz      short loc_5B8E478C
.text:5B8E4786 8B 08							       mov     ecx, [eax]
.text:5B8E4788 50							       push    eax
.text:5B8E4789 FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E478C
.text:5B8E478C						       loc_5B8E478C:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+1F1j
.text:5B8E478C 8B 45 F4							       mov     eax, [ebp+var_C]
.text:5B8E478F 3B C3							       cmp     eax, ebx
.text:5B8E4791 74 06							       jz      short loc_5B8E4799
.text:5B8E4793 8B 08							       mov     ecx, [eax]
.text:5B8E4795 50							       push    eax
.text:5B8E4796 FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E4799
.text:5B8E4799						       loc_5B8E4799:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+1FEj
.text:5B8E4799 8B 45 F0							       mov     eax, [ebp+var_10]
.text:5B8E479C 3B C3							       cmp     eax, ebx
.text:5B8E479E 0F 84 F7	FE FF FF					       jz      loc_5B8E469B
.text:5B8E47A4 8B 08							       mov     ecx, [eax]
.text:5B8E47A6 50							       push    eax
.text:5B8E47A7 FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E47AA E9 EC FE	FF FF						       jmp     loc_5B8E469B
.text:5B8E47AF						       ; ---------------------------------------------------------------------------
.text:5B8E47AF
.text:5B8E47AF						       loc_5B8E47AF:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+1EAj
.text:5B8E47AF 6A 01							       push    1	       ; int
.text:5B8E47B1 8B CE							       mov     ecx, esi	       ; this
.text:5B8E47B3 E8 24 FC	FF FF						       call    ?SetControlFocus@CComControlBase@ATL@@QAEHH@Z ; ATL::CComControlBase::SetControlFocus(int)
.text:5B8E47B8 39 5D F8							       cmp     [ebp+var_8], ebx
.text:5B8E47BB 74 22							       jz      short loc_5B8E47DF
.text:5B8E47BD 8B 45 F0							       mov     eax, [ebp+var_10]
.text:5B8E47C0 3B C3							       cmp     eax, ebx
.text:5B8E47C2 74 0A							       jz      short loc_5B8E47CE
.text:5B8E47C4 8B 08							       mov     ecx, [eax]
.text:5B8E47C6 53							       push    ebx
.text:5B8E47C7 FF 75 F8							       push    [ebp+var_8]
.text:5B8E47CA 50							       push    eax
.text:5B8E47CB FF 51 20							       call    dword ptr [ecx+20h]
.text:5B8E47CE
.text:5B8E47CE						       loc_5B8E47CE:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+22Fj
.text:5B8E47CE 8B 45 F4							       mov     eax, [ebp+var_C]
.text:5B8E47D1 3B C3							       cmp     eax, ebx
.text:5B8E47D3 74 0A							       jz      short loc_5B8E47DF
.text:5B8E47D5 8B 08							       mov     ecx, [eax]
.text:5B8E47D7 53							       push    ebx
.text:5B8E47D8 FF 75 F8							       push    [ebp+var_8]
.text:5B8E47DB 50							       push    eax
.text:5B8E47DC FF 51 20							       call    dword ptr [ecx+20h]
.text:5B8E47DF
.text:5B8E47DF						       loc_5B8E47DF:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+228j
.text:5B8E47DF											       ; ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+240j
.text:5B8E47DF 8B 45 F0							       mov     eax, [ebp+var_10]
.text:5B8E47E2 3B C3							       cmp     eax, ebx
.text:5B8E47E4 74 07							       jz      short loc_5B8E47ED
.text:5B8E47E6 8B 08							       mov     ecx, [eax]
.text:5B8E47E8 53							       push    ebx
.text:5B8E47E9 50							       push    eax
.text:5B8E47EA FF 51 1C							       call    dword ptr [ecx+1Ch]
.text:5B8E47ED
.text:5B8E47ED						       loc_5B8E47ED:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+251j
.text:5B8E47ED 8B 45 F4							       mov     eax, [ebp+var_C]
.text:5B8E47F0 3B C3							       cmp     eax, ebx
.text:5B8E47F2 74 07							       jz      short loc_5B8E47FB
.text:5B8E47F4 8B 08							       mov     ecx, [eax]
.text:5B8E47F6 53							       push    ebx
.text:5B8E47F7 50							       push    eax
.text:5B8E47F8 FF 51 1C							       call    dword ptr [ecx+1Ch]
.text:5B8E47FB
.text:5B8E47FB						       loc_5B8E47FB:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+1C6j
.text:5B8E47FB											       ; ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+1D1j ...
.text:5B8E47FB 8B 76 10							       mov     esi, [esi+10h]
.text:5B8E47FE 8B 06							       mov     eax, [esi]
.text:5B8E4800 56							       push    esi
.text:5B8E4801 FF 50 18							       call    dword ptr [eax+18h]
.text:5B8E4804 8B 45 F8							       mov     eax, [ebp+var_8]
.text:5B8E4807 3B C3							       cmp     eax, ebx
.text:5B8E4809 74 06							       jz      short loc_5B8E4811
.text:5B8E480B 8B 08							       mov     ecx, [eax]
.text:5B8E480D 50							       push    eax
.text:5B8E480E FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E4811
.text:5B8E4811						       loc_5B8E4811:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+276j
.text:5B8E4811 8B 45 F4							       mov     eax, [ebp+var_C]
.text:5B8E4814 3B C3							       cmp     eax, ebx
.text:5B8E4816 74 06							       jz      short loc_5B8E481E
.text:5B8E4818 8B 08							       mov     ecx, [eax]
.text:5B8E481A 50							       push    eax
.text:5B8E481B FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E481E
.text:5B8E481E						       loc_5B8E481E:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+283j
.text:5B8E481E 8B 45 F0							       mov     eax, [ebp+var_10]
.text:5B8E4821 3B C3							       cmp     eax, ebx
.text:5B8E4823 74 06							       jz      short loc_5B8E482B
.text:5B8E4825 8B 08							       mov     ecx, [eax]
.text:5B8E4827 50							       push    eax
.text:5B8E4828 FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E482B
.text:5B8E482B						       loc_5B8E482B:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+290j
.text:5B8E482B 8B 45 FC							       mov     eax, [ebp+var_4]
.text:5B8E482E 3B C3							       cmp     eax, ebx
.text:5B8E4830 74 06							       jz      short loc_5B8E4838
.text:5B8E4832 8B 08							       mov     ecx, [eax]
.text:5B8E4834 50							       push    eax
.text:5B8E4835 FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E4838
.text:5B8E4838						       loc_5B8E4838:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+29Dj
.text:5B8E4838 33 C0							       xor     eax, eax
.text:5B8E483A
.text:5B8E483A						       loc_5B8E483A:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+CDj
.text:5B8E483A											       ; ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+117j
.text:5B8E483A 5F							       pop     edi
.text:5B8E483B
.text:5B8E483B						       loc_5B8E483B:			       ; CODE XREF: ATL::CComControlBase::InPlaceActivate(long,tagRECT const *)+13j
.text:5B8E483B 5E							       pop     esi
.text:5B8E483C 5B							       pop     ebx
.text:5B8E483D C9							       leave
.text:5B8E483E C2 08 00							       retn    8
.text:5B8E483E						       ?InPlaceActivate@CComControlBase@ATL@@QAEJJPBUtagRECT@@@Z endp
.text:5B8E483E
.text:5B8E4841
.text:5B8E4841						       ; =============== S U B R O U T I N E =======================================
.text:5B8E4841
.text:5B8E4841						       ; Attributes: bp-based frame
.text:5B8E4841
.text:5B8E4841						       ; __int32 __thiscall ATL::CComControlBase::IPersistStreamInit_Load(ATL::CComControlBase *this, LPSTREAM pStm, struct ATL::ATL_PROPMAP_ENTRY *)
.text:5B8E4841						       ?IPersistStreamInit_Load@CComControlBase@ATL@@QAEJPAUIStream@@PAUATL_PROPMAP_ENTRY@2@@Z proc near
.text:5B8E4841											       ; CODE XREF: ATL::IPersistStreamInitImpl<CTrialEnd>::Load(IStream *)+16p
.text:5B8E4841
.text:5B8E4841						       pvarg	       = VARIANTARG ptr	-20h
.text:5B8E4841						       var_10	       = dword ptr -10h
.text:5B8E4841						       var_C	       = dword ptr -0Ch
.text:5B8E4841						       var_8	       = dword ptr -8
.text:5B8E4841						       var_4	       = dword ptr -4
.text:5B8E4841						       pStm	       = dword ptr  8
.text:5B8E4841						       arg_4	       = dword ptr  0Ch
.text:5B8E4841
.text:5B8E4841 55							       push    ebp
.text:5B8E4842 8B EC							       mov     ebp, esp
.text:5B8E4844 83 EC 20							       sub     esp, 20h
.text:5B8E4847 53							       push    ebx
.text:5B8E4848 8B 5D 08							       mov     ebx, [ebp+pStm]
.text:5B8E484B 8B 03							       mov     eax, [ebx]
.text:5B8E484D 56							       push    esi
.text:5B8E484E 57							       push    edi
.text:5B8E484F 33 FF							       xor     edi, edi
.text:5B8E4851 57							       push    edi
.text:5B8E4852 8B F1							       mov     esi, ecx
.text:5B8E4854 6A 04							       push    4
.text:5B8E4856 8D 4D F0							       lea     ecx, [ebp+var_10]
.text:5B8E4859 51							       push    ecx
.text:5B8E485A 53							       push    ebx
.text:5B8E485B 89 75 F8							       mov     [ebp+var_8], esi
.text:5B8E485E FF 50 0C							       call    dword ptr [eax+0Ch]
.text:5B8E4861 3B C7							       cmp     eax, edi
.text:5B8E4863 89 45 FC							       mov     [ebp+var_4], eax
.text:5B8E4866 0F 8C BD	00 00 00					       jl      loc_5B8E4929
.text:5B8E486C 81 7D F0	02 02 00 00					       cmp     [ebp+var_10], 202h
.text:5B8E4873 77 10							       ja      short loc_5B8E4885
.text:5B8E4875 8B 03							       mov     eax, [ebx]
.text:5B8E4877 57							       push    edi
.text:5B8E4878 6A 08							       push    8
.text:5B8E487A 83 C6 24							       add     esi, 24h
.text:5B8E487D 56							       push    esi
.text:5B8E487E 53							       push    ebx
.text:5B8E487F FF 50 0C							       call    dword ptr [eax+0Ch]
.text:5B8E4882 89 45 FC							       mov     [ebp+var_4], eax
.text:5B8E4885
.text:5B8E4885						       loc_5B8E4885:			       ; CODE XREF: ATL::CComControlBase::IPersistStreamInit_Load(IStream *,ATL::ATL_PROPMAP_ENTRY *)+32j
.text:5B8E4885 8B 45 FC							       mov     eax, [ebp+var_4]
.text:5B8E4888 3B C7							       cmp     eax, edi
.text:5B8E488A 0F 8C 99	00 00 00					       jl      loc_5B8E4929
.text:5B8E4890 8B 75 0C							       mov     esi, [ebp+arg_4]
.text:5B8E4893 39 7E 08							       cmp     [esi+8],	edi
.text:5B8E4896 89 7D 08							       mov     [ebp+pStm], edi
.text:5B8E4899 89 7D F4							       mov     [ebp+var_C], edi
.text:5B8E489C 0F 84 84	00 00 00					       jz      loc_5B8E4926
.text:5B8E48A2 8B 3D C8	10 8E 5B					       mov     edi, ds:__imp__VariantClear@4 ; VariantClear(x)
.text:5B8E48A8 89 75 0C							       mov     [ebp+arg_4], esi
.text:5B8E48AB
.text:5B8E48AB						       loc_5B8E48AB:			       ; CODE XREF: ATL::CComControlBase::IPersistStreamInit_Load(IStream *,ATL::ATL_PROPMAP_ENTRY *)+CEj
.text:5B8E48AB 83 3E 00							       cmp     dword ptr [esi],	0
.text:5B8E48AE 74 52							       jz      short loc_5B8E4902
.text:5B8E48B0 8D 45 E0							       lea     eax, [ebp+pvarg]
.text:5B8E48B3 50							       push    eax	       ; pvarg
.text:5B8E48B4 FF 15 E4	10 8E 5B					       call    ds:__imp__VariantInit@4 ; VariantInit(x)
.text:5B8E48BA 53							       push    ebx	       ; pStm
.text:5B8E48BB 8D 4D E0							       lea     ecx, [ebp+pvarg]	; pvargDest
.text:5B8E48BE E8 9B E6	FF FF						       call    ?ReadFromStream@CComVariant@ATL@@QAEJPAUIStream@@@Z ; ATL::CComVariant::ReadFromStream(IStream *)
.text:5B8E48C3 85 C0							       test    eax, eax
.text:5B8E48C5 7C 4C							       jl      short loc_5B8E4913
.text:5B8E48C7 8B 46 0C							       mov     eax, [esi+0Ch]
.text:5B8E48CA 3B 45 F4							       cmp     eax, [ebp+var_C]
.text:5B8E48CD 74 1A							       jz      short loc_5B8E48E9
.text:5B8E48CF 8B 4D F8							       mov     ecx, [ebp+var_8]
.text:5B8E48D2 8B 11							       mov     edx, [ecx]
.text:5B8E48D4 8D 4D 08							       lea     ecx, [ebp+pStm]
.text:5B8E48D7 51							       push    ecx
.text:5B8E48D8 8B 4D F8							       mov     ecx, [ebp+var_8]
.text:5B8E48DB 50							       push    eax
.text:5B8E48DC FF 52 04							       call    dword ptr [edx+4]
.text:5B8E48DF 85 C0							       test    eax, eax
.text:5B8E48E1 7C 30							       jl      short loc_5B8E4913
.text:5B8E48E3 8B 46 0C							       mov     eax, [esi+0Ch]
.text:5B8E48E6 89 45 F4							       mov     [ebp+var_C], eax
.text:5B8E48E9
.text:5B8E48E9						       loc_5B8E48E9:			       ; CODE XREF: ATL::CComControlBase::IPersistStreamInit_Load(IStream *,ATL::ATL_PROPMAP_ENTRY *)+8Cj
.text:5B8E48E9 8B 56 04							       mov     edx, [esi+4]    ; __int32
.text:5B8E48EC 8B 4D 08							       mov     ecx, [ebp+pStm] ; struct	IDispatch *
.text:5B8E48EF 8D 45 E0							       lea     eax, [ebp+pvarg]
.text:5B8E48F2 50							       push    eax	       ; struct	tagVARIANT *
.text:5B8E48F3 E8 78 EF	FF FF						       call    ?PutProperty@CComDispatchDriver@ATL@@SIJPAUIDispatch@@JPAUtagVARIANT@@@Z	; ATL::CComDispatchDriver::PutProperty(IDispatch *,long,tagVARIANT *)
.text:5B8E48F8 85 C0							       test    eax, eax
.text:5B8E48FA 8D 45 E0							       lea     eax, [ebp+pvarg]
.text:5B8E48FD 50							       push    eax	       ; pvarg
.text:5B8E48FE 7C 17							       jl      short loc_5B8E4917
.text:5B8E4900 FF D7							       call    edi ; VariantClear(x) ; VariantClear(x)
.text:5B8E4902
.text:5B8E4902						       loc_5B8E4902:			       ; CODE XREF: ATL::CComControlBase::IPersistStreamInit_Load(IStream *,ATL::ATL_PROPMAP_ENTRY *)+6Dj
.text:5B8E4902 8B 75 0C							       mov     esi, [ebp+arg_4]
.text:5B8E4905 83 C6 10							       add     esi, 10h
.text:5B8E4908 83 7E 08	00						       cmp     dword ptr [esi+8], 0
.text:5B8E490C 89 75 0C							       mov     [ebp+arg_4], esi
.text:5B8E490F 75 9A							       jnz     short loc_5B8E48AB
.text:5B8E4911 EB 06							       jmp     short loc_5B8E4919
.text:5B8E4913						       ; ---------------------------------------------------------------------------
.text:5B8E4913
.text:5B8E4913						       loc_5B8E4913:			       ; CODE XREF: ATL::CComControlBase::IPersistStreamInit_Load(IStream *,ATL::ATL_PROPMAP_ENTRY *)+84j
.text:5B8E4913											       ; ATL::CComControlBase::IPersistStreamInit_Load(IStream *,ATL::ATL_PROPMAP_ENTRY	*)+A0j
.text:5B8E4913 8D 45 E0							       lea     eax, [ebp+pvarg]
.text:5B8E4916 50							       push    eax	       ; pvarg
.text:5B8E4917
.text:5B8E4917						       loc_5B8E4917:			       ; CODE XREF: ATL::CComControlBase::IPersistStreamInit_Load(IStream *,ATL::ATL_PROPMAP_ENTRY *)+BDj
.text:5B8E4917 FF D7							       call    edi ; VariantClear(x) ; VariantClear(x)
.text:5B8E4919
.text:5B8E4919						       loc_5B8E4919:			       ; CODE XREF: ATL::CComControlBase::IPersistStreamInit_Load(IStream *,ATL::ATL_PROPMAP_ENTRY *)+D0j
.text:5B8E4919 8B 45 08							       mov     eax, [ebp+pStm]
.text:5B8E491C 85 C0							       test    eax, eax
.text:5B8E491E 74 06							       jz      short loc_5B8E4926
.text:5B8E4920 8B 08							       mov     ecx, [eax]
.text:5B8E4922 50							       push    eax
.text:5B8E4923 FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E4926
.text:5B8E4926						       loc_5B8E4926:			       ; CODE XREF: ATL::CComControlBase::IPersistStreamInit_Load(IStream *,ATL::ATL_PROPMAP_ENTRY *)+5Bj
.text:5B8E4926											       ; ATL::CComControlBase::IPersistStreamInit_Load(IStream *,ATL::ATL_PROPMAP_ENTRY	*)+DDj
.text:5B8E4926 8B 45 FC							       mov     eax, [ebp+var_4]
.text:5B8E4929
.text:5B8E4929						       loc_5B8E4929:			       ; CODE XREF: ATL::CComControlBase::IPersistStreamInit_Load(IStream *,ATL::ATL_PROPMAP_ENTRY *)+25j
.text:5B8E4929											       ; ATL::CComControlBase::IPersistStreamInit_Load(IStream *,ATL::ATL_PROPMAP_ENTRY	*)+49j
.text:5B8E4929 5F							       pop     edi
.text:5B8E492A 5E							       pop     esi
.text:5B8E492B 5B							       pop     ebx
.text:5B8E492C C9							       leave
.text:5B8E492D C2 08 00							       retn    8
.text:5B8E492D						       ?IPersistStreamInit_Load@CComControlBase@ATL@@QAEJPAUIStream@@PAUATL_PROPMAP_ENTRY@2@@Z endp
.text:5B8E492D
.text:5B8E4930
.text:5B8E4930						       ; =============== S U B R O U T I N E =======================================
.text:5B8E4930
.text:5B8E4930						       ; Attributes: bp-based frame
.text:5B8E4930
.text:5B8E4930						       ; __int32 __thiscall ATL::CComControlBase::IPersistStreamInit_Save(ATL::CComControlBase *this, LPPERSISTSTREAM pPStm, int, struct ATL::ATL_PROPMAP_ENTRY	*)
.text:5B8E4930						       ?IPersistStreamInit_Save@CComControlBase@ATL@@QAEJPAUIStream@@HPAUATL_PROPMAP_ENTRY@2@@Z	proc near
.text:5B8E4930											       ; CODE XREF: ATL::IPersistStreamInitImpl<CTrialEnd>::Save(IStream *,int)+1Ap
.text:5B8E4930
.text:5B8E4930						       pvarg	       = VARIANTARG ptr	-20h
.text:5B8E4930						       var_10	       = dword ptr -10h
.text:5B8E4930						       var_C	       = dword ptr -0Ch
.text:5B8E4930						       var_8	       = dword ptr -8
.text:5B8E4930						       var_4	       = dword ptr -4
.text:5B8E4930						       pPStm	       = dword ptr  8
.text:5B8E4930						       arg_8	       = dword ptr  10h
.text:5B8E4930
.text:5B8E4930 55							       push    ebp
.text:5B8E4931 8B EC							       mov     ebp, esp
.text:5B8E4933 83 EC 20							       sub     esp, 20h
.text:5B8E4936 53							       push    ebx
.text:5B8E4937 8B 5D 08							       mov     ebx, [ebp+pPStm]
.text:5B8E493A 8B 03							       mov     eax, [ebx]
.text:5B8E493C 56							       push    esi
.text:5B8E493D 57							       push    edi
.text:5B8E493E 33 F6							       xor     esi, esi
.text:5B8E4940 56							       push    esi
.text:5B8E4941 8B F9							       mov     edi, ecx
.text:5B8E4943 6A 04							       push    4
.text:5B8E4945 8D 4D F0							       lea     ecx, [ebp+var_10]
.text:5B8E4948 51							       push    ecx
.text:5B8E4949 53							       push    ebx
.text:5B8E494A 89 7D FC							       mov     [ebp+var_4], edi
.text:5B8E494D C7 45 F0	02 02 00 00					       mov     [ebp+var_10], 202h
.text:5B8E4954 FF 50 10							       call    dword ptr [eax+10h]
.text:5B8E4957 3B C6							       cmp     eax, esi
.text:5B8E4959 0F 8C C4	00 00 00					       jl      loc_5B8E4A23
.text:5B8E495F 8B 03							       mov     eax, [ebx]
.text:5B8E4961 56							       push    esi
.text:5B8E4962 6A 08							       push    8
.text:5B8E4964 8D 4F 24							       lea     ecx, [edi+24h]
.text:5B8E4967 51							       push    ecx
.text:5B8E4968 53							       push    ebx
.text:5B8E4969 FF 50 10							       call    dword ptr [eax+10h]
.text:5B8E496C 3B C6							       cmp     eax, esi
.text:5B8E496E 89 45 F8							       mov     [ebp+var_8], eax
.text:5B8E4971 0F 8C AC	00 00 00					       jl      loc_5B8E4A23
.text:5B8E4977 89 75 08							       mov     [ebp+pPStm], esi
.text:5B8E497A 89 75 F4							       mov     [ebp+var_C], esi
.text:5B8E497D 8B 75 10							       mov     esi, [ebp+arg_8]
.text:5B8E4980 83 7E 08	00						       cmp     dword ptr [esi+8], 0
.text:5B8E4984 0F 84 85	00 00 00					       jz      loc_5B8E4A0F
.text:5B8E498A 8B 3D C8	10 8E 5B					       mov     edi, ds:__imp__VariantClear@4 ; VariantClear(x)
.text:5B8E4990 89 75 10							       mov     [ebp+arg_8], esi
.text:5B8E4993
.text:5B8E4993						       loc_5B8E4993:			       ; CODE XREF: ATL::CComControlBase::IPersistStreamInit_Save(IStream *,int,ATL::ATL_PROPMAP_ENTRY *)+C7j
.text:5B8E4993 83 3E 00							       cmp     dword ptr [esi],	0
.text:5B8E4996 74 52							       jz      short loc_5B8E49EA
.text:5B8E4998 8D 45 E0							       lea     eax, [ebp+pvarg]
.text:5B8E499B 50							       push    eax	       ; pvarg
.text:5B8E499C FF 15 E4	10 8E 5B					       call    ds:__imp__VariantInit@4 ; VariantInit(x)
.text:5B8E49A2 8B 46 0C							       mov     eax, [esi+0Ch]
.text:5B8E49A5 3B 45 F4							       cmp     eax, [ebp+var_C]
.text:5B8E49A8 74 1A							       jz      short loc_5B8E49C4
.text:5B8E49AA 8B 4D FC							       mov     ecx, [ebp+var_4]
.text:5B8E49AD 8B 11							       mov     edx, [ecx]
.text:5B8E49AF 8D 4D 08							       lea     ecx, [ebp+pPStm]
.text:5B8E49B2 51							       push    ecx
.text:5B8E49B3 8B 4D FC							       mov     ecx, [ebp+var_4]
.text:5B8E49B6 50							       push    eax
.text:5B8E49B7 FF 52 04							       call    dword ptr [edx+4]
.text:5B8E49BA 85 C0							       test    eax, eax
.text:5B8E49BC 7C 3D							       jl      short loc_5B8E49FB
.text:5B8E49BE 8B 46 0C							       mov     eax, [esi+0Ch]
.text:5B8E49C1 89 45 F4							       mov     [ebp+var_C], eax
.text:5B8E49C4
.text:5B8E49C4						       loc_5B8E49C4:			       ; CODE XREF: ATL::CComControlBase::IPersistStreamInit_Save(IStream *,int,ATL::ATL_PROPMAP_ENTRY *)+78j
.text:5B8E49C4 8B 56 04							       mov     edx, [esi+4]    ; __int32
.text:5B8E49C7 8B 4D 08							       mov     ecx, [ebp+pPStm]	; struct IDispatch *
.text:5B8E49CA 8D 45 E0							       lea     eax, [ebp+pvarg]
.text:5B8E49CD 50							       push    eax	       ; struct	tagVARIANT *
.text:5B8E49CE E8 67 EE	FF FF						       call    ?GetProperty@CComDispatchDriver@ATL@@SIJPAUIDispatch@@JPAUtagVARIANT@@@Z	; ATL::CComDispatchDriver::GetProperty(IDispatch *,long,tagVARIANT *)
.text:5B8E49D3 85 C0							       test    eax, eax
.text:5B8E49D5 7C 24							       jl      short loc_5B8E49FB
.text:5B8E49D7 53							       push    ebx	       ; pPStm
.text:5B8E49D8 8D 4D E0							       lea     ecx, [ebp+pvarg]	; pvarSrc
.text:5B8E49DB E8 8A F7	FF FF						       call    ?WriteToStream@CComVariant@ATL@@QAEJPAUIStream@@@Z ; ATL::CComVariant::WriteToStream(IStream *)
.text:5B8E49E0 85 C0							       test    eax, eax
.text:5B8E49E2 8D 45 E0							       lea     eax, [ebp+pvarg]
.text:5B8E49E5 50							       push    eax	       ; pvarg
.text:5B8E49E6 7C 22							       jl      short loc_5B8E4A0A
.text:5B8E49E8 FF D7							       call    edi ; VariantClear(x) ; VariantClear(x)
.text:5B8E49EA
.text:5B8E49EA						       loc_5B8E49EA:			       ; CODE XREF: ATL::CComControlBase::IPersistStreamInit_Save(IStream *,int,ATL::ATL_PROPMAP_ENTRY *)+66j
.text:5B8E49EA 8B 75 10							       mov     esi, [ebp+arg_8]
.text:5B8E49ED 83 C6 10							       add     esi, 10h
.text:5B8E49F0 83 7E 08	00						       cmp     dword ptr [esi+8], 0
.text:5B8E49F4 89 75 10							       mov     [ebp+arg_8], esi
.text:5B8E49F7 75 9A							       jnz     short loc_5B8E4993
.text:5B8E49F9 EB 11							       jmp     short loc_5B8E4A0C
.text:5B8E49FB						       ; ---------------------------------------------------------------------------
.text:5B8E49FB
.text:5B8E49FB						       loc_5B8E49FB:			       ; CODE XREF: ATL::CComControlBase::IPersistStreamInit_Save(IStream *,int,ATL::ATL_PROPMAP_ENTRY *)+8Cj
.text:5B8E49FB											       ; ATL::CComControlBase::IPersistStreamInit_Save(IStream *,int,ATL::ATL_PROPMAP_ENTRY *)+A5j
.text:5B8E49FB 8D 45 E0							       lea     eax, [ebp+pvarg]
.text:5B8E49FE 50							       push    eax	       ; pvarg
.text:5B8E49FF C7 45 F8	05 40 00 80					       mov     [ebp+var_8], 80004005h
.text:5B8E4A06 FF D7							       call    edi ; VariantClear(x) ; VariantClear(x)
.text:5B8E4A08 EB 09							       jmp     short loc_5B8E4A13
.text:5B8E4A0A						       ; ---------------------------------------------------------------------------
.text:5B8E4A0A
.text:5B8E4A0A						       loc_5B8E4A0A:			       ; CODE XREF: ATL::CComControlBase::IPersistStreamInit_Save(IStream *,int,ATL::ATL_PROPMAP_ENTRY *)+B6j
.text:5B8E4A0A FF D7							       call    edi ; VariantClear(x) ; VariantClear(x)
.text:5B8E4A0C
.text:5B8E4A0C						       loc_5B8E4A0C:			       ; CODE XREF: ATL::CComControlBase::IPersistStreamInit_Save(IStream *,int,ATL::ATL_PROPMAP_ENTRY *)+C9j
.text:5B8E4A0C 8B 7D FC							       mov     edi, [ebp+var_4]
.text:5B8E4A0F
.text:5B8E4A0F						       loc_5B8E4A0F:			       ; CODE XREF: ATL::CComControlBase::IPersistStreamInit_Save(IStream *,int,ATL::ATL_PROPMAP_ENTRY *)+54j
.text:5B8E4A0F 80 67 44	7F						       and     byte ptr	[edi+44h], 7Fh
.text:5B8E4A13
.text:5B8E4A13						       loc_5B8E4A13:			       ; CODE XREF: ATL::CComControlBase::IPersistStreamInit_Save(IStream *,int,ATL::ATL_PROPMAP_ENTRY *)+D8j
.text:5B8E4A13 8B 45 08							       mov     eax, [ebp+pPStm]
.text:5B8E4A16 85 C0							       test    eax, eax
.text:5B8E4A18 74 06							       jz      short loc_5B8E4A20
.text:5B8E4A1A 8B 08							       mov     ecx, [eax]
.text:5B8E4A1C 50							       push    eax
.text:5B8E4A1D FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E4A20
.text:5B8E4A20						       loc_5B8E4A20:			       ; CODE XREF: ATL::CComControlBase::IPersistStreamInit_Save(IStream *,int,ATL::ATL_PROPMAP_ENTRY *)+E8j
.text:5B8E4A20 8B 45 F8							       mov     eax, [ebp+var_8]
.text:5B8E4A23
.text:5B8E4A23						       loc_5B8E4A23:			       ; CODE XREF: ATL::CComControlBase::IPersistStreamInit_Save(IStream *,int,ATL::ATL_PROPMAP_ENTRY *)+29j
.text:5B8E4A23											       ; ATL::CComControlBase::IPersistStreamInit_Save(IStream *,int,ATL::ATL_PROPMAP_ENTRY *)+41j
.text:5B8E4A23 5F							       pop     edi
.text:5B8E4A24 5E							       pop     esi
.text:5B8E4A25 5B							       pop     ebx
.text:5B8E4A26 C9							       leave
.text:5B8E4A27 C2 0C 00							       retn    0Ch
.text:5B8E4A27						       ?IPersistStreamInit_Save@CComControlBase@ATL@@QAEJPAUIStream@@HPAUATL_PROPMAP_ENTRY@2@@Z	endp
.text:5B8E4A27
.text:5B8E4A2A
.text:5B8E4A2A						       ; =============== S U B R O U T I N E =======================================
.text:5B8E4A2A
.text:5B8E4A2A						       ; Attributes: bp-based frame
.text:5B8E4A2A
.text:5B8E4A2A						       ; __int32 __thiscall ATL::CComControlBase::SendOnDataChange(ATL::CComControlBase	*this, unsigned	__int32)
.text:5B8E4A2A						       ?SendOnDataChange@CComControlBase@ATL@@QAEJK@Z proc near
.text:5B8E4A2A											       ; CODE XREF: ATL::IPersistStreamInitImpl<CTrialEnd>::InitNew(void)+Fp
.text:5B8E4A2A											       ; ATL::CComControlBase::IOleObject_SetExtent(ulong,tagSIZE *)+AEp
.text:5B8E4A2A
.text:5B8E4A2A						       var_4	       = dword ptr -4
.text:5B8E4A2A						       arg_0	       = dword ptr  8
.text:5B8E4A2A
.text:5B8E4A2A 55							       push    ebp
.text:5B8E4A2B 8B EC							       mov     ebp, esp
.text:5B8E4A2D 51							       push    ecx
.text:5B8E4A2E 53							       push    ebx
.text:5B8E4A2F 56							       push    esi
.text:5B8E4A30 8B F1							       mov     esi, ecx
.text:5B8E4A32 33 DB							       xor     ebx, ebx
.text:5B8E4A34 39 5E 08							       cmp     [esi+8],	ebx
.text:5B8E4A37 74 36							       jz      short loc_5B8E4A6F
.text:5B8E4A39 8B 06							       mov     eax, [esi]
.text:5B8E4A3B 21 5D FC							       and     [ebp+var_4], ebx
.text:5B8E4A3E 8D 4D FC							       lea     ecx, [ebp+var_4]
.text:5B8E4A41 51							       push    ecx
.text:5B8E4A42 68 3C 1A	8E 5B						       push    offset _IID_IDataObject
.text:5B8E4A47 8B CE							       mov     ecx, esi
.text:5B8E4A49 FF 50 04							       call    dword ptr [eax+4]
.text:5B8E4A4C 85 C0							       test    eax, eax
.text:5B8E4A4E 7C 12							       jl      short loc_5B8E4A62
.text:5B8E4A50 FF 75 08							       push    [ebp+arg_0]
.text:5B8E4A53 8B 76 08							       mov     esi, [esi+8]
.text:5B8E4A56 8B 06							       mov     eax, [esi]
.text:5B8E4A58 53							       push    ebx
.text:5B8E4A59 FF 75 FC							       push    [ebp+var_4]
.text:5B8E4A5C 56							       push    esi
.text:5B8E4A5D FF 50 18							       call    dword ptr [eax+18h]
.text:5B8E4A60 8B D8							       mov     ebx, eax
.text:5B8E4A62
.text:5B8E4A62						       loc_5B8E4A62:			       ; CODE XREF: ATL::CComControlBase::SendOnDataChange(ulong)+24j
.text:5B8E4A62 8B 45 FC							       mov     eax, [ebp+var_4]
.text:5B8E4A65 85 C0							       test    eax, eax
.text:5B8E4A67 74 06							       jz      short loc_5B8E4A6F
.text:5B8E4A69 8B 08							       mov     ecx, [eax]
.text:5B8E4A6B 50							       push    eax
.text:5B8E4A6C FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E4A6F
.text:5B8E4A6F						       loc_5B8E4A6F:			       ; CODE XREF: ATL::CComControlBase::SendOnDataChange(ulong)+Dj
.text:5B8E4A6F											       ; ATL::CComControlBase::SendOnDataChange(ulong)+3Dj
.text:5B8E4A6F 5E							       pop     esi
.text:5B8E4A70 8B C3							       mov     eax, ebx
.text:5B8E4A72 5B							       pop     ebx
.text:5B8E4A73 C9							       leave
.text:5B8E4A74 C2 04 00							       retn    4
.text:5B8E4A74						       ?SendOnDataChange@CComControlBase@ATL@@QAEJK@Z endp
.text:5B8E4A74
.text:5B8E4A77
.text:5B8E4A77						       ; =============== S U B R O U T I N E =======================================
.text:5B8E4A77
.text:5B8E4A77
.text:5B8E4A77						       ; __int32 __thiscall ATL::CComControlBase::IOleObject_SetClientSite(ATL::CComControlBase	*this, struct IOleClientSite *)
.text:5B8E4A77						       ?IOleObject_SetClientSite@CComControlBase@ATL@@QAEJPAUIOleClientSite@@@Z	proc near
.text:5B8E4A77											       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::SetClientSite(IOleClientSite *)+11p
.text:5B8E4A77
.text:5B8E4A77						       arg_0	       = dword ptr  4
.text:5B8E4A77
.text:5B8E4A77 56							       push    esi
.text:5B8E4A78 57							       push    edi
.text:5B8E4A79 FF 74 24	0C						       push    [esp+8+arg_0]   ; struct	IUnknown *
.text:5B8E4A7D 8B F1							       mov     esi, ecx
.text:5B8E4A7F 8D 7E 10							       lea     edi, [esi+10h]
.text:5B8E4A82 57							       push    edi	       ; struct	IUnknown **
.text:5B8E4A83 E8 74 EA	FF FF						       call    ?AtlComPtrAssign@ATL@@YGPAUIUnknown@@PAPAU2@PAU2@@Z ; ATL::AtlComPtrAssign(IUnknown * *,IUnknown	*)
.text:5B8E4A88 83 C6 18							       add     esi, 18h
.text:5B8E4A8B 8B CE							       mov     ecx, esi	       ; this
.text:5B8E4A8D E8 EC F2	FF FF						       call    ?Release@CComDispatchDriver@ATL@@QAEXXZ ; ATL::CComDispatchDriver::Release(void)
.text:5B8E4A92 8B 3F							       mov     edi, [edi]
.text:5B8E4A94 85 FF							       test    edi, edi
.text:5B8E4A96 74 0B							       jz      short loc_5B8E4AA3
.text:5B8E4A98 8B 07							       mov     eax, [edi]
.text:5B8E4A9A 56							       push    esi
.text:5B8E4A9B 68 1C 19	8E 5B						       push    offset _IID_IDispatch
.text:5B8E4AA0 57							       push    edi
.text:5B8E4AA1 FF 10							       call    dword ptr [eax]
.text:5B8E4AA3
.text:5B8E4AA3						       loc_5B8E4AA3:			       ; CODE XREF: ATL::CComControlBase::IOleObject_SetClientSite(IOleClientSite *)+1Fj
.text:5B8E4AA3 5F							       pop     edi
.text:5B8E4AA4 33 C0							       xor     eax, eax
.text:5B8E4AA6 5E							       pop     esi
.text:5B8E4AA7 C2 04 00							       retn    4
.text:5B8E4AA7						       ?IOleObject_SetClientSite@CComControlBase@ATL@@QAEJPAUIOleClientSite@@@Z	endp
.text:5B8E4AA7
.text:5B8E4AAA
.text:5B8E4AAA						       ; =============== S U B R O U T I N E =======================================
.text:5B8E4AAA
.text:5B8E4AAA
.text:5B8E4AAA						       ; __int32 __thiscall ATL::CComControlBase::IOleObject_GetClientSite(ATL::CComControlBase	*this, struct IOleClientSite **)
.text:5B8E4AAA						       ?IOleObject_GetClientSite@CComControlBase@ATL@@QAEJPAPAUIOleClientSite@@@Z proc near
.text:5B8E4AAA											       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::GetClientSite(IOleClientSite * *)+11p
.text:5B8E4AAA
.text:5B8E4AAA						       arg_0	       = dword ptr  4
.text:5B8E4AAA
.text:5B8E4AAA 8B 54 24	04						       mov     edx, [esp+arg_0]
.text:5B8E4AAE 85 D2							       test    edx, edx
.text:5B8E4AB0 B8 03 40	00 80						       mov     eax, 80004003h
.text:5B8E4AB5 74 14							       jz      short locret_5B8E4ACB
.text:5B8E4AB7 8B 41 10							       mov     eax, [ecx+10h]
.text:5B8E4ABA 89 02							       mov     [edx], eax
.text:5B8E4ABC 8B 49 10							       mov     ecx, [ecx+10h]
.text:5B8E4ABF 85 C9							       test    ecx, ecx
.text:5B8E4AC1 74 06							       jz      short loc_5B8E4AC9
.text:5B8E4AC3 8B 01							       mov     eax, [ecx]
.text:5B8E4AC5 51							       push    ecx
.text:5B8E4AC6 FF 50 04							       call    dword ptr [eax+4]
.text:5B8E4AC9
.text:5B8E4AC9						       loc_5B8E4AC9:			       ; CODE XREF: ATL::CComControlBase::IOleObject_GetClientSite(IOleClientSite * *)+17j
.text:5B8E4AC9 33 C0							       xor     eax, eax
.text:5B8E4ACB
.text:5B8E4ACB						       locret_5B8E4ACB:			       ; CODE XREF: ATL::CComControlBase::IOleObject_GetClientSite(IOleClientSite * *)+Bj
.text:5B8E4ACB C2 04 00							       retn    4
.text:5B8E4ACB						       ?IOleObject_GetClientSite@CComControlBase@ATL@@QAEJPAPAUIOleClientSite@@@Z endp
.text:5B8E4ACB
.text:5B8E4ACE
.text:5B8E4ACE						       ; =============== S U B R O U T I N E =======================================
.text:5B8E4ACE
.text:5B8E4ACE
.text:5B8E4ACE						       ; __int32 __thiscall ATL::CComControlBase::IOleObject_Advise(ATL::CComControlBase *this,	struct IAdviseSink *, unsigned __int32 *)
.text:5B8E4ACE						       ?IOleObject_Advise@CComControlBase@ATL@@QAEJPAUIAdviseSink@@PAK@Z proc near
.text:5B8E4ACE											       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::Advise(IAdviseSink *,ulong *)+15p
.text:5B8E4ACE
.text:5B8E4ACE						       arg_0	       = dword ptr  4
.text:5B8E4ACE						       arg_4	       = dword ptr  8
.text:5B8E4ACE
.text:5B8E4ACE 56							       push    esi
.text:5B8E4ACF 8D 71 0C							       lea     esi, [ecx+0Ch]
.text:5B8E4AD2 83 3E 00							       cmp     dword ptr [esi],	0
.text:5B8E4AD5 75 0B							       jnz     short loc_5B8E4AE2
.text:5B8E4AD7 56							       push    esi	       ; ppOAHolder
.text:5B8E4AD8 FF 15 94	11 8E 5B					       call    ds:__imp__CreateOleAdviseHolder@4 ; CreateOleAdviseHolder(x)
.text:5B8E4ADE 85 C0							       test    eax, eax
.text:5B8E4AE0 7C 10							       jl      short loc_5B8E4AF2
.text:5B8E4AE2
.text:5B8E4AE2						       loc_5B8E4AE2:			       ; CODE XREF: ATL::CComControlBase::IOleObject_Advise(IAdviseSink	*,ulong	*)+7j
.text:5B8E4AE2 FF 74 24	0C						       push    [esp+4+arg_4]
.text:5B8E4AE6 8B 36							       mov     esi, [esi]
.text:5B8E4AE8 FF 74 24	0C						       push    [esp+8+arg_0]
.text:5B8E4AEC 8B 06							       mov     eax, [esi]
.text:5B8E4AEE 56							       push    esi
.text:5B8E4AEF FF 50 0C							       call    dword ptr [eax+0Ch]
.text:5B8E4AF2
.text:5B8E4AF2						       loc_5B8E4AF2:			       ; CODE XREF: ATL::CComControlBase::IOleObject_Advise(IAdviseSink	*,ulong	*)+12j
.text:5B8E4AF2 5E							       pop     esi
.text:5B8E4AF3 C2 08 00							       retn    8
.text:5B8E4AF3						       ?IOleObject_Advise@CComControlBase@ATL@@QAEJPAUIAdviseSink@@PAK@Z endp
.text:5B8E4AF3
.text:5B8E4AF6
.text:5B8E4AF6						       ; =============== S U B R O U T I N E =======================================
.text:5B8E4AF6
.text:5B8E4AF6						       ; Attributes: bp-based frame
.text:5B8E4AF6
.text:5B8E4AF6						       ; __int32 __thiscall ATL::CComControlBase::IOleObject_Close(ATL::CComControlBase	*this, unsigned	__int32)
.text:5B8E4AF6						       ?IOleObject_Close@CComControlBase@ATL@@QAEJK@Z proc near
.text:5B8E4AF6											       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::Close(ulong)+11p
.text:5B8E4AF6
.text:5B8E4AF6						       var_4	       = dword ptr -4
.text:5B8E4AF6						       arg_0	       = dword ptr  8
.text:5B8E4AF6
.text:5B8E4AF6 55							       push    ebp
.text:5B8E4AF7 8B EC							       mov     ebp, esp
.text:5B8E4AF9 51							       push    ecx
.text:5B8E4AFA 53							       push    ebx
.text:5B8E4AFB 56							       push    esi
.text:5B8E4AFC 8B F1							       mov     esi, ecx
.text:5B8E4AFE 8B 06							       mov     eax, [esi]
.text:5B8E4B00 57							       push    edi
.text:5B8E4B01 8D 4D FC							       lea     ecx, [ebp+var_4]
.text:5B8E4B04 51							       push    ecx
.text:5B8E4B05 33 DB							       xor     ebx, ebx
.text:5B8E4B07 68 EC 19	8E 5B						       push    offset _IID_IOleInPlaceObject
.text:5B8E4B0C 8B CE							       mov     ecx, esi
.text:5B8E4B0E 89 5D FC							       mov     [ebp+var_4], ebx
.text:5B8E4B11 FF 50 04							       call    dword ptr [eax+4]
.text:5B8E4B14 8B 46 3C							       mov     eax, [esi+3Ch]
.text:5B8E4B17 39 18							       cmp     [eax], ebx
.text:5B8E4B19 74 0E							       jz      short loc_5B8E4B29
.text:5B8E4B1B 8B 46 10							       mov     eax, [esi+10h]
.text:5B8E4B1E 3B C3							       cmp     eax, ebx
.text:5B8E4B20 74 07							       jz      short loc_5B8E4B29
.text:5B8E4B22 8B 08							       mov     ecx, [eax]
.text:5B8E4B24 53							       push    ebx
.text:5B8E4B25 50							       push    eax
.text:5B8E4B26 FF 51 1C							       call    dword ptr [ecx+1Ch]
.text:5B8E4B29
.text:5B8E4B29						       loc_5B8E4B29:			       ; CODE XREF: ATL::CComControlBase::IOleObject_Close(ulong)+23j
.text:5B8E4B29											       ; ATL::CComControlBase::IOleObject_Close(ulong)+2Aj
.text:5B8E4B29 F6 46 44	04						       test    byte ptr	[esi+44h], 4
.text:5B8E4B2D 74 20							       jz      short loc_5B8E4B4F
.text:5B8E4B2F 8B 45 FC							       mov     eax, [ebp+var_4]
.text:5B8E4B32 8B 08							       mov     ecx, [eax]
.text:5B8E4B34 50							       push    eax
.text:5B8E4B35 FF 51 14							       call    dword ptr [ecx+14h]
.text:5B8E4B38 8B F8							       mov     edi, eax
.text:5B8E4B3A 3B FB							       cmp     edi, ebx
.text:5B8E4B3C 7D 11							       jge     short loc_5B8E4B4F
.text:5B8E4B3E 8B 45 FC							       mov     eax, [ebp+var_4]
.text:5B8E4B41 3B C3							       cmp     eax, ebx
.text:5B8E4B43 74 06							       jz      short loc_5B8E4B4B
.text:5B8E4B45 8B 08							       mov     ecx, [eax]
.text:5B8E4B47 50							       push    eax
.text:5B8E4B48 FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E4B4B
.text:5B8E4B4B						       loc_5B8E4B4B:			       ; CODE XREF: ATL::CComControlBase::IOleObject_Close(ulong)+4Dj
.text:5B8E4B4B 8B C7							       mov     eax, edi
.text:5B8E4B4D EB 72							       jmp     short loc_5B8E4BC1
.text:5B8E4B4F						       ; ---------------------------------------------------------------------------
.text:5B8E4B4F
.text:5B8E4B4F						       loc_5B8E4B4F:			       ; CODE XREF: ATL::CComControlBase::IOleObject_Close(ulong)+37j
.text:5B8E4B4F											       ; ATL::CComControlBase::IOleObject_Close(ulong)+46j
.text:5B8E4B4F 8B 46 3C							       mov     eax, [esi+3Ch]
.text:5B8E4B52 8B 00							       mov     eax, [eax]
.text:5B8E4B54 3B C3							       cmp     eax, ebx
.text:5B8E4B56 74 1B							       jz      short loc_5B8E4B73
.text:5B8E4B58 50							       push    eax	       ; hWnd
.text:5B8E4B59 FF 15 04	11 8E 5B					       call    ds:__imp__IsWindow@4 ; IsWindow(x)
.text:5B8E4B5F 85 C0							       test    eax, eax
.text:5B8E4B61 74 0B							       jz      short loc_5B8E4B6E
.text:5B8E4B63 8B 46 3C							       mov     eax, [esi+3Ch]
.text:5B8E4B66 FF 30							       push    dword ptr [eax] ; hWnd
.text:5B8E4B68 FF 15 60	11 8E 5B					       call    ds:__imp__DestroyWindow@4 ; DestroyWindow(x)
.text:5B8E4B6E
.text:5B8E4B6E						       loc_5B8E4B6E:			       ; CODE XREF: ATL::CComControlBase::IOleObject_Close(ulong)+6Bj
.text:5B8E4B6E 8B 46 3C							       mov     eax, [esi+3Ch]
.text:5B8E4B71 89 18							       mov     [eax], ebx
.text:5B8E4B73
.text:5B8E4B73						       loc_5B8E4B73:			       ; CODE XREF: ATL::CComControlBase::IOleObject_Close(ulong)+60j
.text:5B8E4B73 39 5D 08							       cmp     [ebp+arg_0], ebx
.text:5B8E4B76 74 06							       jz      short loc_5B8E4B7E
.text:5B8E4B78 83 7D 08	02						       cmp     [ebp+arg_0], 2
.text:5B8E4B7C 75 20							       jnz     short loc_5B8E4B9E
.text:5B8E4B7E
.text:5B8E4B7E						       loc_5B8E4B7E:			       ; CODE XREF: ATL::CComControlBase::IOleObject_Close(ulong)+80j
.text:5B8E4B7E F6 46 44	80						       test    byte ptr	[esi+44h], 80h
.text:5B8E4B82 74 1A							       jz      short loc_5B8E4B9E
.text:5B8E4B84 8B 46 10							       mov     eax, [esi+10h]
.text:5B8E4B87 3B C3							       cmp     eax, ebx
.text:5B8E4B89 74 06							       jz      short loc_5B8E4B91
.text:5B8E4B8B 8B 08							       mov     ecx, [eax]
.text:5B8E4B8D 50							       push    eax
.text:5B8E4B8E FF 51 0C							       call    dword ptr [ecx+0Ch]
.text:5B8E4B91
.text:5B8E4B91						       loc_5B8E4B91:			       ; CODE XREF: ATL::CComControlBase::IOleObject_Close(ulong)+93j
.text:5B8E4B91 8B 46 0C							       mov     eax, [esi+0Ch]
.text:5B8E4B94 3B C3							       cmp     eax, ebx
.text:5B8E4B96 74 06							       jz      short loc_5B8E4B9E
.text:5B8E4B98 8B 08							       mov     ecx, [eax]
.text:5B8E4B9A 50							       push    eax
.text:5B8E4B9B FF 51 1C							       call    dword ptr [ecx+1Ch]
.text:5B8E4B9E
.text:5B8E4B9E						       loc_5B8E4B9E:			       ; CODE XREF: ATL::CComControlBase::IOleObject_Close(ulong)+86j
.text:5B8E4B9E											       ; ATL::CComControlBase::IOleObject_Close(ulong)+8Cj ...
.text:5B8E4B9E 8D 4E 04							       lea     ecx, [esi+4]    ; this
.text:5B8E4BA1 E8 D8 F1	FF FF						       call    ?Release@CComDispatchDriver@ATL@@QAEXXZ ; ATL::CComDispatchDriver::Release(void)
.text:5B8E4BA6 83 66 44	DC						       and     dword ptr [esi+44h], 0FFFFFFDCh
.text:5B8E4BAA 8D 4E 14							       lea     ecx, [esi+14h]  ; this
.text:5B8E4BAD E8 CC F1	FF FF						       call    ?Release@CComDispatchDriver@ATL@@QAEXXZ ; ATL::CComDispatchDriver::Release(void)
.text:5B8E4BB2 8B 45 FC							       mov     eax, [ebp+var_4]
.text:5B8E4BB5 3B C3							       cmp     eax, ebx
.text:5B8E4BB7 74 06							       jz      short loc_5B8E4BBF
.text:5B8E4BB9 8B 08							       mov     ecx, [eax]
.text:5B8E4BBB 50							       push    eax
.text:5B8E4BBC FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E4BBF
.text:5B8E4BBF						       loc_5B8E4BBF:			       ; CODE XREF: ATL::CComControlBase::IOleObject_Close(ulong)+C1j
.text:5B8E4BBF 33 C0							       xor     eax, eax
.text:5B8E4BC1
.text:5B8E4BC1						       loc_5B8E4BC1:			       ; CODE XREF: ATL::CComControlBase::IOleObject_Close(ulong)+57j
.text:5B8E4BC1 5F							       pop     edi
.text:5B8E4BC2 5E							       pop     esi
.text:5B8E4BC3 5B							       pop     ebx
.text:5B8E4BC4 C9							       leave
.text:5B8E4BC5 C2 04 00							       retn    4
.text:5B8E4BC5						       ?IOleObject_Close@CComControlBase@ATL@@QAEJK@Z endp
.text:5B8E4BC5
.text:5B8E4BC8
.text:5B8E4BC8						       ; =============== S U B R O U T I N E =======================================
.text:5B8E4BC8
.text:5B8E4BC8						       ; Attributes: bp-based frame
.text:5B8E4BC8
.text:5B8E4BC8						       ; __int32 __thiscall ATL::CComControlBase::IOleInPlaceObject_InPlaceDeactivate(ATL::CComControlBase *__hidden this)
.text:5B8E4BC8						       ?IOleInPlaceObject_InPlaceDeactivate@CComControlBase@ATL@@QAEJXZ	proc near
.text:5B8E4BC8											       ; CODE XREF: ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::InPlaceDeactivate(void)+Dp
.text:5B8E4BC8
.text:5B8E4BC8						       var_4	       = dword ptr -4
.text:5B8E4BC8
.text:5B8E4BC8 55							       push    ebp
.text:5B8E4BC9 8B EC							       mov     ebp, esp
.text:5B8E4BCB 51							       push    ecx
.text:5B8E4BCC 83 65 FC	00						       and     [ebp+var_4], 0
.text:5B8E4BD0 56							       push    esi
.text:5B8E4BD1 8B F1							       mov     esi, ecx
.text:5B8E4BD3 8B 06							       mov     eax, [esi]
.text:5B8E4BD5 8D 4D FC							       lea     ecx, [ebp+var_4]
.text:5B8E4BD8 51							       push    ecx
.text:5B8E4BD9 68 EC 19	8E 5B						       push    offset _IID_IOleInPlaceObject
.text:5B8E4BDE 8B CE							       mov     ecx, esi
.text:5B8E4BE0 FF 50 04							       call    dword ptr [eax+4]
.text:5B8E4BE3 F6 46 44	04						       test    byte ptr	[esi+44h], 4
.text:5B8E4BE7 8B 45 FC							       mov     eax, [ebp+var_4]
.text:5B8E4BEA 74 3F							       jz      short loc_5B8E4C2B
.text:5B8E4BEC 8B 08							       mov     ecx, [eax]
.text:5B8E4BEE 50							       push    eax
.text:5B8E4BEF FF 51 18							       call    dword ptr [ecx+18h]
.text:5B8E4BF2 83 66 44	FB						       and     dword ptr [esi+44h], 0FFFFFFFBh
.text:5B8E4BF6 8B 46 3C							       mov     eax, [esi+3Ch]
.text:5B8E4BF9 8B 00							       mov     eax, [eax]
.text:5B8E4BFB 85 C0							       test    eax, eax
.text:5B8E4BFD 74 1C							       jz      short loc_5B8E4C1B
.text:5B8E4BFF 50							       push    eax	       ; hWnd
.text:5B8E4C00 FF 15 04	11 8E 5B					       call    ds:__imp__IsWindow@4 ; IsWindow(x)
.text:5B8E4C06 85 C0							       test    eax, eax
.text:5B8E4C08 74 0B							       jz      short loc_5B8E4C15
.text:5B8E4C0A 8B 46 3C							       mov     eax, [esi+3Ch]
.text:5B8E4C0D FF 30							       push    dword ptr [eax] ; hWnd
.text:5B8E4C0F FF 15 60	11 8E 5B					       call    ds:__imp__DestroyWindow@4 ; DestroyWindow(x)
.text:5B8E4C15
.text:5B8E4C15						       loc_5B8E4C15:			       ; CODE XREF: ATL::CComControlBase::IOleInPlaceObject_InPlaceDeactivate(void)+40j
.text:5B8E4C15 8B 46 3C							       mov     eax, [esi+3Ch]
.text:5B8E4C18 83 20 00							       and     dword ptr [eax],	0
.text:5B8E4C1B
.text:5B8E4C1B						       loc_5B8E4C1B:			       ; CODE XREF: ATL::CComControlBase::IOleInPlaceObject_InPlaceDeactivate(void)+35j
.text:5B8E4C1B 8B 76 04							       mov     esi, [esi+4]
.text:5B8E4C1E 85 F6							       test    esi, esi
.text:5B8E4C20 74 06							       jz      short loc_5B8E4C28
.text:5B8E4C22 8B 06							       mov     eax, [esi]
.text:5B8E4C24 56							       push    esi
.text:5B8E4C25 FF 50 2C							       call    dword ptr [eax+2Ch]
.text:5B8E4C28
.text:5B8E4C28						       loc_5B8E4C28:			       ; CODE XREF: ATL::CComControlBase::IOleInPlaceObject_InPlaceDeactivate(void)+58j
.text:5B8E4C28 8B 45 FC							       mov     eax, [ebp+var_4]
.text:5B8E4C2B
.text:5B8E4C2B						       loc_5B8E4C2B:			       ; CODE XREF: ATL::CComControlBase::IOleInPlaceObject_InPlaceDeactivate(void)+22j
.text:5B8E4C2B 85 C0							       test    eax, eax
.text:5B8E4C2D 74 06							       jz      short loc_5B8E4C35
.text:5B8E4C2F 8B 08							       mov     ecx, [eax]
.text:5B8E4C31 50							       push    eax
.text:5B8E4C32 FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E4C35
.text:5B8E4C35						       loc_5B8E4C35:			       ; CODE XREF: ATL::CComControlBase::IOleInPlaceObject_InPlaceDeactivate(void)+65j
.text:5B8E4C35 33 C0							       xor     eax, eax
.text:5B8E4C37 5E							       pop     esi
.text:5B8E4C38 C9							       leave
.text:5B8E4C39 C3							       retn
.text:5B8E4C39						       ?IOleInPlaceObject_InPlaceDeactivate@CComControlBase@ATL@@QAEJXZ	endp
.text:5B8E4C39
.text:5B8E4C3A
.text:5B8E4C3A						       ; =============== S U B R O U T I N E =======================================
.text:5B8E4C3A
.text:5B8E4C3A						       ; Attributes: bp-based frame
.text:5B8E4C3A
.text:5B8E4C3A						       ; __int32 __thiscall ATL::CComControlBase::IOleInPlaceObject_UIDeactivate(ATL::CComControlBase *__hidden	this)
.text:5B8E4C3A						       ?IOleInPlaceObject_UIDeactivate@CComControlBase@ATL@@QAEJXZ proc	near
.text:5B8E4C3A											       ; CODE XREF: ATL::IOleInPlaceObjectWindowlessImpl<CTrialEnd>::UIDeactivate(void)+Dp
.text:5B8E4C3A
.text:5B8E4C3A						       var_40	       = dword ptr -40h
.text:5B8E4C3A						       var_2C	       = byte ptr -2Ch
.text:5B8E4C3A						       var_1C	       = byte ptr -1Ch
.text:5B8E4C3A						       var_C	       = byte ptr -0Ch
.text:5B8E4C3A						       var_8	       = dword ptr -8
.text:5B8E4C3A						       var_4	       = dword ptr -4
.text:5B8E4C3A
.text:5B8E4C3A 55							       push    ebp
.text:5B8E4C3B 8B EC							       mov     ebp, esp
.text:5B8E4C3D 83 EC 40							       sub     esp, 40h
.text:5B8E4C40 56							       push    esi
.text:5B8E4C41 8B F1							       mov     esi, ecx
.text:5B8E4C43 8B 46 44							       mov     eax, [esi+44h]
.text:5B8E4C46 A8 08							       test    al, 8
.text:5B8E4C48 0F 84 87	00 00 00					       jz      loc_5B8E4CD5
.text:5B8E4C4E 57							       push    edi
.text:5B8E4C4F 83 E0 F7							       and     eax, 0FFFFFFF7h
.text:5B8E4C52 89 46 44							       mov     [esi+44h], eax
.text:5B8E4C55 8B 46 04							       mov     eax, [esi+4]
.text:5B8E4C58 8D 55 F4							       lea     edx, [ebp+var_C]
.text:5B8E4C5B 33 FF							       xor     edi, edi
.text:5B8E4C5D 52							       push    edx
.text:5B8E4C5E 89 7D F8							       mov     [ebp+var_8], edi
.text:5B8E4C61 89 7D FC							       mov     [ebp+var_4], edi
.text:5B8E4C64 C7 45 C0	14 00 00 00					       mov     [ebp+var_40], 14h
.text:5B8E4C6B 8B 08							       mov     ecx, [eax]
.text:5B8E4C6D 50							       push    eax
.text:5B8E4C6E FF 51 0C							       call    dword ptr [ecx+0Ch]
.text:5B8E4C71 85 C0							       test    eax, eax
.text:5B8E4C73 75 3B							       jnz     short loc_5B8E4CB0
.text:5B8E4C75 8B 46 04							       mov     eax, [esi+4]
.text:5B8E4C78 8B 08							       mov     ecx, [eax]
.text:5B8E4C7A 8D 55 C0							       lea     edx, [ebp+var_40]
.text:5B8E4C7D 52							       push    edx
.text:5B8E4C7E 8D 55 E4							       lea     edx, [ebp+var_1C]
.text:5B8E4C81 52							       push    edx
.text:5B8E4C82 8D 55 D4							       lea     edx, [ebp+var_2C]
.text:5B8E4C85 52							       push    edx
.text:5B8E4C86 8D 55 FC							       lea     edx, [ebp+var_4]
.text:5B8E4C89 52							       push    edx
.text:5B8E4C8A 8D 55 F8							       lea     edx, [ebp+var_8]
.text:5B8E4C8D 52							       push    edx
.text:5B8E4C8E 50							       push    eax
.text:5B8E4C8F FF 51 20							       call    dword ptr [ecx+20h]
.text:5B8E4C92 8B 45 FC							       mov     eax, [ebp+var_4]
.text:5B8E4C95 3B C7							       cmp     eax, edi
.text:5B8E4C97 74 08							       jz      short loc_5B8E4CA1
.text:5B8E4C99 8B 08							       mov     ecx, [eax]
.text:5B8E4C9B 57							       push    edi
.text:5B8E4C9C 57							       push    edi
.text:5B8E4C9D 50							       push    eax
.text:5B8E4C9E FF 51 20							       call    dword ptr [ecx+20h]
.text:5B8E4CA1
.text:5B8E4CA1						       loc_5B8E4CA1:			       ; CODE XREF: ATL::CComControlBase::IOleInPlaceObject_UIDeactivate(void)+5Dj
.text:5B8E4CA1 8B 45 F8							       mov     eax, [ebp+var_8]
.text:5B8E4CA4 3B C7							       cmp     eax, edi
.text:5B8E4CA6 74 08							       jz      short loc_5B8E4CB0
.text:5B8E4CA8 8B 08							       mov     ecx, [eax]
.text:5B8E4CAA 57							       push    edi
.text:5B8E4CAB 57							       push    edi
.text:5B8E4CAC 50							       push    eax
.text:5B8E4CAD FF 51 20							       call    dword ptr [ecx+20h]
.text:5B8E4CB0
.text:5B8E4CB0						       loc_5B8E4CB0:			       ; CODE XREF: ATL::CComControlBase::IOleInPlaceObject_UIDeactivate(void)+39j
.text:5B8E4CB0											       ; ATL::CComControlBase::IOleInPlaceObject_UIDeactivate(void)+6Cj
.text:5B8E4CB0 8B 76 04							       mov     esi, [esi+4]
.text:5B8E4CB3 8B 06							       mov     eax, [esi]
.text:5B8E4CB5 57							       push    edi
.text:5B8E4CB6 56							       push    esi
.text:5B8E4CB7 FF 50 28							       call    dword ptr [eax+28h]
.text:5B8E4CBA 8B 45 FC							       mov     eax, [ebp+var_4]
.text:5B8E4CBD 3B C7							       cmp     eax, edi
.text:5B8E4CBF 74 06							       jz      short loc_5B8E4CC7
.text:5B8E4CC1 8B 08							       mov     ecx, [eax]
.text:5B8E4CC3 50							       push    eax
.text:5B8E4CC4 FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E4CC7
.text:5B8E4CC7						       loc_5B8E4CC7:			       ; CODE XREF: ATL::CComControlBase::IOleInPlaceObject_UIDeactivate(void)+85j
.text:5B8E4CC7 8B 45 F8							       mov     eax, [ebp+var_8]
.text:5B8E4CCA 3B C7							       cmp     eax, edi
.text:5B8E4CCC 5F							       pop     edi
.text:5B8E4CCD 74 06							       jz      short loc_5B8E4CD5
.text:5B8E4CCF 8B 08							       mov     ecx, [eax]
.text:5B8E4CD1 50							       push    eax
.text:5B8E4CD2 FF 51 08							       call    dword ptr [ecx+8]
.text:5B8E4CD5
.text:5B8E4CD5						       loc_5B8E4CD5:			       ; CODE XREF: ATL::CComControlBase::IOleInPlaceObject_UIDeactivate(void)+Ej
.text:5B8E4CD5											       ; ATL::CComControlBase::IOleInPlaceObject_UIDeactivate(void)+93j
.text:5B8E4CD5 33 C0							       xor     eax, eax
.text:5B8E4CD7 5E							       pop     esi
.text:5B8E4CD8 C9							       leave
.text:5B8E4CD9 C3							       retn
.text:5B8E4CD9						       ?IOleInPlaceObject_UIDeactivate@CComControlBase@ATL@@QAEJXZ endp
.text:5B8E4CD9
.text:5B8E4CDA
.text:5B8E4CDA						       ; =============== S U B R O U T I N E =======================================
.text:5B8E4CDA
.text:5B8E4CDA
.text:5B8E4CDA						       ; __int32 __thiscall ATL::CComControlBase::FireViewChange(ATL::CComControlBase *__hidden	this)
.text:5B8E4CDA						       ?FireViewChange@CComControlBase@ATL@@QAEJXZ proc	near
.text:5B8E4CDA											       ; CODE XREF: ATL::CComControlBase::IOleObject_SetExtent(ulong,tagSIZE *)+B5p
.text:5B8E4CDA F6 41 44	04						       test    byte ptr	[ecx+44h], 4
.text:5B8E4CDE 74 35							       jz      short loc_5B8E4D15
.text:5B8E4CE0 8B 41 3C							       mov     eax, [ecx+3Ch]
.text:5B8E4CE3 8B 00							       mov     eax, [eax]
.text:5B8E4CE5 85 C0							       test    eax, eax
.text:5B8E4CE7 74 1A							       jz      short loc_5B8E4D03
.text:5B8E4CE9 6A 01							       push    1	       ; bErase
.text:5B8E4CEB 6A 00							       push    0	       ; lpRect
.text:5B8E4CED 50							       push    eax	       ; hWnd
.text:5B8E4CEE FF 15 00	11 8E 5B					       call    ds:__imp__InvalidateRect@12 ; InvalidateRect(x,x,x)
.text:5B8E4CF4 F7 D8							       neg     eax
.text:5B8E4CF6 1B C0							       sbb     eax, eax
.text:5B8E4CF8 25 FB BF	FF 7F						       and     eax, 7FFFBFFBh
.text:5B8E4CFD 05 05 40	00 80						       add     eax, 80004005h
.text:5B8E4D02 C3							       retn
.text:5B8E4D03						       ; ---------------------------------------------------------------------------
.text:5B8E4D03
.text:5B8E4D03						       loc_5B8E4D03:			       ; CODE XREF: ATL::CComControlBase::FireViewChange(void)+Dj
.text:5B8E4D03 8B 41 04							       mov     eax, [ecx+4]
.text:5B8E4D06 85 C0							       test    eax, eax
.text:5B8E4D08 74 0B							       jz      short loc_5B8E4D15
.text:5B8E4D0A 8B 08							       mov     ecx, [eax]
.text:5B8E4D0C 6A 01							       push    1
.text:5B8E4D0E 6A 00							       push    0
.text:5B8E4D10 50							       push    eax
.text:5B8E4D11 FF 51 64							       call    dword ptr [ecx+64h]
.text:5B8E4D14 C3							       retn
.text:5B8E4D15						       ; ---------------------------------------------------------------------------
.text:5B8E4D15
.text:5B8E4D15						       loc_5B8E4D15:			       ; CODE XREF: ATL::CComControlBase::FireViewChange(void)+4j
.text:5B8E4D15											       ; ATL::CComControlBase::FireViewChange(void)+2Ej
.text:5B8E4D15 8B 49 14							       mov     ecx, [ecx+14h]
.text:5B8E4D18 85 C9							       test    ecx, ecx
.text:5B8E4D1A 74 0A							       jz      short loc_5B8E4D26
.text:5B8E4D1C 8B 01							       mov     eax, [ecx]
.text:5B8E4D1E 6A FF							       push    0FFFFFFFFh
.text:5B8E4D20 6A 01							       push    1
.text:5B8E4D22 51							       push    ecx
.text:5B8E4D23 FF 50 10							       call    dword ptr [eax+10h]
.text:5B8E4D26
.text:5B8E4D26						       loc_5B8E4D26:			       ; CODE XREF: ATL::CComControlBase::FireViewChange(void)+40j
.text:5B8E4D26 33 C0							       xor     eax, eax
.text:5B8E4D28 C3							       retn
.text:5B8E4D28						       ?FireViewChange@CComControlBase@ATL@@QAEJXZ endp
.text:5B8E4D28
.text:5B8E4D29
.text:5B8E4D29						       ; =============== S U B R O U T I N E =======================================
.text:5B8E4D29
.text:5B8E4D29						       ; Attributes: bp-based frame
.text:5B8E4D29
.text:5B8E4D29						       ; void __thiscall ATL::CComControlBase::GetZoomInfo(ATL::CComControlBase	*this, struct ATL::ATL_DRAWINFO	*)
.text:5B8E4D29						       ?GetZoomInfo@CComControlBase@ATL@@QAEXAAUATL_DRAWINFO@2@@Z proc near
.text:5B8E4D29											       ; CODE XREF: ATL::CComControlBase::OnDrawAdvanced(ATL::ATL_DRAWINFO &)+A5p
.text:5B8E4D29
.text:5B8E4D29						       var_8	       = tagSIZE ptr -8
.text:5B8E4D29						       arg_0	       = dword ptr  8
.text:5B8E4D29
.text:5B8E4D29 55							       push    ebp
.text:5B8E4D2A 8B EC							       mov     ebp, esp
.text:5B8E4D2C 51							       push    ecx
.text:5B8E4D2D 51							       push    ecx
.text:5B8E4D2E F6 41 45	10						       test    byte ptr	[ecx+45h], 10h
.text:5B8E4D32 53							       push    ebx
.text:5B8E4D33 56							       push    esi
.text:5B8E4D34 8B 75 08							       mov     esi, [ebp+arg_0]
.text:5B8E4D37 57							       push    edi
.text:5B8E4D38 8B 7E 18							       mov     edi, [esi+18h]
.text:5B8E4D3B 74 08							       jz      short loc_5B8E4D45
.text:5B8E4D3D 8B 51 1C							       mov     edx, [ecx+1Ch]
.text:5B8E4D40 8B 59 20							       mov     ebx, [ecx+20h]
.text:5B8E4D43 EB 06							       jmp     short loc_5B8E4D4B
.text:5B8E4D45						       ; ---------------------------------------------------------------------------
.text:5B8E4D45
.text:5B8E4D45						       loc_5B8E4D45:			       ; CODE XREF: ATL::CComControlBase::GetZoomInfo(ATL::ATL_DRAWINFO	&)+12j
.text:5B8E4D45 8B 51 24							       mov     edx, [ecx+24h]
.text:5B8E4D48 8B 59 28							       mov     ebx, [ecx+28h]
.text:5B8E4D4B
.text:5B8E4D4B						       loc_5B8E4D4B:			       ; CODE XREF: ATL::CComControlBase::GetZoomInfo(ATL::ATL_DRAWINFO	&)+1Aj
.text:5B8E4D4B 83 7E 28	00						       cmp     dword ptr [esi+28h], 0
.text:5B8E4D4F 89 55 F8							       mov     [ebp+var_8._cx],	edx
.text:5B8E4D52 89 5D FC							       mov     [ebp+var_8.cy], ebx
.text:5B8E4D55 75 13							       jnz     short loc_5B8E4D6A
.text:5B8E4D57 8D 45 F8							       lea     eax, [ebp+var_8]
.text:5B8E4D5A 50							       push    eax	       ; struct	tagSIZE	*
.text:5B8E4D5B 8D 45 F8							       lea     eax, [ebp+var_8]
.text:5B8E4D5E 50							       push    eax	       ; struct	tagSIZE	*
.text:5B8E4D5F E8 D3 ED	FF FF						       call    ?AtlHiMetricToPixel@@YGXPBUtagSIZE@@PAU1@@Z ; AtlHiMetricToPixel(tagSIZE	const *,tagSIZE	*)
.text:5B8E4D64 8B 5D FC							       mov     ebx, [ebp+var_8.cy]
.text:5B8E4D67 8B 55 F8							       mov     edx, [ebp+var_8._cx]
.text:5B8E4D6A
.text:5B8E4D6A						       loc_5B8E4D6A:			       ; CODE XREF: ATL::CComControlBase::GetZoomInfo(ATL::ATL_DRAWINFO	&)+2Cj
.text:5B8E4D6A 8B 47 08							       mov     eax, [edi+8]
.text:5B8E4D6D 8B 4F 0C							       mov     ecx, [edi+0Ch]
.text:5B8E4D70 2B 07							       sub     eax, [edi]
.text:5B8E4D72 2B 4F 04							       sub     ecx, [edi+4]
.text:5B8E4D75 85 D2							       test    edx, edx
.text:5B8E4D77 89 46 2C							       mov     [esi+2Ch], eax
.text:5B8E4D7A 89 4E 30							       mov     [esi+30h], ecx
.text:5B8E4D7D 89 56 34							       mov     [esi+34h], edx
.text:5B8E4D80 89 5E 38							       mov     [esi+38h], ebx
.text:5B8E4D83 74 1D							       jz      short loc_5B8E4DA2
.text:5B8E4D85 85 DB							       test    ebx, ebx
.text:5B8E4D87 74 19							       jz      short loc_5B8E4DA2
.text:5B8E4D89 85 C0							       test    eax, eax
.text:5B8E4D8B 74 15							       jz      short loc_5B8E4DA2
.text:5B8E4D8D 85 C9							       test    ecx, ecx
.text:5B8E4D8F 74 11							       jz      short loc_5B8E4DA2
.text:5B8E4D91 3B C2							       cmp     eax, edx
.text:5B8E4D93 75 04							       jnz     short loc_5B8E4D99
.text:5B8E4D95 3B CB							       cmp     ecx, ebx
.text:5B8E4D97 74 18							       jz      short loc_5B8E4DB1
.text:5B8E4D99
.text:5B8E4D99						       loc_5B8E4D99:			       ; CODE XREF: ATL::CComControlBase::GetZoomInfo(ATL::ATL_DRAWINFO	&)+6Aj
.text:5B8E4D99 C7 46 24	01 00 00 00					       mov     dword ptr [esi+24h], 1
.text:5B8E4DA0 EB 13							       jmp     short loc_5B8E4DB5
.text:5B8E4DA2						       ; ---------------------------------------------------------------------------
.text:5B8E4DA2
.text:5B8E4DA2						       loc_5B8E4DA2:			       ; CODE XREF: ATL::CComControlBase::GetZoomInfo(ATL::ATL_DRAWINFO	&)+5Aj
.text:5B8E4DA2											       ; ATL::CComControlBase::GetZoomInfo(ATL::ATL_DRAWINFO &)+5Ej ...
.text:5B8E4DA2 33 C0							       xor     eax, eax
.text:5B8E4DA4 40							       inc     eax
.text:5B8E4DA5 89 46 38							       mov     [esi+38h], eax
.text:5B8E4DA8 89 46 34							       mov     [esi+34h], eax
.text:5B8E4DAB 89 46 30							       mov     [esi+30h], eax
.text:5B8E4DAE 89 46 2C							       mov     [esi+2Ch], eax
.text:5B8E4DB1
.text:5B8E4DB1						       loc_5B8E4DB1:			       ; CODE XREF: ATL::CComControlBase::GetZoomInfo(ATL::ATL_DRAWINFO	&)+6Ej
.text:5B8E4DB1 83 66 24	00						       and     dword ptr [esi+24h], 0
.text:5B8E4DB5
.text:5B8E4DB5						       loc_5B8E4DB5:			       ; CODE XREF: ATL::CComControlBase::GetZoomInfo(ATL::ATL_DRAWINFO	&)+77j
.text:5B8E4DB5 5F							       pop     edi
.text:5B8E4DB6 5E							       pop     esi
.text:5B8E4DB7 5B							       pop     ebx
.text:5B8E4DB8 C9							       leave
.text:5B8E4DB9 C2 04 00							       retn    4
.text:5B8E4DB9						       ?GetZoomInfo@CComControlBase@ATL@@QAEXAAUATL_DRAWINFO@2@@Z endp
.text:5B8E4DB9
.text:5B8E4DBC
.text:5B8E4DBC						       ; =============== S U B R O U T I N E =======================================
.text:5B8E4DBC
.text:5B8E4DBC						       ; Attributes: bp-based frame
.text:5B8E4DBC
.text:5B8E4DBC						       ; __int32 __thiscall ATL::CComControlBase::OnDrawAdvanced(ATL::CComControlBase *this, struct ATL::ATL_DRAWINFO *)
.text:5B8E4DBC						       ?OnDrawAdvanced@CComControlBase@ATL@@UAEJAAUATL_DRAWINFO@2@@Z proc near
.text:5B8E4DBC											       ; DATA XREF: .text:5B8E13BCo
.text:5B8E4DBC
.text:5B8E4DBC						       pt	       = tagPOINT ptr -18h
.text:5B8E4DBC						       var_8	       = dword ptr -8
.text:5B8E4DBC						       var_4	       = dword ptr -4
.text:5B8E4DBC						       arg_0	       = dword ptr  8
.text:5B8E4DBC
.text:5B8E4DBC 55							       push    ebp
.text:5B8E4DBD 8B EC							       mov     ebp, esp
.text:5B8E4DBF 83 EC 18							       sub     esp, 18h
.text:5B8E4DC2 83 65 F8	00						       and     [ebp+var_8], 0
.text:5B8E4DC6 53							       push    ebx
.text:5B8E4DC7 8B 5D 08							       mov     ebx, [ebp+arg_0]
.text:5B8E4DCA 83 7B 10	00						       cmp     dword ptr [ebx+10h], 0
.text:5B8E4DCE 89 4D FC							       mov     [ebp+var_4], ecx
.text:5B8E4DD1 75 19							       jnz     short loc_5B8E4DEC
.text:5B8E4DD3 FF 73 0C							       push    dword ptr [ebx+0Ch] ; struct tagDVTARGETDEVICE *
.text:5B8E4DD6 FF 73 14							       push    dword ptr [ebx+14h] ; hdc
.text:5B8E4DD9 E8 F1 EC	FF FF						       call    ?AtlCreateTargetDC@@YGPAUHDC__@@PAU1@PAUtagDVTARGETDEVICE@@@Z ; AtlCreateTargetDC(HDC__ *,tagDVTARGETDEVICE *)
.text:5B8E4DDE 33 C9							       xor     ecx, ecx
.text:5B8E4DE0 3B 43 14							       cmp     eax, [ebx+14h]
.text:5B8E4DE3 89 43 10							       mov     [ebx+10h], eax
.text:5B8E4DE6 0F 95 C1							       setnz   cl
.text:5B8E4DE9 89 4D F8							       mov     [ebp+var_8], ecx
.text:5B8E4DEC
.text:5B8E4DEC						       loc_5B8E4DEC:			       ; CODE XREF: ATL::CComControlBase::OnDrawAdvanced(ATL::ATL_DRAWINFO &)+15j
.text:5B8E4DEC 56							       push    esi
.text:5B8E4DED 8B 73 18							       mov     esi, [ebx+18h]
.text:5B8E4DF0 57							       push    edi
.text:5B8E4DF1 8D 7D E8							       lea     edi, [ebp+pt]
.text:5B8E4DF4 A5							       movsd
.text:5B8E4DF5 A5							       movsd
.text:5B8E4DF6 A5							       movsd
.text:5B8E4DF7 6A 02							       push    2	       ; index
.text:5B8E4DF9 FF 73 14							       push    dword ptr [ebx+14h] ; hdc
.text:5B8E4DFC A5							       movsd
.text:5B8E4DFD FF 15 4C	10 8E 5B					       call    ds:__imp__GetDeviceCaps@8 ; GetDeviceCaps(x,x)
.text:5B8E4E03 8B F0							       mov     esi, eax
.text:5B8E4E05 83 EE 05							       sub     esi, 5
.text:5B8E4E08 F7 DE							       neg     esi
.text:5B8E4E0A 1B F6							       sbb     esi, esi
.text:5B8E4E0C 46							       inc     esi
.text:5B8E4E0D 75 46							       jnz     short loc_5B8E4E55
.text:5B8E4E0F 6A 02							       push    2	       ; c
.text:5B8E4E11 8D 45 E8							       lea     eax, [ebp+pt]
.text:5B8E4E14 50							       push    eax	       ; lppt
.text:5B8E4E15 FF 73 10							       push    dword ptr [ebx+10h] ; hdc
.text:5B8E4E18 FF 15 48	10 8E 5B					       call    ds:__imp__LPtoDP@12 ; LPtoDP(x,x,x)
.text:5B8E4E1E FF 73 14							       push    dword ptr [ebx+14h] ; hdc
.text:5B8E4E21 FF 15 38	10 8E 5B					       call    ds:__imp__SaveDC@4 ; SaveDC(x)
.text:5B8E4E27 6A 01							       push    1	       ; iMode
.text:5B8E4E29 FF 73 14							       push    dword ptr [ebx+14h] ; hdc
.text:5B8E4E2C FF 15 44	10 8E 5B					       call    ds:__imp__SetMapMode@8 ;	SetMapMode(x,x)
.text:5B8E4E32 33 FF							       xor     edi, edi
.text:5B8E4E34 57							       push    edi	       ; lppt
.text:5B8E4E35 57							       push    edi	       ; y
.text:5B8E4E36 57							       push    edi	       ; x
.text:5B8E4E37 FF 73 14							       push    dword ptr [ebx+14h] ; hdc
.text:5B8E4E3A FF 15 34	10 8E 5B					       call    ds:__imp__SetWindowOrgEx@16 ; SetWindowOrgEx(x,x,x,x)
.text:5B8E4E40 57							       push    edi	       ; lppt
.text:5B8E4E41 57							       push    edi	       ; y
.text:5B8E4E42 57							       push    edi	       ; x
.text:5B8E4E43 FF 73 14							       push    dword ptr [ebx+14h] ; hdc
.text:5B8E4E46 FF 15 40	10 8E 5B					       call    ds:__imp__SetViewportOrgEx@16 ; SetViewportOrgEx(x,x,x,x)
.text:5B8E4E4C C7 43 20	01 00 00 00					       mov     dword ptr [ebx+20h], 1
.text:5B8E4E53 EB 02							       jmp     short loc_5B8E4E57
.text:5B8E4E55						       ; ---------------------------------------------------------------------------
.text:5B8E4E55
.text:5B8E4E55						       loc_5B8E4E55:			       ; CODE XREF: ATL::CComControlBase::OnDrawAdvanced(ATL::ATL_DRAWINFO &)+51j
.text:5B8E4E55 33 FF							       xor     edi, edi
.text:5B8E4E57
.text:5B8E4E57						       loc_5B8E4E57:			       ; CODE XREF: ATL::CComControlBase::OnDrawAdvanced(ATL::ATL_DRAWINFO &)+97j
.text:5B8E4E57 8B 4D FC							       mov     ecx, [ebp+var_4]	; this
.text:5B8E4E5A 8D 45 E8							       lea     eax, [ebp+pt]
.text:5B8E4E5D 53							       push    ebx	       ; struct	ATL::ATL_DRAWINFO *
.text:5B8E4E5E 89 43 18							       mov     [ebx+18h], eax
.text:5B8E4E61 E8 C3 FE	FF FF						       call    ?GetZoomInfo@CComControlBase@ATL@@QAEXAAUATL_DRAWINFO@2@@Z ; ATL::CComControlBase::GetZoomInfo(ATL::ATL_DRAWINFO	&)
.text:5B8E4E66 8B 4D FC							       mov     ecx, [ebp+var_4]
.text:5B8E4E69 8B 01							       mov     eax, [ecx]
.text:5B8E4E6B 53							       push    ebx
.text:5B8E4E6C FF 50 0C							       call    dword ptr [eax+0Ch]
.text:5B8E4E6F 39 7D F8							       cmp     [ebp+var_8], edi
.text:5B8E4E72 89 45 08							       mov     [ebp+arg_0], eax
.text:5B8E4E75 74 09							       jz      short loc_5B8E4E80
.text:5B8E4E77 FF 73 10							       push    dword ptr [ebx+10h] ; hdc
.text:5B8E4E7A FF 15 3C	10 8E 5B					       call    ds:__imp__DeleteDC@4 ; DeleteDC(x)
.text:5B8E4E80
.text:5B8E4E80						       loc_5B8E4E80:			       ; CODE XREF: ATL::CComControlBase::OnDrawAdvanced(ATL::ATL_DRAWINFO &)+B9j
.text:5B8E4E80 3B F7							       cmp     esi, edi
.text:5B8E4E82 5F							       pop     edi
.text:5B8E4E83 5E							       pop     esi
.text:5B8E4E84 75 0B							       jnz     short loc_5B8E4E91
.text:5B8E4E86 6A FF							       push    0FFFFFFFFh      ; nSavedDC
.text:5B8E4E88 FF 73 14							       push    dword ptr [ebx+14h] ; hdc
.text:5B8E4E8B FF 15 30	10 8E 5B					       call    ds:__imp__RestoreDC@8 ; RestoreDC(x,x)
.text:5B8E4E91
.text:5B8E4E91						       loc_5B8E4E91:			       ; CODE XREF: ATL::CComControlBase::OnDrawAdvanced(ATL::ATL_DRAWINFO &)+C8j
.text:5B8E4E91 8B 45 08							       mov     eax, [ebp+arg_0]
.text:5B8E4E94 5B							       pop     ebx
.text:5B8E4E95 C9							       leave
.text:5B8E4E96 C2 04 00							       retn    4
.text:5B8E4E96						       ?OnDrawAdvanced@CComControlBase@ATL@@UAEJAAUATL_DRAWINFO@2@@Z endp
.text:5B8E4E96
.text:5B8E4E99
.text:5B8E4E99						       ; =============== S U B R O U T I N E =======================================
.text:5B8E4E99
.text:5B8E4E99
.text:5B8E4E99						       ; __int32 __stdcall ATL::CWindowImplBase::StartWindowProc(HWND hWnd, unsigned int, unsigned int,	__int32)
.text:5B8E4E99						       ?StartWindowProc@CWindowImplBase@ATL@@SGJPAUHWND__@@IIJ@Z proc near
.text:5B8E4E99											       ; DATA XREF: .data:ATL::CWndClassInfo `ATL::CWindowImpl<CTrialEnd>::GetWndClassInfo(void)'::`2'::wco
.text:5B8E4E99
.text:5B8E4E99						       hWnd	       = dword ptr  4
.text:5B8E4E99						       arg_4	       = dword ptr  8
.text:5B8E4E99						       arg_8	       = dword ptr  0Ch
.text:5B8E4E99						       arg_C	       = dword ptr  10h
.text:5B8E4E99
.text:5B8E4E99 56							       push    esi
.text:5B8E4E9A 57							       push    edi
.text:5B8E4E9B B9 D8 70	8E 5B						       mov     ecx, offset ?_Module@@3VCComModule@ATL@@A ; this
.text:5B8E4EA0 E8 DC E3	FF FF						       call    ?ExtractCreateWndData@CComModule@ATL@@QAEPAXXZ ;	ATL::CComModule::ExtractCreateWndData(void)
.text:5B8E4EA5 8B 7C 24	0C						       mov     edi, [esp+8+hWnd]
.text:5B8E4EA9 8D 70 14							       lea     esi, [eax+14h]
.text:5B8E4EAC 50							       push    eax	       ; void *
.text:5B8E4EAD 68 C4 3C	8E 5B						       push    offset ?WindowProc@CWindowImplBase@ATL@@SGJPAUHWND__@@IIJ@Z ; unsigned __int32
.text:5B8E4EB2 8B CE							       mov     ecx, esi	       ; this
.text:5B8E4EB4 89 78 04							       mov     [eax+4],	edi
.text:5B8E4EB7 E8 26 E5	FF FF						       call    ?Init@CDynamicStdCallThunk@ATL@@QAEXKPAX@Z ; ATL::CDynamicStdCallThunk::Init(ulong,void *)
.text:5B8E4EBC 8B 36							       mov     esi, [esi]
.text:5B8E4EBE 56							       push    esi	       ; dwNewLong
.text:5B8E4EBF 6A FC							       push    0FFFFFFFCh      ; nIndex
.text:5B8E4EC1 57							       push    edi	       ; hWnd
.text:5B8E4EC2 FF 15 20	11 8E 5B					       call    ds:__imp__SetWindowLongW@12 ; SetWindowLongW(x,x,x)
.text:5B8E4EC8 FF 74 24	18						       push    [esp+8+arg_C]
.text:5B8E4ECC FF 74 24	18						       push    [esp+0Ch+arg_8]
.text:5B8E4ED0 FF 74 24	18						       push    [esp+10h+arg_4]
.text:5B8E4ED4 57							       push    edi
.text:5B8E4ED5 FF D6							       call    esi
.text:5B8E4ED7 5F							       pop     edi
.text:5B8E4ED8 5E							       pop     esi
.text:5B8E4ED9 C2 10 00							       retn    10h
.text:5B8E4ED9						       ?StartWindowProc@CWindowImplBase@ATL@@SGJPAUHWND__@@IIJ@Z endp
.text:5B8E4ED9
.text:5B8E4EDC
.text:5B8E4EDC						       ; =============== S U B R O U T I N E =======================================
.text:5B8E4EDC
.text:5B8E4EDC						       ; Attributes: bp-based frame
.text:5B8E4EDC
.text:5B8E4EDC						       ; __int32 __thiscall ATL::CRegParser::RegisterSubkeys(ATL::CRegParser *this, HKEY hKey, int, int)
.text:5B8E4EDC						       ?RegisterSubkeys@CRegParser@ATL@@IAEJPAUHKEY__@@HH@Z proc near
.text:5B8E4EDC											       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+368p
.text:5B8E4EDC											       ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+45Ap ...
.text:5B8E4EDC
.text:5B8E4EDC						       SubKey	       = word ptr -4218h
.text:5B8E4EDC						       String1	       = word ptr -2218h
.text:5B8E4EDC						       ValueName       = word ptr -218h
.text:5B8E4EDC						       var_10	       = dword ptr -10h
.text:5B8E4EDC						       var_C	       = dword ptr -0Ch
.text:5B8E4EDC						       var_8	       = dword ptr -8
.text:5B8E4EDC						       var_4	       = dword ptr -4
.text:5B8E4EDC						       hKey	       = dword ptr  8
.text:5B8E4EDC						       arg_4	       = dword ptr  0Ch
.text:5B8E4EDC						       arg_8	       = dword ptr  10h
.text:5B8E4EDC
.text:5B8E4EDC 55							       push    ebp
.text:5B8E4EDD 8B EC							       mov     ebp, esp
.text:5B8E4EDF B8 18 42	00 00						       mov     eax, 4218h
.text:5B8E4EE4 E8 97 08	00 00						       call    __chkstk
.text:5B8E4EE9 8B 45 10							       mov     eax, [ebp+arg_8]
.text:5B8E4EEC 83 65 F8	00						       and     [ebp+var_8], 0
.text:5B8E4EF0 53							       push    ebx
.text:5B8E4EF1 89 45 F0							       mov     [ebp+var_10], eax
.text:5B8E4EF4 56							       push    esi
.text:5B8E4EF5 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E4EFB 50							       push    eax	       ; unsigned __int16 *
.text:5B8E4EFC 8B D9							       mov     ebx, ecx
.text:5B8E4EFE C7 45 F4	01 00 00 00					       mov     [ebp+var_C], 1
.text:5B8E4F05 E8 88 EE	FF FF						       call    ?NextToken@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::NextToken(ushort	*)
.text:5B8E4F0A 8B F0							       mov     esi, eax
.text:5B8E4F0C 85 F6							       test    esi, esi
.text:5B8E4F0E 0F 8C 5F	04 00 00					       jl      loc_5B8E5373
.text:5B8E4F14 57							       push    edi
.text:5B8E4F15 E9 3B 04	00 00						       jmp     loc_5B8E5355
.text:5B8E4F1A						       ; ---------------------------------------------------------------------------
.text:5B8E4F1A
.text:5B8E4F1A						       loc_5B8E4F1A:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+481j
.text:5B8E4F1A 8B 35 7C	10 8E 5B					       mov     esi, ds:__imp__lstrcmpiW@8 ; lstrcmpiW(x,x)
.text:5B8E4F20 68 A4 16	8E 5B						       push    offset aDelete  ; "Delete"
.text:5B8E4F25 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E4F2B 50							       push    eax	       ; lpString1
.text:5B8E4F2C FF D6							       call    esi ; lstrcmpiW(x,x) ; lstrcmpiW(x,x)
.text:5B8E4F2E 8B F8							       mov     edi, eax
.text:5B8E4F30 F7 DF							       neg     edi
.text:5B8E4F32 68 C8 16	8E 5B						       push    offset aForceremove ; "ForceRemove"
.text:5B8E4F37 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E4F3D 1B FF							       sbb     edi, edi
.text:5B8E4F3F 50							       push    eax	       ; lpString1
.text:5B8E4F40 47							       inc     edi
.text:5B8E4F41 FF D6							       call    esi ; lstrcmpiW(x,x) ; lstrcmpiW(x,x)
.text:5B8E4F43 85 C0							       test    eax, eax
.text:5B8E4F45 74 08							       jz      short loc_5B8E4F4F
.text:5B8E4F47 85 FF							       test    edi, edi
.text:5B8E4F49 0F 84 A7	00 00 00					       jz      loc_5B8E4FF6
.text:5B8E4F4F
.text:5B8E4F4F						       loc_5B8E4F4F:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+69j
.text:5B8E4F4F 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E4F55 50							       push    eax	       ; unsigned __int16 *
.text:5B8E4F56 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E4F58 E8 35 EE	FF FF						       call    ?NextToken@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::NextToken(ushort	*)
.text:5B8E4F5D 8B F0							       mov     esi, eax
.text:5B8E4F5F 85 F6							       test    esi, esi
.text:5B8E4F61 0F 8C 0B	04 00 00					       jl      loc_5B8E5372
.text:5B8E4F67 83 7D 0C	00						       cmp     [ebp+arg_4], 0
.text:5B8E4F6B 0F 84 85	00 00 00					       jz      loc_5B8E4FF6
.text:5B8E4F71 83 65 FC	00						       and     [ebp+var_4], 0
.text:5B8E4F75 6A 5C							       push    5Ch
.text:5B8E4F77 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E4F7D E8 B3 DB	FF FF						       call    sub_5B8E2B35
.text:5B8E4F82 85 C0							       test    eax, eax
.text:5B8E4F84 0F 85 DB	03 00 00					       jnz     loc_5B8E5365
.text:5B8E4F8A 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E4F90 50							       push    eax	       ; unsigned __int16 *
.text:5B8E4F91 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E4F93 E8 AF DC	FF FF						       call    ?CanForceRemoveKey@CRegParser@ATL@@IAEHPBG@Z ; ATL::CRegParser::CanForceRemoveKey(ushort	const *)
.text:5B8E4F98 85 C0							       test    eax, eax
.text:5B8E4F9A 74 19							       jz      short loc_5B8E4FB5
.text:5B8E4F9C 8B 45 08							       mov     eax, [ebp+hKey]
.text:5B8E4F9F 89 45 FC							       mov     [ebp+var_4], eax
.text:5B8E4FA2 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E4FA8 50							       push    eax	       ; unsigned __int16 *
.text:5B8E4FA9 8D 4D FC							       lea     ecx, [ebp+var_4]	; this
.text:5B8E4FAC E8 FF F2	FF FF						       call    ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBG@Z	; ATL::CRegKey::RecurseDeleteKey(ushort	const *)
.text:5B8E4FB1 83 65 FC	00						       and     [ebp+var_4], 0
.text:5B8E4FB5
.text:5B8E4FB5						       loc_5B8E4FB5:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+BEj
.text:5B8E4FB5 85 FF							       test    edi, edi
.text:5B8E4FB7 74 35							       jz      short loc_5B8E4FEE
.text:5B8E4FB9 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E4FBF 50							       push    eax	       ; unsigned __int16 *
.text:5B8E4FC0 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E4FC2 E8 CB ED	FF FF						       call    ?NextToken@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::NextToken(ushort	*)
.text:5B8E4FC7 8B F0							       mov     esi, eax
.text:5B8E4FC9 85 F6							       test    esi, esi
.text:5B8E4FCB 0F 8C B2	03 00 00					       jl      loc_5B8E5383
.text:5B8E4FD1 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E4FD7 50							       push    eax	       ; unsigned __int16 *
.text:5B8E4FD8 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E4FDA E8 0D F0	FF FF						       call    ?SkipAssignment@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::SkipAssignment(ushort *)
.text:5B8E4FDF 8D 4D FC							       lea     ecx, [ebp+var_4]	; this
.text:5B8E4FE2 8B F0							       mov     esi, eax
.text:5B8E4FE4 E8 EB E2	FF FF						       call    ?Close@CRegKey@ATL@@QAEJXZ ; ATL::CRegKey::Close(void)
.text:5B8E4FE9 E9 2A 03	00 00						       jmp     loc_5B8E5318
.text:5B8E4FEE						       ; ---------------------------------------------------------------------------
.text:5B8E4FEE
.text:5B8E4FEE						       loc_5B8E4FEE:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+DBj
.text:5B8E4FEE 8D 4D FC							       lea     ecx, [ebp+var_4]	; this
.text:5B8E4FF1 E8 DE E2	FF FF						       call    ?Close@CRegKey@ATL@@QAEJXZ ; ATL::CRegKey::Close(void)
.text:5B8E4FF6
.text:5B8E4FF6						       loc_5B8E4FF6:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+6Dj
.text:5B8E4FF6											       ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+8Fj
.text:5B8E4FF6 68 B4 16	8E 5B						       push    offset aNoremove	; "NoRemove"
.text:5B8E4FFB 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E5001 50							       push    eax	       ; lpString1
.text:5B8E5002 FF 15 7C	10 8E 5B					       call    ds:__imp__lstrcmpiW@8 ; lstrcmpiW(x,x)
.text:5B8E5008 85 C0							       test    eax, eax
.text:5B8E500A 75 1B							       jnz     short loc_5B8E5027
.text:5B8E500C 21 45 F4							       and     [ebp+var_C], eax
.text:5B8E500F 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E5015 50							       push    eax	       ; unsigned __int16 *
.text:5B8E5016 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E5018 E8 75 ED	FF FF						       call    ?NextToken@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::NextToken(ushort	*)
.text:5B8E501D 8B F0							       mov     esi, eax
.text:5B8E501F 85 F6							       test    esi, esi
.text:5B8E5021 0F 8C 4B	03 00 00					       jl      loc_5B8E5372
.text:5B8E5027
.text:5B8E5027						       loc_5B8E5027:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+12Ej
.text:5B8E5027 68 E0 16	8E 5B						       push    offset aVal     ; "Val"
.text:5B8E502C 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E5032 50							       push    eax	       ; lpString1
.text:5B8E5033 FF 15 7C	10 8E 5B					       call    ds:__imp__lstrcmpiW@8 ; lstrcmpiW(x,x)
.text:5B8E5039 85 C0							       test    eax, eax
.text:5B8E503B 0F 85 A4	00 00 00					       jnz     loc_5B8E50E5
.text:5B8E5041 8D 85 E8	FD FF FF					       lea     eax, [ebp+ValueName]
.text:5B8E5047 50							       push    eax	       ; unsigned __int16 *
.text:5B8E5048 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E504A E8 43 ED	FF FF						       call    ?NextToken@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::NextToken(ushort	*)
.text:5B8E504F 8B F0							       mov     esi, eax
.text:5B8E5051 33 FF							       xor     edi, edi
.text:5B8E5053 3B F7							       cmp     esi, edi
.text:5B8E5055 0F 8C 17	03 00 00					       jl      loc_5B8E5372
.text:5B8E505B 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E5061 50							       push    eax	       ; unsigned __int16 *
.text:5B8E5062 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E5064 E8 29 ED	FF FF						       call    ?NextToken@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::NextToken(ushort	*)
.text:5B8E5069 8B F0							       mov     esi, eax
.text:5B8E506B 3B F7							       cmp     esi, edi
.text:5B8E506D 0F 8C FF	02 00 00					       jl      loc_5B8E5372
.text:5B8E5073 66 83 BD	E8 DD FF FF 3D					       cmp     [ebp+String1], 3Dh
.text:5B8E507B 0F 85 EC	02 00 00					       jnz     loc_5B8E536D
.text:5B8E5081 39 7D 0C							       cmp     [ebp+arg_4], edi
.text:5B8E5084 74 33							       jz      short loc_5B8E50B9
.text:5B8E5086 8B 45 08							       mov     eax, [ebp+hKey]
.text:5B8E5089 89 45 FC							       mov     [ebp+var_4], eax
.text:5B8E508C 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E5092 50							       push    eax	       ; unsigned __int16 *
.text:5B8E5093 8D 85 E8	FD FF FF					       lea     eax, [ebp+ValueName]
.text:5B8E5099 50							       push    eax	       ; unsigned __int16 *
.text:5B8E509A 8D 45 FC							       lea     eax, [ebp+var_4]
.text:5B8E509D 50							       push    eax	       ; struct	ATL::CRegKey *
.text:5B8E509E 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E50A0 E8 D2 ED	FF FF						       call    ?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PBGPAG@Z ; ATL::CRegParser::AddValue(ATL::CRegKey &,ushort const *,ushort *)
.text:5B8E50A5 8D 4D FC							       lea     ecx, [ebp+var_4]	; this
.text:5B8E50A8 8B F0							       mov     esi, eax
.text:5B8E50AA 89 7D FC							       mov     [ebp+var_4], edi
.text:5B8E50AD E8 22 E2	FF FF						       call    ?Close@CRegKey@ATL@@QAEJXZ ; ATL::CRegKey::Close(void)
.text:5B8E50B2 3B F7							       cmp     esi, edi
.text:5B8E50B4 E9 61 02	00 00						       jmp     loc_5B8E531A
.text:5B8E50B9						       ; ---------------------------------------------------------------------------
.text:5B8E50B9
.text:5B8E50B9						       loc_5B8E50B9:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+1A8j
.text:5B8E50B9 39 7D 10							       cmp     [ebp+arg_8], edi
.text:5B8E50BC 75 10							       jnz     short loc_5B8E50CE
.text:5B8E50BE 8D 85 E8	FD FF FF					       lea     eax, [ebp+ValueName]
.text:5B8E50C4 50							       push    eax	       ; lpValueName
.text:5B8E50C5 FF 75 08							       push    [ebp+hKey]      ; hKey
.text:5B8E50C8 FF 15 20	10 8E 5B					       call    ds:__imp__RegDeleteValueW@8 ; RegDeleteValueW(x,x)
.text:5B8E50CE
.text:5B8E50CE						       loc_5B8E50CE:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+1E0j
.text:5B8E50CE 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E50D4 50							       push    eax	       ; unsigned __int16 *
.text:5B8E50D5 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E50D7 E8 10 EF	FF FF						       call    ?SkipAssignment@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::SkipAssignment(ushort *)
.text:5B8E50DC 8B F0							       mov     esi, eax
.text:5B8E50DE 3B F7							       cmp     esi, edi
.text:5B8E50E0 E9 6E 02	00 00						       jmp     loc_5B8E5353
.text:5B8E50E5						       ; ---------------------------------------------------------------------------
.text:5B8E50E5
.text:5B8E50E5						       loc_5B8E50E5:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+15Fj
.text:5B8E50E5 6A 5C							       push    5Ch
.text:5B8E50E7 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E50ED E8 43 DA	FF FF						       call    sub_5B8E2B35
.text:5B8E50F2 85 C0							       test    eax, eax
.text:5B8E50F4 0F 85 73	02 00 00					       jnz     loc_5B8E536D
.text:5B8E50FA 39 45 0C							       cmp     [ebp+arg_4], eax
.text:5B8E50FD 0F 84 97	00 00 00					       jz      loc_5B8E519A
.text:5B8E5103 BE 3F 00	0F 00						       mov     esi, 0F003Fh
.text:5B8E5108 56							       push    esi	       ; samDesired
.text:5B8E5109 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E510F 50							       push    eax	       ; lpSubKey
.text:5B8E5110 FF 75 08							       push    [ebp+hKey]      ; hKey
.text:5B8E5113 8D 4D F8							       lea     ecx, [ebp+var_8]	; this
.text:5B8E5116 E8 1E E2	FF FF						       call    ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBGK@Z	; ATL::CRegKey::Open(HKEY__ *,ushort const *,ulong)
.text:5B8E511B 85 C0							       test    eax, eax
.text:5B8E511D 74 3C							       jz      short loc_5B8E515B
.text:5B8E511F 68 19 00	02 00						       push    20019h	       ; samDesired
.text:5B8E5124 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E512A 50							       push    eax	       ; lpSubKey
.text:5B8E512B FF 75 08							       push    [ebp+hKey]      ; hKey
.text:5B8E512E 8D 4D F8							       lea     ecx, [ebp+var_8]	; this
.text:5B8E5131 E8 03 E2	FF FF						       call    ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBGK@Z	; ATL::CRegKey::Open(HKEY__ *,ushort const *,ulong)
.text:5B8E5136 85 C0							       test    eax, eax
.text:5B8E5138 74 21							       jz      short loc_5B8E515B
.text:5B8E513A 33 C0							       xor     eax, eax
.text:5B8E513C 50							       push    eax	       ; unsigned __int32 *
.text:5B8E513D 50							       push    eax	       ; lpSecurityAttributes
.text:5B8E513E 56							       push    esi	       ; samDesired
.text:5B8E513F 50							       push    eax	       ; dwOptions
.text:5B8E5140 50							       push    eax	       ; lpClass
.text:5B8E5141 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E5147 50							       push    eax	       ; lpSubKey
.text:5B8E5148 FF 75 08							       push    [ebp+hKey]      ; hKey
.text:5B8E514B 8D 4D F8							       lea     ecx, [ebp+var_8]	; this
.text:5B8E514E E8 98 E1	FF FF						       call    ?Create@CRegKey@ATL@@QAEJPAUHKEY__@@PBGPAGKKPAU_SECURITY_ATTRIBUTES@@PAK@Z ; ATL::CRegKey::Create(HKEY__	*,ushort const *,ushort	*,ulong,ulong,_SECURITY_ATTRIBUTES *,ulong *)
.text:5B8E5153 85 C0							       test    eax, eax
.text:5B8E5155 0F 85 12	02 00 00					       jnz     loc_5B8E536D
.text:5B8E515B
.text:5B8E515B						       loc_5B8E515B:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+241j
.text:5B8E515B											       ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+25Cj
.text:5B8E515B 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E5161 50							       push    eax	       ; unsigned __int16 *
.text:5B8E5162 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E5164 E8 29 EC	FF FF						       call    ?NextToken@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::NextToken(ushort	*)
.text:5B8E5169 8B F0							       mov     esi, eax
.text:5B8E516B 85 F6							       test    esi, esi
.text:5B8E516D 0F 8C FF	01 00 00					       jl      loc_5B8E5372
.text:5B8E5173 66 83 BD	E8 DD FF FF 3D					       cmp     [ebp+String1], 3Dh
.text:5B8E517B 0F 85 9B	01 00 00					       jnz     loc_5B8E531C
.text:5B8E5181 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E5187 50							       push    eax	       ; unsigned __int16 *
.text:5B8E5188 6A 00							       push    0	       ; unsigned __int16 *
.text:5B8E518A 8D 45 F8							       lea     eax, [ebp+var_8]
.text:5B8E518D 50							       push    eax	       ; struct	ATL::CRegKey *
.text:5B8E518E 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E5190 E8 E2 EC	FF FF						       call    ?AddValue@CRegParser@ATL@@IAEJAAVCRegKey@2@PBGPAG@Z ; ATL::CRegParser::AddValue(ATL::CRegKey &,ushort const *,ushort *)
.text:5B8E5195 E9 7C 01	00 00						       jmp     loc_5B8E5316
.text:5B8E519A						       ; ---------------------------------------------------------------------------
.text:5B8E519A
.text:5B8E519A						       loc_5B8E519A:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+221j
.text:5B8E519A 83 7D 10	00						       cmp     [ebp+arg_8], 0
.text:5B8E519E 75 22							       jnz     short loc_5B8E51C2
.text:5B8E51A0 68 3F 00	0F 00						       push    0F003Fh	       ; samDesired
.text:5B8E51A5 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E51AB 50							       push    eax	       ; lpSubKey
.text:5B8E51AC FF 75 08							       push    [ebp+hKey]      ; hKey
.text:5B8E51AF 8D 4D F8							       lea     ecx, [ebp+var_8]	; this
.text:5B8E51B2 E8 82 E1	FF FF						       call    ?Open@CRegKey@ATL@@QAEJPAUHKEY__@@PBGK@Z	; ATL::CRegKey::Open(HKEY__ *,ushort const *,ulong)
.text:5B8E51B7 85 C0							       test    eax, eax
.text:5B8E51B9 74 07							       jz      short loc_5B8E51C2
.text:5B8E51BB C7 45 10	01 00 00 00					       mov     [ebp+arg_8], 1
.text:5B8E51C2
.text:5B8E51C2						       loc_5B8E51C2:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+2C2j
.text:5B8E51C2											       ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+2DDj
.text:5B8E51C2 68 04 01	00 00						       push    104h	       ; iMaxLength
.text:5B8E51C7 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E51CD 50							       push    eax	       ; lpString2
.text:5B8E51CE 8D 85 E8	BD FF FF					       lea     eax, [ebp+SubKey]
.text:5B8E51D4 50							       push    eax	       ; lpString1
.text:5B8E51D5 FF 15 C0	10 8E 5B					       call    ds:__imp__lstrcpynW@12 ;	lstrcpynW(x,x,x)
.text:5B8E51DB 8B 7D 10							       mov     edi, [ebp+arg_8]
.text:5B8E51DE 85 FF							       test    edi, edi
.text:5B8E51E0 75 20							       jnz     short loc_5B8E5202
.text:5B8E51E2 FF 75 F8							       push    [ebp+var_8]     ; HKEY
.text:5B8E51E5 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E51E7 E8 68 ED	FF FF						       call    ?HasSubKeys@CRegParser@ATL@@IAEHPAUHKEY__@@@Z ; ATL::CRegParser::HasSubKeys(HKEY__ *)
.text:5B8E51EC 85 C0							       test    eax, eax
.text:5B8E51EE 75 12							       jnz     short loc_5B8E5202
.text:5B8E51F0 FF 75 F8							       push    [ebp+var_8]     ; HKEY
.text:5B8E51F3 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E51F5 E8 8F ED	FF FF						       call    ?HasValues@CRegParser@ATL@@IAEHPAUHKEY__@@@Z ; ATL::CRegParser::HasValues(HKEY__	*)
.text:5B8E51FA 85 C0							       test    eax, eax
.text:5B8E51FC 0F 84 CD	00 00 00					       jz      loc_5B8E52CF
.text:5B8E5202
.text:5B8E5202						       loc_5B8E5202:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+304j
.text:5B8E5202											       ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+312j
.text:5B8E5202 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E5208 50							       push    eax	       ; unsigned __int16 *
.text:5B8E5209 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E520B E8 82 EB	FF FF						       call    ?NextToken@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::NextToken(ushort	*)
.text:5B8E5210 8B F0							       mov     esi, eax
.text:5B8E5212 85 F6							       test    esi, esi
.text:5B8E5214 0F 8C 58	01 00 00					       jl      loc_5B8E5372
.text:5B8E521A 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E5220 50							       push    eax	       ; unsigned __int16 *
.text:5B8E5221 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E5223 E8 C4 ED	FF FF						       call    ?SkipAssignment@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::SkipAssignment(ushort *)
.text:5B8E5228 8B F0							       mov     esi, eax
.text:5B8E522A 85 F6							       test    esi, esi
.text:5B8E522C 0F 8C 40	01 00 00					       jl      loc_5B8E5372
.text:5B8E5232 66 83 BD	E8 DD FF FF 7B					       cmp     [ebp+String1], 7Bh
.text:5B8E523A 75 4C							       jnz     short loc_5B8E5288
.text:5B8E523C 57							       push    edi	       ; int
.text:5B8E523D 6A 00							       push    0	       ; int
.text:5B8E523F FF 75 F8							       push    [ebp+var_8]     ; hKey
.text:5B8E5242 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E5244 E8 93 FC	FF FF						       call    ?RegisterSubkeys@CRegParser@ATL@@IAEJPAUHKEY__@@HH@Z ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)
.text:5B8E5249 8B F0							       mov     esi, eax
.text:5B8E524B 85 F6							       test    esi, esi
.text:5B8E524D 0F 8C 1F	01 00 00					       jl      loc_5B8E5372
.text:5B8E5253 85 FF							       test    edi, edi
.text:5B8E5255 74 39							       jz      short loc_5B8E5290
.text:5B8E5257 8B 45 F0							       mov     eax, [ebp+var_10]
.text:5B8E525A 89 45 10							       mov     [ebp+arg_8], eax
.text:5B8E525D 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E5263 50							       push    eax	       ; unsigned __int16 *
.text:5B8E5264 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E5266 E8 27 EB	FF FF						       call    ?NextToken@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::NextToken(ushort	*)
.text:5B8E526B 8B F0							       mov     esi, eax
.text:5B8E526D 85 F6							       test    esi, esi
.text:5B8E526F 0F 8C FD	00 00 00					       jl      loc_5B8E5372
.text:5B8E5275 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E527B 50							       push    eax	       ; unsigned __int16 *
.text:5B8E527C 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E527E E8 69 ED	FF FF						       call    ?SkipAssignment@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::SkipAssignment(ushort *)
.text:5B8E5283 E9 C7 00	00 00						       jmp     loc_5B8E534F
.text:5B8E5288						       ; ---------------------------------------------------------------------------
.text:5B8E5288
.text:5B8E5288						       loc_5B8E5288:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+35Ej
.text:5B8E5288 85 FF							       test    edi, edi
.text:5B8E528A 0F 85 C5	00 00 00					       jnz     loc_5B8E5355
.text:5B8E5290
.text:5B8E5290						       loc_5B8E5290:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+379j
.text:5B8E5290 FF 75 F8							       push    [ebp+var_8]     ; HKEY
.text:5B8E5293 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E5295 E8 BA EC	FF FF						       call    ?HasSubKeys@CRegParser@ATL@@IAEHPAUHKEY__@@@Z ; ATL::CRegParser::HasSubKeys(HKEY__ *)
.text:5B8E529A 85 C0							       test    eax, eax
.text:5B8E529C 74 27							       jz      short loc_5B8E52C5
.text:5B8E529E 8D 85 E8	BD FF FF					       lea     eax, [ebp+SubKey]
.text:5B8E52A4 50							       push    eax	       ; unsigned __int16 *
.text:5B8E52A5 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E52A7 E8 9B D9	FF FF						       call    ?CanForceRemoveKey@CRegParser@ATL@@IAEHPBG@Z ; ATL::CRegParser::CanForceRemoveKey(ushort	const *)
.text:5B8E52AC 85 C0							       test    eax, eax
.text:5B8E52AE 0F 84 8D	00 00 00					       jz      loc_5B8E5341
.text:5B8E52B4 8D 85 E8	BD FF FF					       lea     eax, [ebp+SubKey]
.text:5B8E52BA 50							       push    eax	       ; unsigned __int16 *
.text:5B8E52BB 8D 4D F8							       lea     ecx, [ebp+var_8]	; this
.text:5B8E52BE E8 ED EF	FF FF						       call    ?RecurseDeleteKey@CRegKey@ATL@@QAEJPBG@Z	; ATL::CRegKey::RecurseDeleteKey(ushort	const *)
.text:5B8E52C3 EB 7C							       jmp     short loc_5B8E5341
.text:5B8E52C5						       ; ---------------------------------------------------------------------------
.text:5B8E52C5
.text:5B8E52C5						       loc_5B8E52C5:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+3C0j
.text:5B8E52C5 83 7D 10	00						       cmp     [ebp+arg_8], 0
.text:5B8E52C9 0F 85 86	00 00 00					       jnz     loc_5B8E5355
.text:5B8E52CF
.text:5B8E52CF						       loc_5B8E52CF:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+320j
.text:5B8E52CF 8D 4D F8							       lea     ecx, [ebp+var_8]	; this
.text:5B8E52D2 E8 FD DF	FF FF						       call    ?Close@CRegKey@ATL@@QAEJXZ ; ATL::CRegKey::Close(void)
.text:5B8E52D7 85 C0							       test    eax, eax
.text:5B8E52D9 0F 85 8E	00 00 00					       jnz     loc_5B8E536D
.text:5B8E52DF 39 45 F4							       cmp     [ebp+var_C], eax
.text:5B8E52E2 74 10							       jz      short loc_5B8E52F4
.text:5B8E52E4 8D 85 E8	BD FF FF					       lea     eax, [ebp+SubKey]
.text:5B8E52EA 50							       push    eax	       ; lpSubKey
.text:5B8E52EB FF 75 08							       push    [ebp+hKey]      ; hKey
.text:5B8E52EE FF 15 04	10 8E 5B					       call    ds:__imp__RegDeleteKeyW@8 ; RegDeleteKeyW(x,x)
.text:5B8E52F4
.text:5B8E52F4						       loc_5B8E52F4:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+406j
.text:5B8E52F4 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E52FA 50							       push    eax	       ; unsigned __int16 *
.text:5B8E52FB 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E52FD E8 90 EA	FF FF						       call    ?NextToken@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::NextToken(ushort	*)
.text:5B8E5302 8B F0							       mov     esi, eax
.text:5B8E5304 85 F6							       test    esi, esi
.text:5B8E5306 7C 6A							       jl      short loc_5B8E5372
.text:5B8E5308 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E530E 50							       push    eax	       ; unsigned __int16 *
.text:5B8E530F 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E5311 E8 D6 EC	FF FF						       call    ?SkipAssignment@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::SkipAssignment(ushort *)
.text:5B8E5316
.text:5B8E5316						       loc_5B8E5316:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+2B9j
.text:5B8E5316 8B F0							       mov     esi, eax
.text:5B8E5318
.text:5B8E5318						       loc_5B8E5318:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+10Dj
.text:5B8E5318 85 F6							       test    esi, esi
.text:5B8E531A
.text:5B8E531A						       loc_5B8E531A:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+1D8j
.text:5B8E531A 7C 56							       jl      short loc_5B8E5372
.text:5B8E531C
.text:5B8E531C						       loc_5B8E531C:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+29Fj
.text:5B8E531C 83 7D 0C	00						       cmp     [ebp+arg_4], 0
.text:5B8E5320 74 33							       jz      short loc_5B8E5355
.text:5B8E5322 66 83 BD	E8 DD FF FF 7B					       cmp     [ebp+String1], 7Bh
.text:5B8E532A 75 29							       jnz     short loc_5B8E5355
.text:5B8E532C 6A 00							       push    0	       ; int
.text:5B8E532E FF 75 0C							       push    [ebp+arg_4]     ; int
.text:5B8E5331 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E5333 FF 75 F8							       push    [ebp+var_8]     ; hKey
.text:5B8E5336 E8 A1 FB	FF FF						       call    ?RegisterSubkeys@CRegParser@ATL@@IAEJPAUHKEY__@@HH@Z ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)
.text:5B8E533B 8B F0							       mov     esi, eax
.text:5B8E533D 85 F6							       test    esi, esi
.text:5B8E533F 7C 31							       jl      short loc_5B8E5372
.text:5B8E5341
.text:5B8E5341						       loc_5B8E5341:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+3D2j
.text:5B8E5341											       ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+3E7j
.text:5B8E5341 8D 85 E8	DD FF FF					       lea     eax, [ebp+String1]
.text:5B8E5347 8B CB							       mov     ecx, ebx	       ; this
.text:5B8E5349 50							       push    eax	       ; unsigned __int16 *
.text:5B8E534A E8 43 EA	FF FF						       call    ?NextToken@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::NextToken(ushort	*)
.text:5B8E534F
.text:5B8E534F						       loc_5B8E534F:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+3A7j
.text:5B8E534F 8B F0							       mov     esi, eax
.text:5B8E5351 85 F6							       test    esi, esi
.text:5B8E5353
.text:5B8E5353						       loc_5B8E5353:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+204j
.text:5B8E5353 7C 1D							       jl      short loc_5B8E5372
.text:5B8E5355
.text:5B8E5355						       loc_5B8E5355:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+39j
.text:5B8E5355											       ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+3AEj ...
.text:5B8E5355 66 83 BD	E8 DD FF FF 7D					       cmp     [ebp+String1], 7Dh
.text:5B8E535D 0F 85 B7	FB FF FF					       jnz     loc_5B8E4F1A
.text:5B8E5363 EB 0D							       jmp     short loc_5B8E5372
.text:5B8E5365						       ; ---------------------------------------------------------------------------
.text:5B8E5365
.text:5B8E5365						       loc_5B8E5365:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+A8j
.text:5B8E5365 8D 4D FC							       lea     ecx, [ebp+var_4]	; this
.text:5B8E5368 E8 67 DF	FF FF						       call    ?Close@CRegKey@ATL@@QAEJXZ ; ATL::CRegKey::Close(void)
.text:5B8E536D
.text:5B8E536D						       loc_5B8E536D:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+19Fj
.text:5B8E536D											       ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+218j ...
.text:5B8E536D BE 09 00	02 80						       mov     esi, 80020009h
.text:5B8E5372
.text:5B8E5372						       loc_5B8E5372:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+85j
.text:5B8E5372											       ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+145j ...
.text:5B8E5372 5F							       pop     edi
.text:5B8E5373
.text:5B8E5373						       loc_5B8E5373:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+32j
.text:5B8E5373 8D 4D F8							       lea     ecx, [ebp+var_8]	; this
.text:5B8E5376 E8 59 DF	FF FF						       call    ?Close@CRegKey@ATL@@QAEJXZ ; ATL::CRegKey::Close(void)
.text:5B8E537B 8B C6							       mov     eax, esi
.text:5B8E537D 5E							       pop     esi
.text:5B8E537E 5B							       pop     ebx
.text:5B8E537F C9							       leave
.text:5B8E5380 C2 0C 00							       retn    0Ch
.text:5B8E5383						       ; ---------------------------------------------------------------------------
.text:5B8E5383
.text:5B8E5383						       loc_5B8E5383:			       ; CODE XREF: ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+EFj
.text:5B8E5383 8D 4D FC							       lea     ecx, [ebp+var_4]	; this
.text:5B8E5386 E8 49 DF	FF FF						       call    ?Close@CRegKey@ATL@@QAEJXZ ; ATL::CRegKey::Close(void)
.text:5B8E538B EB E5							       jmp     short loc_5B8E5372
.text:5B8E538B						       ?RegisterSubkeys@CRegParser@ATL@@IAEJPAUHKEY__@@HH@Z endp
.text:5B8E538B
.text:5B8E538D
.text:5B8E538D						       ; =============== S U B R O U T I N E =======================================
.text:5B8E538D
.text:5B8E538D						       ; Attributes: bp-based frame
.text:5B8E538D
.text:5B8E538D						       ; __int32 __thiscall ATL::CRegParser::RegisterBuffer(ATL::CRegParser *this, LPCWSTR lpString, int)
.text:5B8E538D						       ?RegisterBuffer@CRegParser@ATL@@QAEJPAGH@Z proc near
.text:5B8E538D											       ; CODE XREF: ATL::CRegObject::RegisterFromResource(ushort const *,ushort	const *,ushort const *,int)+10Dp
.text:5B8E538D
.text:5B8E538D						       String1	       = word ptr -20Ch
.text:5B8E538D						       pv	       = dword ptr -4
.text:5B8E538D						       lpString	       = dword ptr  8
.text:5B8E538D						       arg_4	       = dword ptr  0Ch
.text:5B8E538D
.text:5B8E538D 55							       push    ebp
.text:5B8E538E 8B EC							       mov     ebp, esp
.text:5B8E5390 81 EC 0C	02 00 00					       sub     esp, 20Ch
.text:5B8E5396 53							       push    ebx
.text:5B8E5397 56							       push    esi
.text:5B8E5398 57							       push    edi
.text:5B8E5399 8D 45 FC							       lea     eax, [ebp+pv]
.text:5B8E539C 50							       push    eax	       ; unsigned __int16 **
.text:5B8E539D FF 75 08							       push    [ebp+lpString]  ; lpString
.text:5B8E53A0 8B F1							       mov     esi, ecx
.text:5B8E53A2 E8 BC EC	FF FF						       call    ?PreProcessBuffer@CRegParser@ATL@@QAEJPAGPAPAG@Z	; ATL::CRegParser::PreProcessBuffer(ushort *,ushort * *)
.text:5B8E53A7 8B F8							       mov     edi, eax
.text:5B8E53A9 33 DB							       xor     ebx, ebx
.text:5B8E53AB 3B FB							       cmp     edi, ebx
.text:5B8E53AD 0F 8C D8	00 00 00					       jl      loc_5B8E548B
.text:5B8E53B3 8B 45 FC							       mov     eax, [ebp+pv]
.text:5B8E53B6 89 06							       mov     [esi], eax
.text:5B8E53B8 E9 A3 00	00 00						       jmp     loc_5B8E5460
.text:5B8E53BD						       ; ---------------------------------------------------------------------------
.text:5B8E53BD
.text:5B8E53BD						       loc_5B8E53BD:			       ; CODE XREF: ATL::CRegParser::RegisterBuffer(ushort *,int)+D6j
.text:5B8E53BD 8D 85 F4	FD FF FF					       lea     eax, [ebp+String1]
.text:5B8E53C3 50							       push    eax	       ; unsigned __int16 *
.text:5B8E53C4 8B CE							       mov     ecx, esi	       ; this
.text:5B8E53C6 E8 C7 E9	FF FF						       call    ?NextToken@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::NextToken(ushort	*)
.text:5B8E53CB 8B F8							       mov     edi, eax
.text:5B8E53CD 3B FB							       cmp     edi, ebx
.text:5B8E53CF 0F 8C AD	00 00 00					       jl      loc_5B8E5482
.text:5B8E53D5 33 FF							       xor     edi, edi
.text:5B8E53D7
.text:5B8E53D7						       loc_5B8E53D7:			       ; CODE XREF: ATL::CRegParser::RegisterBuffer(ushort *,int)+66j
.text:5B8E53D7 FF 34 FD	38 18 8E 5B					       push    ds:off_5B8E1838[edi*8] ;	lpString2
.text:5B8E53DE 8D 85 F4	FD FF FF					       lea     eax, [ebp+String1]
.text:5B8E53E4 50							       push    eax	       ; lpString1
.text:5B8E53E5 FF 15 7C	10 8E 5B					       call    ds:__imp__lstrcmpiW@8 ; lstrcmpiW(x,x)
.text:5B8E53EB 85 C0							       test    eax, eax
.text:5B8E53ED 74 4C							       jz      short loc_5B8E543B
.text:5B8E53EF 47							       inc     edi
.text:5B8E53F0 83 FF 0E							       cmp     edi, 0Eh
.text:5B8E53F3 72 E2							       jb      short loc_5B8E53D7
.text:5B8E53F5 89 5D 08							       mov     [ebp+lpString], ebx
.text:5B8E53F8
.text:5B8E53F8						       loc_5B8E53F8:			       ; CODE XREF: ATL::CRegParser::RegisterBuffer(ushort *,int)+B8j
.text:5B8E53F8 39 5D 08							       cmp     [ebp+lpString], ebx
.text:5B8E53FB 74 6E							       jz      short loc_5B8E546B
.text:5B8E53FD 8D 85 F4	FD FF FF					       lea     eax, [ebp+String1]
.text:5B8E5403 50							       push    eax	       ; unsigned __int16 *
.text:5B8E5404 8B CE							       mov     ecx, esi	       ; this
.text:5B8E5406 E8 87 E9	FF FF						       call    ?NextToken@CRegParser@ATL@@IAEJPAG@Z ; ATL::CRegParser::NextToken(ushort	*)
.text:5B8E540B 8B F8							       mov     edi, eax
.text:5B8E540D 3B FB							       cmp     edi, ebx
.text:5B8E540F 7C 71							       jl      short loc_5B8E5482
.text:5B8E5411 66 83 BD	F4 FD FF FF 7B					       cmp     [ebp+String1], 7Bh
.text:5B8E5419 75 50							       jnz     short loc_5B8E546B
.text:5B8E541B 39 5D 0C							       cmp     [ebp+arg_4], ebx
.text:5B8E541E 8B CE							       mov     ecx, esi	       ; this
.text:5B8E5420 74 25							       jz      short loc_5B8E5447
.text:5B8E5422 8B 1E							       mov     ebx, [esi]
.text:5B8E5424 6A 00							       push    0	       ; int
.text:5B8E5426 FF 75 0C							       push    [ebp+arg_4]     ; int
.text:5B8E5429 FF 75 08							       push    [ebp+lpString]  ; hKey
.text:5B8E542C E8 AB FA	FF FF						       call    ?RegisterSubkeys@CRegParser@ATL@@IAEJPAUHKEY__@@HH@Z ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)
.text:5B8E5431 8B F8							       mov     edi, eax
.text:5B8E5433 85 FF							       test    edi, edi
.text:5B8E5435 7C 3B							       jl      short loc_5B8E5472
.text:5B8E5437 33 DB							       xor     ebx, ebx
.text:5B8E5439 EB 1C							       jmp     short loc_5B8E5457
.text:5B8E543B						       ; ---------------------------------------------------------------------------
.text:5B8E543B
.text:5B8E543B						       loc_5B8E543B:			       ; CODE XREF: ATL::CRegParser::RegisterBuffer(ushort *,int)+60j
.text:5B8E543B 8B 04 FD	3C 18 8E 5B					       mov     eax, ds:dword_5B8E183C[edi*8]
.text:5B8E5442 89 45 08							       mov     [ebp+lpString], eax
.text:5B8E5445 EB B1							       jmp     short loc_5B8E53F8
.text:5B8E5447						       ; ---------------------------------------------------------------------------
.text:5B8E5447
.text:5B8E5447						       loc_5B8E5447:			       ; CODE XREF: ATL::CRegParser::RegisterBuffer(ushort *,int)+93j
.text:5B8E5447 53							       push    ebx	       ; int
.text:5B8E5448 53							       push    ebx	       ; int
.text:5B8E5449 FF 75 08							       push    [ebp+lpString]  ; hKey
.text:5B8E544C E8 8B FA	FF FF						       call    ?RegisterSubkeys@CRegParser@ATL@@IAEJPAUHKEY__@@HH@Z ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)
.text:5B8E5451 8B F8							       mov     edi, eax
.text:5B8E5453 3B FB							       cmp     edi, ebx
.text:5B8E5455 7C 2B							       jl      short loc_5B8E5482
.text:5B8E5457
.text:5B8E5457						       loc_5B8E5457:			       ; CODE XREF: ATL::CRegParser::RegisterBuffer(ushort *,int)+ACj
.text:5B8E5457 8B CE							       mov     ecx, esi	       ; this
.text:5B8E5459 E8 5C D7	FF FF						       call    ?SkipWhiteSpace@CRegParser@ATL@@IAEXXZ ;	ATL::CRegParser::SkipWhiteSpace(void)
.text:5B8E545E 8B 06							       mov     eax, [esi]
.text:5B8E5460
.text:5B8E5460						       loc_5B8E5460:			       ; CODE XREF: ATL::CRegParser::RegisterBuffer(ushort *,int)+2Bj
.text:5B8E5460 66 39 18							       cmp     [eax], bx
.text:5B8E5463 0F 85 54	FF FF FF					       jnz     loc_5B8E53BD
.text:5B8E5469 EB 17							       jmp     short loc_5B8E5482
.text:5B8E546B						       ; ---------------------------------------------------------------------------
.text:5B8E546B
.text:5B8E546B						       loc_5B8E546B:			       ; CODE XREF: ATL::CRegParser::RegisterBuffer(ushort *,int)+6Ej
.text:5B8E546B											       ; ATL::CRegParser::RegisterBuffer(ushort	*,int)+8Cj
.text:5B8E546B BF 09 00	02 80						       mov     edi, 80020009h
.text:5B8E5470 EB 10							       jmp     short loc_5B8E5482
.text:5B8E5472						       ; ---------------------------------------------------------------------------
.text:5B8E5472
.text:5B8E5472						       loc_5B8E5472:			       ; CODE XREF: ATL::CRegParser::RegisterBuffer(ushort *,int)+A8j
.text:5B8E5472 6A 00							       push    0	       ; int
.text:5B8E5474 6A 00							       push    0	       ; int
.text:5B8E5476 FF 75 08							       push    [ebp+lpString]  ; hKey
.text:5B8E5479 8B CE							       mov     ecx, esi	       ; this
.text:5B8E547B 89 1E							       mov     [esi], ebx
.text:5B8E547D E8 5A FA	FF FF						       call    ?RegisterSubkeys@CRegParser@ATL@@IAEJPAUHKEY__@@HH@Z ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)
.text:5B8E5482
.text:5B8E5482						       loc_5B8E5482:			       ; CODE XREF: ATL::CRegParser::RegisterBuffer(ushort *,int)+42j
.text:5B8E5482											       ; ATL::CRegParser::RegisterBuffer(ushort	*,int)+82j ...
.text:5B8E5482 FF 75 FC							       push    [ebp+pv]	       ; pv
.text:5B8E5485 FF 15 98	11 8E 5B					       call    ds:__imp__CoTaskMemFree@4 ; CoTaskMemFree(x)
.text:5B8E548B
.text:5B8E548B						       loc_5B8E548B:			       ; CODE XREF: ATL::CRegParser::RegisterBuffer(ushort *,int)+20j
.text:5B8E548B 8B C7							       mov     eax, edi
.text:5B8E548D 5F							       pop     edi
.text:5B8E548E 5E							       pop     esi
.text:5B8E548F 5B							       pop     ebx
.text:5B8E5490 C9							       leave
.text:5B8E5491 C2 08 00							       retn    8
.text:5B8E5491						       ?RegisterBuffer@CRegParser@ATL@@QAEJPAGH@Z endp
.text:5B8E5491
.text:5B8E5494
.text:5B8E5494						       ; =============== S U B R O U T I N E =======================================
.text:5B8E5494
.text:5B8E5494						       ; Attributes: bp-based frame
.text:5B8E5494
.text:5B8E5494						       ; __int32 __thiscall ATL::CRegObject::RegisterFromResource(ATL::CRegObject *__hidden this, const	unsigned __int16 *, const unsigned __int16 *, const unsigned __int16 *,	int)
.text:5B8E5494						       ?RegisterFromResource@CRegObject@ATL@@IAEJPBG00H@Z proc near
.text:5B8E5494											       ; CODE XREF: ATL::CRegObject::ResourceRegister(ushort const *,uint,ushort const *)+14p
.text:5B8E5494											       ; ATL::CRegObject::ResourceUnregister(ushort const *,uint,ushort	const *)+14p
.text:5B8E5494
.text:5B8E5494						       var_10	       = dword ptr -10h
.text:5B8E5494						       var_C	       = dword ptr -0Ch
.text:5B8E5494						       var_8	       = dword ptr -8
.text:5B8E5494						       hLibModule      = dword ptr -4
.text:5B8E5494						       lpLibFileName   = dword ptr  8
.text:5B8E5494						       dwSize	       = dword ptr  0Ch
.text:5B8E5494						       flAllocationType= dword ptr  10h
.text:5B8E5494						       arg_C	       = dword ptr  14h
.text:5B8E5494
.text:5B8E5494 55							       push    ebp
.text:5B8E5495 8B EC							       mov     ebp, esp
.text:5B8E5497 83 EC 10							       sub     esp, 10h
.text:5B8E549A 83 65 F0	00						       and     [ebp+var_10], 0
.text:5B8E549E 53							       push    ebx
.text:5B8E549F 56							       push    esi
.text:5B8E54A0 57							       push    edi	       ; flProtect
.text:5B8E54A1 6A 02							       push    2	       ; dwFlags
.text:5B8E54A3 6A 00							       push    0	       ; hFile
.text:5B8E54A5 FF 75 08							       push    [ebp+lpLibFileName] ; lpLibFileName
.text:5B8E54A8 89 4D F8							       mov     [ebp+var_8], ecx
.text:5B8E54AB C7 45 F4	01 00 00 00					       mov     [ebp+var_C], 1
.text:5B8E54B2 FF 15 64	10 8E 5B					       call    ds:__imp__LoadLibraryExW@12 ; LoadLibraryExW(x,x,x)
.text:5B8E54B8 8B D8							       mov     ebx, eax
.text:5B8E54BA 85 DB							       test    ebx, ebx
.text:5B8E54BC 89 5D FC							       mov     [ebp+hLibModule], ebx
.text:5B8E54BF 75 2A							       jnz     short loc_5B8E54EB
.text:5B8E54C1 8B 35 A8	10 8E 5B					       mov     esi, ds:__imp__GetLastError@0 ; GetLastError()
.text:5B8E54C7 FF D6							       call    esi ; GetLastError() ; GetLastError()
.text:5B8E54C9 85 C0							       test    eax, eax
.text:5B8E54CB 7F 09							       jg      short loc_5B8E54D6
.text:5B8E54CD FF D6							       call    esi ; GetLastError() ; GetLastError()
.text:5B8E54CF 8B F0							       mov     esi, eax
.text:5B8E54D1 E9 DB 00	00 00						       jmp     loc_5B8E55B1
.text:5B8E54D6						       ; ---------------------------------------------------------------------------
.text:5B8E54D6
.text:5B8E54D6						       loc_5B8E54D6:			       ; CODE XREF: ATL::CRegObject::RegisterFromResource(ushort const *,ushort	const *,ushort const *,int)+37j
.text:5B8E54D6 FF D6							       call    esi ; GetLastError() ; GetLastError()
.text:5B8E54D8 8B F0							       mov     esi, eax
.text:5B8E54DA 81 E6 FF	FF 00 00					       and     esi, 0FFFFh
.text:5B8E54E0 81 CE 00	00 07 80					       or      esi, 80070000h
.text:5B8E54E6 E9 C6 00	00 00						       jmp     loc_5B8E55B1
.text:5B8E54EB						       ; ---------------------------------------------------------------------------
.text:5B8E54EB
.text:5B8E54EB						       loc_5B8E54EB:			       ; CODE XREF: ATL::CRegObject::RegisterFromResource(ushort const *,ushort	const *,ushort const *,int)+2Bj
.text:5B8E54EB FF 75 10							       push    [ebp+flAllocationType] ;	flAllocationType
.text:5B8E54EE FF 75 0C							       push    [ebp+dwSize]    ; dwSize
.text:5B8E54F1 53							       push    ebx	       ; lpAddress
.text:5B8E54F2 FF 15 60	10 8E 5B					       call    ds:__imp__FindResourceW@12 ; FindResourceW(x,x,x)
.text:5B8E54F8 8B F8							       mov     edi, eax
.text:5B8E54FA 85 FF							       test    edi, edi
.text:5B8E54FC 74 0E							       jz      short loc_5B8E550C
.text:5B8E54FE 57							       push    edi
.text:5B8E54FF 53							       push    ebx	       ; lpLibFileName
.text:5B8E5500 FF 15 5C	10 8E 5B					       call    ds:__imp__LoadResource@8	; LoadResource(x,x)
.text:5B8E5506 8B F0							       mov     esi, eax
.text:5B8E5508 85 F6							       test    esi, esi
.text:5B8E550A 75 25							       jnz     short loc_5B8E5531
.text:5B8E550C
.text:5B8E550C						       loc_5B8E550C:			       ; CODE XREF: ATL::CRegObject::RegisterFromResource(ushort const *,ushort	const *,ushort const *,int)+68j
.text:5B8E550C 8B 35 A8	10 8E 5B					       mov     esi, ds:__imp__GetLastError@0 ; GetLastError()
.text:5B8E5512 FF D6							       call    esi ; GetLastError() ; GetLastError()
.text:5B8E5514 85 C0							       test    eax, eax
.text:5B8E5516 7F 07							       jg      short loc_5B8E551F
.text:5B8E5518 FF D6							       call    esi ; GetLastError() ; GetLastError()
.text:5B8E551A E9 87 00	00 00						       jmp     loc_5B8E55A6
.text:5B8E551F						       ; ---------------------------------------------------------------------------
.text:5B8E551F
.text:5B8E551F						       loc_5B8E551F:			       ; CODE XREF: ATL::CRegObject::RegisterFromResource(ushort const *,ushort	const *,ushort const *,int)+82j
.text:5B8E551F FF D6							       call    esi ; GetLastError() ; GetLastError()
.text:5B8E5521 8B F0							       mov     esi, eax
.text:5B8E5523 81 E6 FF	FF 00 00					       and     esi, 0FFFFh
.text:5B8E5529 81 CE 00	00 07 80					       or      esi, 80070000h
.text:5B8E552F EB 77							       jmp     short loc_5B8E55A8
.text:5B8E5531						       ; ---------------------------------------------------------------------------
.text:5B8E5531
.text:5B8E5531						       loc_5B8E5531:			       ; CODE XREF: ATL::CRegObject::RegisterFromResource(ushort const *,ushort	const *,ushort const *,int)+76j
.text:5B8E5531 57							       push    edi	       ; lpProcName
.text:5B8E5532 53							       push    ebx	       ; hModule
.text:5B8E5533 FF 15 58	10 8E 5B					       call    ds:__imp__SizeofResource@8 ; SizeofResource(x,x)
.text:5B8E5539 8B D8							       mov     ebx, eax
.text:5B8E553B 80 3C 33	00						       cmp     byte ptr	[ebx+esi], 0
.text:5B8E553F 8B FE							       mov     edi, esi
.text:5B8E5541 74 2D							       jz      short loc_5B8E5570
.text:5B8E5543 8D 7B 01							       lea     edi, [ebx+1]
.text:5B8E5546 8B C7							       mov     eax, edi
.text:5B8E5548 83 C0 03							       add     eax, 3
.text:5B8E554B 83 E0 FC							       and     eax, 0FFFFFFFCh
.text:5B8E554E E8 2D 02	00 00						       call    __chkstk
.text:5B8E5553 8B CF							       mov     ecx, edi
.text:5B8E5555 8B D1							       mov     edx, ecx
.text:5B8E5557 8B C4							       mov     eax, esp
.text:5B8E5559 C1 E9 02							       shr     ecx, 2
.text:5B8E555C 8B F8							       mov     edi, eax
.text:5B8E555E F3 A5							       rep movsd
.text:5B8E5560 8B CA							       mov     ecx, edx
.text:5B8E5562 83 E1 03							       and     ecx, 3
.text:5B8E5565 F3 A4							       rep movsb
.text:5B8E5567 80 24 18	00						       and     byte ptr	[eax+ebx], 0
.text:5B8E556B 89 45 08							       mov     [ebp+lpLibFileName], eax
.text:5B8E556E 8B FC							       mov     edi, esp
.text:5B8E5570
.text:5B8E5570						       loc_5B8E5570:			       ; CODE XREF: ATL::CRegObject::RegisterFromResource(ushort const *,ushort	const *,ushort const *,int)+ADj
.text:5B8E5570 85 FF							       test    edi, edi
.text:5B8E5572 75 04							       jnz     short loc_5B8E5578
.text:5B8E5574 33 C0							       xor     eax, eax
.text:5B8E5576 EB 22							       jmp     short loc_5B8E559A
.text:5B8E5578						       ; ---------------------------------------------------------------------------
.text:5B8E5578
.text:5B8E5578						       loc_5B8E5578:			       ; CODE XREF: ATL::CRegObject::RegisterFromResource(ushort const *,ushort	const *,ushort const *,int)+DEj
.text:5B8E5578 57							       push    edi	       ; lpString
.text:5B8E5579 FF 15 6C	10 8E 5B					       call    ds:__imp__lstrlenA@4 ; lstrlenA(x)
.text:5B8E557F 8B F0							       mov     esi, eax
.text:5B8E5581 46							       inc     esi
.text:5B8E5582 8D 04 36							       lea     eax, [esi+esi]
.text:5B8E5585 83 C0 03							       add     eax, 3
.text:5B8E5588 83 E0 FC							       and     eax, 0FFFFFFFCh
.text:5B8E558B E8 F0 01	00 00						       call    __chkstk
.text:5B8E5590 8B C4							       mov     eax, esp
.text:5B8E5592 56							       push    esi	       ; cchWideChar
.text:5B8E5593 57							       push    edi	       ; lpMultiByteStr
.text:5B8E5594 50							       push    eax	       ; lpWideCharStr
.text:5B8E5595 E8 BF D8	FF FF						       call    ?AtlA2WHelper@@YGPAGPAGPBDH@Z ; AtlA2WHelper(ushort *,char const	*,int)
.text:5B8E559A
.text:5B8E559A						       loc_5B8E559A:			       ; CODE XREF: ATL::CRegObject::RegisterFromResource(ushort const *,ushort	const *,ushort const *,int)+E2j
.text:5B8E559A FF 75 14							       push    [ebp+arg_C]     ; int
.text:5B8E559D 8D 4D F0							       lea     ecx, [ebp+var_10] ; this
.text:5B8E55A0 50							       push    eax	       ; lpString
.text:5B8E55A1 E8 E7 FD	FF FF						       call    ?RegisterBuffer@CRegParser@ATL@@QAEJPAGH@Z ; ATL::CRegParser::RegisterBuffer(ushort *,int)
.text:5B8E55A6
.text:5B8E55A6						       loc_5B8E55A6:			       ; CODE XREF: ATL::CRegObject::RegisterFromResource(ushort const *,ushort	const *,ushort const *,int)+86j
.text:5B8E55A6 8B F0							       mov     esi, eax
.text:5B8E55A8
.text:5B8E55A8						       loc_5B8E55A8:			       ; CODE XREF: ATL::CRegObject::RegisterFromResource(ushort const *,ushort	const *,ushort const *,int)+9Bj
.text:5B8E55A8 FF 75 FC							       push    [ebp+hLibModule]	; hLibModule
.text:5B8E55AB FF 15 54	10 8E 5B					       call    ds:__imp__FreeLibrary@4 ; FreeLibrary(x)
.text:5B8E55B1
.text:5B8E55B1						       loc_5B8E55B1:			       ; CODE XREF: ATL::CRegObject::RegisterFromResource(ushort const *,ushort	const *,ushort const *,int)+3Dj
.text:5B8E55B1											       ; ATL::CRegObject::RegisterFromResource(ushort const *,ushort const *,ushort const *,int)+52j
.text:5B8E55B1 8B C6							       mov     eax, esi
.text:5B8E55B3 8D 65 E4							       lea     esp, [ebp-1Ch]
.text:5B8E55B6 5F							       pop     edi
.text:5B8E55B7 5E							       pop     esi
.text:5B8E55B8 5B							       pop     ebx
.text:5B8E55B9 C9							       leave
.text:5B8E55BA C2 10 00							       retn    10h
.text:5B8E55BA						       ?RegisterFromResource@CRegObject@ATL@@IAEJPBG00H@Z endp ; sp-analysis failed
.text:5B8E55BA
.text:5B8E55BD
.text:5B8E55BD						       ; =============== S U B R O U T I N E =======================================
.text:5B8E55BD
.text:5B8E55BD
.text:5B8E55BD						       ; __int32 __stdcall ATL::CRegObject::ResourceRegister(ATL::CRegObject *this, const unsigned __int16 *, __int16, const unsigned __int16 *)
.text:5B8E55BD						       ?ResourceRegister@CRegObject@ATL@@QAGJPBGI0@Z proc near
.text:5B8E55BD											       ; CODE XREF: ATL::CComModule::UpdateRegistryFromResourceS(uint,int,ATL::_ATL_REGMAP_ENTRY *)+90p
.text:5B8E55BD
.text:5B8E55BD						       this	       = dword ptr  4
.text:5B8E55BD						       arg_4	       = dword ptr  8
.text:5B8E55BD						       arg_8	       = word ptr  0Ch
.text:5B8E55BD						       arg_C	       = dword ptr  10h
.text:5B8E55BD
.text:5B8E55BD 0F B7 44	24 0C						       movzx   eax, [esp+arg_8]
.text:5B8E55C2 8B 4C 24	04						       mov     ecx, [esp+this] ; this
.text:5B8E55C6 6A 01							       push    1	       ; int
.text:5B8E55C8 FF 74 24	14						       push    [esp+4+arg_C]   ; unsigned __int16 *
.text:5B8E55CC 50							       push    eax	       ; unsigned __int16 *
.text:5B8E55CD FF 74 24	14						       push    [esp+0Ch+arg_4] ; unsigned __int16 *
.text:5B8E55D1 E8 BE FE	FF FF						       call    ?RegisterFromResource@CRegObject@ATL@@IAEJPBG00H@Z ; ATL::CRegObject::RegisterFromResource(ushort const *,ushort	const *,ushort const *,int)
.text:5B8E55D6 C2 10 00							       retn    10h
.text:5B8E55D6						       ?ResourceRegister@CRegObject@ATL@@QAGJPBGI0@Z endp
.text:5B8E55D6
.text:5B8E55D9
.text:5B8E55D9						       ; =============== S U B R O U T I N E =======================================
.text:5B8E55D9
.text:5B8E55D9
.text:5B8E55D9						       ; __int32 __stdcall ATL::CRegObject::ResourceUnregister(ATL::CRegObject *this, const unsigned __int16 *,	__int16, const unsigned	__int16	*)
.text:5B8E55D9						       ?ResourceUnregister@CRegObject@ATL@@QAGJPBGI0@Z proc near
.text:5B8E55D9											       ; CODE XREF: ATL::CComModule::UpdateRegistryFromResourceS(uint,int,ATL::_ATL_REGMAP_ENTRY *):loc_5B8E568Cp
.text:5B8E55D9
.text:5B8E55D9						       this	       = dword ptr  4
.text:5B8E55D9						       arg_4	       = dword ptr  8
.text:5B8E55D9						       arg_8	       = word ptr  0Ch
.text:5B8E55D9						       arg_C	       = dword ptr  10h
.text:5B8E55D9
.text:5B8E55D9 0F B7 44	24 0C						       movzx   eax, [esp+arg_8]
.text:5B8E55DE 8B 4C 24	04						       mov     ecx, [esp+this] ; this
.text:5B8E55E2 6A 00							       push    0	       ; int
.text:5B8E55E4 FF 74 24	14						       push    [esp+4+arg_C]   ; unsigned __int16 *
.text:5B8E55E8 50							       push    eax	       ; unsigned __int16 *
.text:5B8E55E9 FF 74 24	14						       push    [esp+0Ch+arg_4] ; unsigned __int16 *
.text:5B8E55ED E8 A2 FE	FF FF						       call    ?RegisterFromResource@CRegObject@ATL@@IAEJPBG00H@Z ; ATL::CRegObject::RegisterFromResource(ushort const *,ushort	const *,ushort const *,int)
.text:5B8E55F2 C2 10 00							       retn    10h
.text:5B8E55F2						       ?ResourceUnregister@CRegObject@ATL@@QAGJPBGI0@Z endp
.text:5B8E55F2
.text:5B8E55F5
.text:5B8E55F5						       ; =============== S U B R O U T I N E =======================================
.text:5B8E55F5
.text:5B8E55F5						       ; Attributes: bp-based frame
.text:5B8E55F5
.text:5B8E55F5						       ; __int32 __stdcall ATL::CComModule::UpdateRegistryFromResourceS(ATL::CComModule	*this, __int16,	int, struct ATL::_ATL_REGMAP_ENTRY *)
.text:5B8E55F5						       ?UpdateRegistryFromResourceS@CComModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z proc near
.text:5B8E55F5											       ; CODE XREF: CTrialEnd::UpdateRegistry(int)+10p
.text:5B8E55F5
.text:5B8E55F5						       Filename	       = word ptr -218h
.text:5B8E55F5						       var_216	       = byte ptr -216h
.text:5B8E55F5						       var_10	       = byte ptr -10h
.text:5B8E55F5						       this	       = dword ptr  8
.text:5B8E55F5						       arg_4	       = word ptr  0Ch
.text:5B8E55F5						       arg_8	       = dword ptr  10h
.text:5B8E55F5						       arg_C	       = dword ptr  14h
.text:5B8E55F5
.text:5B8E55F5 55							       push    ebp
.text:5B8E55F6 8B EC							       mov     ebp, esp
.text:5B8E55F8 81 EC 18	02 00 00					       sub     esp, 218h
.text:5B8E55FE 56							       push    esi
.text:5B8E55FF 57							       push    edi
.text:5B8E5600 8D 4D F0							       lea     ecx, [ebp+var_10] ; this
.text:5B8E5603 E8 F4 D4	FF FF						       call    ??0CExpansionVector@ATL@@QAE@XZ ; ATL::CExpansionVector::CExpansionVector(void)
.text:5B8E5608 66 83 A5	E8 FD FF FF 00					       and     [ebp+Filename], 0
.text:5B8E5610 33 C0							       xor     eax, eax
.text:5B8E5612 B9 81 00	00 00						       mov     ecx, 81h
.text:5B8E5617 8D BD EA	FD FF FF					       lea     edi, [ebp+var_216]
.text:5B8E561D F3 AB							       rep stosd
.text:5B8E561F 66 AB							       stosw
.text:5B8E5621 68 04 01	00 00						       push    104h	       ; nSize
.text:5B8E5626 8D 85 E8	FD FF FF					       lea     eax, [ebp+Filename]
.text:5B8E562C 50							       push    eax	       ; lpFilename
.text:5B8E562D FF 35 DC	70 8E 5B					       push    hInstance       ; hModule
.text:5B8E5633 FF 15 9C	10 8E 5B					       call    ds:__imp__GetModuleFileNameW@12 ; GetModuleFileNameW(x,x,x)
.text:5B8E5639 8D 85 E8	FD FF FF					       lea     eax, [ebp+Filename]
.text:5B8E563F 50							       push    eax	       ; unsigned __int16 *
.text:5B8E5640 68 EC 18	8E 5B						       push    offset String   ; "Module"
.text:5B8E5645 8D 4D F0							       lea     ecx, [ebp+var_10] ; this
.text:5B8E5648 E8 7A D6	FF FF						       call    ?Add@CExpansionVector@ATL@@QAEJPBG0@Z ; ATL::CExpansionVector::Add(ushort const *,ushort	const *)
.text:5B8E564D 8B 75 14							       mov     esi, [ebp+arg_C]
.text:5B8E5650 85 F6							       test    esi, esi
.text:5B8E5652 74 18							       jz      short loc_5B8E566C
.text:5B8E5654 EB 10							       jmp     short loc_5B8E5666
.text:5B8E5656						       ; ---------------------------------------------------------------------------
.text:5B8E5656
.text:5B8E5656						       loc_5B8E5656:			       ; CODE XREF: ATL::CComModule::UpdateRegistryFromResourceS(uint,int,ATL::_ATL_REGMAP_ENTRY *)+75j
.text:5B8E5656 FF 76 04							       push    dword ptr [esi+4] ; unsigned __int16 *
.text:5B8E5659 50							       push    eax	       ; lpString
.text:5B8E565A 8D 45 F0							       lea     eax, [ebp+var_10]
.text:5B8E565D 50							       push    eax	       ; this
.text:5B8E565E E8 E2 D7	FF FF						       call    ?AddReplacement@CRegObject@ATL@@QAGJPBG0@Z ; ATL::CRegObject::AddReplacement(ushort const *,ushort const	*)
.text:5B8E5663 83 C6 08							       add     esi, 8
.text:5B8E5666
.text:5B8E5666						       loc_5B8E5666:			       ; CODE XREF: ATL::CComModule::UpdateRegistryFromResourceS(uint,int,ATL::_ATL_REGMAP_ENTRY *)+5Fj
.text:5B8E5666 8B 06							       mov     eax, [esi]
.text:5B8E5668 85 C0							       test    eax, eax
.text:5B8E566A 75 EA							       jnz     short loc_5B8E5656
.text:5B8E566C
.text:5B8E566C						       loc_5B8E566C:			       ; CODE XREF: ATL::CComModule::UpdateRegistryFromResourceS(uint,int,ATL::_ATL_REGMAP_ENTRY *)+5Dj
.text:5B8E566C 83 7D 10	00						       cmp     [ebp+arg_8], 0
.text:5B8E5670 68 D8 18	8E 5B						       push    offset aRegistry	; "REGISTRY"
.text:5B8E5675 FF 75 0C							       push    dword ptr [ebp+arg_4] ; __int16
.text:5B8E5678 8D 85 E8	FD FF FF					       lea     eax, [ebp+Filename]
.text:5B8E567E 50							       push    eax	       ; unsigned __int16 *
.text:5B8E567F 8D 45 F0							       lea     eax, [ebp+var_10]
.text:5B8E5682 50							       push    eax	       ; this
.text:5B8E5683 74 07							       jz      short loc_5B8E568C
.text:5B8E5685 E8 33 FF	FF FF						       call    ?ResourceRegister@CRegObject@ATL@@QAGJPBGI0@Z ; ATL::CRegObject::ResourceRegister(ushort	const *,uint,ushort const *)
.text:5B8E568A EB 05							       jmp     short loc_5B8E5691
.text:5B8E568C						       ; ---------------------------------------------------------------------------
.text:5B8E568C
.text:5B8E568C						       loc_5B8E568C:			       ; CODE XREF: ATL::CComModule::UpdateRegistryFromResourceS(uint,int,ATL::_ATL_REGMAP_ENTRY *)+8Ej
.text:5B8E568C E8 48 FF	FF FF						       call    ?ResourceUnregister@CRegObject@ATL@@QAGJPBGI0@Z ; ATL::CRegObject::ResourceUnregister(ushort const *,uint,ushort	const *)
.text:5B8E5691
.text:5B8E5691						       loc_5B8E5691:			       ; CODE XREF: ATL::CComModule::UpdateRegistryFromResourceS(uint,int,ATL::_ATL_REGMAP_ENTRY *)+95j
.text:5B8E5691 8D 4D F0							       lea     ecx, [ebp+var_10] ; this
.text:5B8E5694 8B F0							       mov     esi, eax
.text:5B8E5696 E8 71 D7	FF FF						       call    ?ClearReplacements@CExpansionVector@ATL@@QAEJXZ ; ATL::CExpansionVector::ClearReplacements(void)
.text:5B8E569B 5F							       pop     edi
.text:5B8E569C 8B C6							       mov     eax, esi
.text:5B8E569E 5E							       pop     esi
.text:5B8E569F C9							       leave
.text:5B8E56A0 C2 10 00							       retn    10h
.text:5B8E56A0						       ?UpdateRegistryFromResourceS@CComModule@ATL@@QAGJIHPAU_ATL_REGMAP_ENTRY@2@@Z endp
.text:5B8E56A0
.text:5B8E56A3
.text:5B8E56A3						       ; =============== S U B R O U T I N E =======================================
.text:5B8E56A3
.text:5B8E56A3						       ; Attributes: bp-based frame
.text:5B8E56A3
.text:5B8E56A3						       ; __int32 __thiscall ATL::CComControlBase::IOleObject_SetExtent(ATL::CComControlBase *this, unsigned __int32, struct tagSIZE *)
.text:5B8E56A3						       ?IOleObject_SetExtent@CComControlBase@ATL@@QAEJKPAUtagSIZE@@@Z proc near
.text:5B8E56A3											       ; CODE XREF: ATL::IOleObjectImpl<CTrialEnd>::SetExtent(ulong,tagSIZE *)+15p
.text:5B8E56A3
.text:5B8E56A3						       var_4	       = dword ptr -4
.text:5B8E56A3						       arg_0	       = dword ptr  8
.text:5B8E56A3						       arg_4	       = dword ptr  0Ch
.text:5B8E56A3
.text:5B8E56A3 55							       push    ebp
.text:5B8E56A4 8B EC							       mov     ebp, esp
.text:5B8E56A6 51							       push    ecx
.text:5B8E56A7 83 7D 08	01						       cmp     [ebp+arg_0], 1
.text:5B8E56AB 8B C1							       mov     eax, ecx
.text:5B8E56AD 89 45 FC							       mov     [ebp+var_4], eax
.text:5B8E56B0 74 0A							       jz      short loc_5B8E56BC
.text:5B8E56B2 B8 6B 00	04 80						       mov     eax, 8004006Bh
.text:5B8E56B7 E9 A6 00	00 00						       jmp     locret_5B8E5762
.text:5B8E56BC						       ; ---------------------------------------------------------------------------
.text:5B8E56BC
.text:5B8E56BC						       loc_5B8E56BC:			       ; CODE XREF: ATL::CComControlBase::IOleObject_SetExtent(ulong,tagSIZE *)+Dj
.text:5B8E56BC 8B 55 0C							       mov     edx, [ebp+arg_4]
.text:5B8E56BF 85 D2							       test    edx, edx
.text:5B8E56C1 75 0A							       jnz     short loc_5B8E56CD
.text:5B8E56C3 B8 03 40	00 80						       mov     eax, 80004003h
.text:5B8E56C8 E9 95 00	00 00						       jmp     locret_5B8E5762
.text:5B8E56CD						       ; ---------------------------------------------------------------------------
.text:5B8E56CD
.text:5B8E56CD						       loc_5B8E56CD:			       ; CODE XREF: ATL::CComControlBase::IOleObject_SetExtent(ulong,tagSIZE *)+1Ej
.text:5B8E56CD 53							       push    ebx
.text:5B8E56CE 56							       push    esi
.text:5B8E56CF 57							       push    edi
.text:5B8E56D0 33 DB							       xor     ebx, ebx
.text:5B8E56D2 6A 02							       push    2
.text:5B8E56D4 8D 78 1C							       lea     edi, [eax+1Ch]
.text:5B8E56D7 59							       pop     ecx
.text:5B8E56D8 8B F2							       mov     esi, edx
.text:5B8E56DA F3 A7							       repe cmpsd
.text:5B8E56DC 0F 94 C3							       setz    bl
.text:5B8E56DF F6 40 45	02						       test    byte ptr	[eax+45h], 2
.text:5B8E56E3 89 5D 0C							       mov     [ebp+arg_4], ebx
.text:5B8E56E6 74 12							       jz      short loc_5B8E56FA
.text:5B8E56E8 8B C3							       mov     eax, ebx
.text:5B8E56EA F7 D8							       neg     eax
.text:5B8E56EC 1B C0							       sbb     eax, eax
.text:5B8E56EE 25 FB BF	FF 7F						       and     eax, 7FFFBFFBh
.text:5B8E56F3 05 05 40	00 80						       add     eax, 80004005h
.text:5B8E56F8 EB 65							       jmp     short loc_5B8E575F
.text:5B8E56FA						       ; ---------------------------------------------------------------------------
.text:5B8E56FA
.text:5B8E56FA						       loc_5B8E56FA:			       ; CODE XREF: ATL::CComControlBase::IOleObject_SetExtent(ulong,tagSIZE *)+43j
.text:5B8E56FA 83 65 08	00						       and     [ebp+arg_0], 0
.text:5B8E56FE 83 C0 24							       add     eax, 24h
.text:5B8E5701 6A 02							       push    2
.text:5B8E5703 59							       pop     ecx
.text:5B8E5704 8B F8							       mov     edi, eax
.text:5B8E5706 8B F2							       mov     esi, edx
.text:5B8E5708 33 DB							       xor     ebx, ebx
.text:5B8E570A F3 A7							       repe cmpsd
.text:5B8E570C 74 11							       jz      short loc_5B8E571F
.text:5B8E570E 8B 0A							       mov     ecx, [edx]
.text:5B8E5710 89 08							       mov     [eax], ecx
.text:5B8E5712 8B 4A 04							       mov     ecx, [edx+4]
.text:5B8E5715 89 48 04							       mov     [eax+4],	ecx
.text:5B8E5718 C7 45 08	01 00 00 00					       mov     [ebp+arg_0], 1
.text:5B8E571F
.text:5B8E571F						       loc_5B8E571F:			       ; CODE XREF: ATL::CComControlBase::IOleObject_SetExtent(ulong,tagSIZE *)+69j
.text:5B8E571F 8B 75 FC							       mov     esi, [ebp+var_4]
.text:5B8E5722 8B 46 44							       mov     eax, [esi+44h]
.text:5B8E5725 F6 C4 08							       test    ah, 8
.text:5B8E5728 74 18							       jz      short loc_5B8E5742
.text:5B8E572A 83 7D 0C	00						       cmp     [ebp+arg_4], 0
.text:5B8E572E 75 12							       jnz     short loc_5B8E5742
.text:5B8E5730 8B 0A							       mov     ecx, [edx]
.text:5B8E5732 89 4E 1C							       mov     [esi+1Ch], ecx
.text:5B8E5735 8B 4A 04							       mov     ecx, [edx+4]
.text:5B8E5738 89 4E 20							       mov     [esi+20h], ecx
.text:5B8E573B C7 45 08	01 00 00 00					       mov     [ebp+arg_0], 1
.text:5B8E5742
.text:5B8E5742						       loc_5B8E5742:			       ; CODE XREF: ATL::CComControlBase::IOleObject_SetExtent(ulong,tagSIZE *)+85j
.text:5B8E5742											       ; ATL::CComControlBase::IOleObject_SetExtent(ulong,tagSIZE *)+8Bj
.text:5B8E5742 F6 C4 04							       test    ah, 4
.text:5B8E5745 74 16							       jz      short loc_5B8E575D
.text:5B8E5747 83 7D 08	00						       cmp     [ebp+arg_0], 0
.text:5B8E574B 74 10							       jz      short loc_5B8E575D
.text:5B8E574D 6A 00							       push    0	       ; unsigned __int32
.text:5B8E574F 8B CE							       mov     ecx, esi	       ; this
.text:5B8E5751 E8 D4 F2	FF FF						       call    ?SendOnDataChange@CComControlBase@ATL@@QAEJK@Z ;	ATL::CComControlBase::SendOnDataChange(ulong)
.text:5B8E5756 8B CE							       mov     ecx, esi	       ; this
.text:5B8E5758 E8 7D F5	FF FF						       call    ?FireViewChange@CComControlBase@ATL@@QAEJXZ ; ATL::CComControlBase::FireViewChange(void)
.text:5B8E575D
.text:5B8E575D						       loc_5B8E575D:			       ; CODE XREF: ATL::CComControlBase::IOleObject_SetExtent(ulong,tagSIZE *)+A2j
.text:5B8E575D											       ; ATL::CComControlBase::IOleObject_SetExtent(ulong,tagSIZE *)+A8j
.text:5B8E575D 33 C0							       xor     eax, eax
.text:5B8E575F
.text:5B8E575F						       loc_5B8E575F:			       ; CODE XREF: ATL::CComControlBase::IOleObject_SetExtent(ulong,tagSIZE *)+55j
.text:5B8E575F 5F							       pop     edi
.text:5B8E5760 5E							       pop     esi
.text:5B8E5761 5B							       pop     ebx
.text:5B8E5762
.text:5B8E5762						       locret_5B8E5762:			       ; CODE XREF: ATL::CComControlBase::IOleObject_SetExtent(ulong,tagSIZE *)+14j
.text:5B8E5762											       ; ATL::CComControlBase::IOleObject_SetExtent(ulong,tagSIZE *)+25j
.text:5B8E5762 C9							       leave
.text:5B8E5763 C2 08 00							       retn    8
.text:5B8E5763						       ?IOleObject_SetExtent@CComControlBase@ATL@@QAEJKPAUtagSIZE@@@Z endp
.text:5B8E5763
.text:5B8E5766						       ; [00000006 BYTES: COLLAPSED FUNCTION __purecall. PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:5B8E576C						       ; [00000006 BYTES: COLLAPSED FUNCTION operator delete(void *). PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:5B8E5772						       ; [00000006 BYTES: COLLAPSED FUNCTION operator new(uint). PRESS KEYPAD CTRL-"+" TO EXPAND]
.text:5B8E5778 CC CC CC	CC CC CC CC CC					       align 10h
.text:5B8E5780
.text:5B8E5780						       ; =============== S U B R O U T I N E =======================================
.text:5B8E5780
.text:5B8E5780
.text:5B8E5780						       __chkstk	       proc near	       ; CODE XREF: ATL::CRegParser::SkipAssignment(ushort *)+8p
.text:5B8E5780											       ; ATL::CRegParser::RegisterSubkeys(HKEY__ *,int,int)+8p	...
.text:5B8E5780
.text:5B8E5780						       arg_0	       = byte ptr  4
.text:5B8E5780
.text:5B8E5780 3D 00 10	00 00						       cmp     eax, 1000h
.text:5B8E5785 73 0E							       jnb     short loc_5B8E5795
.text:5B8E5787 F7 D8							       neg     eax
.text:5B8E5789 03 C4							       add     eax, esp
.text:5B8E578B 83 C0 04							       add     eax, 4
.text:5B8E578E 85 00							       test    [eax], eax
.text:5B8E5790 94							       xchg    eax, esp
.text:5B8E5791 8B 00							       mov     eax, [eax]
.text:5B8E5793 50							       push    eax
.text:5B8E5794 C3							       retn
.text:5B8E5795						       ; ---------------------------------------------------------------------------
.text:5B8E5795
.text:5B8E5795						       loc_5B8E5795:			       ; CODE XREF: __chkstk+5j
.text:5B8E5795 51							       push    ecx
.text:5B8E5796 8D 4C 24	08						       lea     ecx, [esp+4+arg_0]
.text:5B8E579A
.text:5B8E579A						       loc_5B8E579A:			       ; CODE XREF: __chkstk+2Cj
.text:5B8E579A 81 E9 00	10 00 00					       sub     ecx, 1000h
.text:5B8E57A0 2D 00 10	00 00						       sub     eax, 1000h
.text:5B8E57A5 85 01							       test    [ecx], eax
.text:5B8E57A7 3D 00 10	00 00						       cmp     eax, 1000h
.text:5B8E57AC 73 EC							       jnb     short loc_5B8E579A
.text:5B8E57AE 2B C8							       sub     ecx, eax
.text:5B8E57B0 8B C4							       mov     eax, esp
.text:5B8E57B2 85 01							       test    [ecx], eax
.text:5B8E57B4 8B E1							       mov     esp, ecx
.text:5B8E57B6 8B 08							       mov     ecx, [eax]
.text:5B8E57B8 8B 40 04							       mov     eax, [eax+4]
.text:5B8E57BB 50							       push    eax
.text:5B8E57BC C3							       retn
.text:5B8E57BC						       __chkstk	       endp
.text:5B8E57BC
.text:5B8E57BC						       ; ---------------------------------------------------------------------------
.text:5B8E57BD CC CC CC							       align 10h
.text:5B8E57C0 D0 59 00	00				       __IMPORT_DESCRIPTOR_msvcrt dd rva off_5B8E59D0
.text:5B8E57C0											       ; DATA XREF: HEADER:5B8E0168o
.text:5B8E57C0											       ; Import	Name Table
.text:5B8E57C4 FF FF FF	FF						       dd 0FFFFFFFFh	       ; Time stamp
.text:5B8E57C8 FF FF FF	FF						       dd 0FFFFFFFFh	       ; Forwarder Chain
.text:5B8E57CC 60 5A 00	00						       dd rva aMsvcrt_dll      ; DLL Name
.text:5B8E57D0 70 11 00	00						       dd rva __imp___purecall ; Import	Address	Table
.text:5B8E57D4 88 58 00	00				       __IMPORT_DESCRIPTOR_GDI32 dd rva	off_5B8E5888 ; Import Name Table
.text:5B8E57D8 FF FF FF	FF						       dd 0FFFFFFFFh	       ; Time stamp
.text:5B8E57DC FF FF FF	FF						       dd 0FFFFFFFFh	       ; Forwarder Chain
.text:5B8E57E0 00 5B 00	00						       dd rva aGdi32_dll       ; DLL Name
.text:5B8E57E4 28 10 00	00						       dd rva __imp__CreateRectRgnIndirect@4 ; Import Address Table
.text:5B8E57E8 B4 58 00	00				       __IMPORT_DESCRIPTOR_KERNEL32 dd rva off_5B8E58B4	; Import Name Table
.text:5B8E57EC FF FF FF	FF						       dd 0FFFFFFFFh	       ; Time stamp
.text:5B8E57F0 FF FF FF	FF						       dd 0FFFFFFFFh	       ; Forwarder Chain
.text:5B8E57F4 0A 5D 00	00						       dd rva aKernel32_dll    ; DLL Name
.text:5B8E57F8 54 10 00	00						       dd rva __imp__FreeLibrary@4 ; Import Address Table
.text:5B8E57FC 60 59 00	00				       __IMPORT_DESCRIPTOR_USER32 dd rva off_5B8E5960 ;	Import Name Table
.text:5B8E5800 FF FF FF	FF						       dd 0FFFFFFFFh	       ; Time stamp
.text:5B8E5804 FF FF FF	FF						       dd 0FFFFFFFFh	       ; Forwarder Chain
.text:5B8E5808 A0 5E 00	00						       dd rva aUser32_dll      ; DLL Name
.text:5B8E580C 00 11 00	00						       dd rva __imp__InvalidateRect@12 ; Import	Address	Table
.text:5B8E5810 60 58 00	00				       __IMPORT_DESCRIPTOR_ADVAPI32 dd rva off_5B8E5860	; Import Name Table
.text:5B8E5814 FF FF FF	FF						       dd 0FFFFFFFFh	       ; Time stamp
.text:5B8E5818 FF FF FF	FF						       dd 0FFFFFFFFh	       ; Forwarder Chain
.text:5B8E581C 48 5F 00	00						       dd rva aAdvapi32_dll    ; DLL Name
.text:5B8E5820 00 10 00	00						       dd rva __imp__RegCreateKeyExW@36	; Import Address Table
.text:5B8E5824 EC 59 00	00				       __IMPORT_DESCRIPTOR_ole32 dd rva	off_5B8E59EC ; Import Name Table
.text:5B8E5828 FF FF FF	FF						       dd 0FFFFFFFFh	       ; Time stamp
.text:5B8E582C FF FF FF	FF						       dd 0FFFFFFFFh	       ; Forwarder Chain
.text:5B8E5830 16 60 00	00						       dd rva aOle32_dll       ; DLL Name
.text:5B8E5834 8C 11 00	00						       dd rva __imp__OleLoadFromStream@12 ; Import Address Table
.text:5B8E5838 28 59 00	00				       __IMPORT_DESCRIPTOR_OLEAUT32 dd rva dword_5B8E5928 ; Import Name	Table
.text:5B8E583C FF FF FF	FF						       dd 0FFFFFFFFh	       ; Time stamp
.text:5B8E5840 FF FF FF	FF						       dd 0FFFFFFFFh	       ; Forwarder Chain
.text:5B8E5844 20 60 00	00						       dd rva aOleaut32_dll    ; DLL Name
.text:5B8E5848 C8 10 00	00						       dd rva __imp__VariantClear@4 ; Import Address Table
.text:5B8E584C 00 00 00	00 00 00 00 00 00 00 00	00 00 00 00 00+__NULL_IMPORT_DESCRIPTOR	dd 5 dup(0)
.text:5B8E5860						       ;
.text:5B8E5860						       ; Import	names for ADVAPI32.dll
.text:5B8E5860						       ;
.text:5B8E5860 EC 5E 00	00				       off_5B8E5860    dd rva word_5B8E5EEC    ; DATA XREF: .text:__IMPORT_DESCRIPTOR_ADVAPI32o
.text:5B8E5864 DC 5E 00	00						       dd rva word_5B8E5EDC
.text:5B8E5868 CC 5E 00	00						       dd rva word_5B8E5ECC
.text:5B8E586C BA 5E 00	00						       dd rva word_5B8E5EBA
.text:5B8E5870 AC 5E 00	00						       dd rva word_5B8E5EAC
.text:5B8E5874 FE 5E 00	00						       dd rva word_5B8E5EFE
.text:5B8E5878 12 5F 00	00						       dd rva word_5B8E5F12
.text:5B8E587C 26 5F 00	00						       dd rva word_5B8E5F26
.text:5B8E5880 36 5F 00	00						       dd rva word_5B8E5F36
.text:5B8E5884 00 00 00	00						       dd 0
.text:5B8E5888						       ;
.text:5B8E5888						       ; Import	names for GDI32.dll
.text:5B8E5888						       ;
.text:5B8E5888 6C 5A 00	00				       off_5B8E5888    dd rva word_5B8E5A6C    ; DATA XREF: .text:__IMPORT_DESCRIPTOR_GDI32o
.text:5B8E588C 94 5A 00	00						       dd rva word_5B8E5A94
.text:5B8E5890 A0 5A 00	00						       dd rva word_5B8E5AA0
.text:5B8E5894 AC 5A 00	00						       dd rva word_5B8E5AAC
.text:5B8E5898 BE 5A 00	00						       dd rva word_5B8E5ABE
.text:5B8E589C C8 5A 00	00						       dd rva word_5B8E5AC8
.text:5B8E58A0 D4 5A 00	00						       dd rva word_5B8E5AD4
.text:5B8E58A4 E8 5A 00	00						       dd rva word_5B8E5AE8
.text:5B8E58A8 F6 5A 00	00						       dd rva word_5B8E5AF6
.text:5B8E58AC 84 5A 00	00						       dd rva word_5B8E5A84
.text:5B8E58B0 00 00 00	00						       dd 0
.text:5B8E58B4						       ;
.text:5B8E58B4						       ; Import	names for KERNEL32.dll
.text:5B8E58B4						       ;
.text:5B8E58B4 B8 5C 00	00				       off_5B8E58B4    dd rva word_5B8E5CB8    ; DATA XREF: .text:__IMPORT_DESCRIPTOR_KERNEL32o
.text:5B8E58B8 C6 5C 00	00						       dd rva word_5B8E5CC6
.text:5B8E58BC D8 5C 00	00						       dd rva word_5B8E5CD8
.text:5B8E58C0 E8 5C 00	00						       dd rva word_5B8E5CE8
.text:5B8E58C4 F8 5C 00	00						       dd rva word_5B8E5CF8
.text:5B8E58C8 06 5C 00	00						       dd rva word_5B8E5C06
.text:5B8E58CC E2 5B 00	00						       dd rva word_5B8E5BE2
.text:5B8E58D0 CC 5B 00	00						       dd rva word_5B8E5BCC
.text:5B8E58D4 C0 5B 00	00						       dd rva word_5B8E5BC0
.text:5B8E58D8 B4 5B 00	00						       dd rva word_5B8E5BB4
.text:5B8E58DC A8 5B 00	00						       dd rva word_5B8E5BA8
.text:5B8E58E0 8C 5B 00	00						       dd rva word_5B8E5B8C
.text:5B8E58E4 7A 5B 00	00						       dd rva word_5B8E5B7A
.text:5B8E58E8 6E 5B 00	00						       dd rva word_5B8E5B6E
.text:5B8E58EC 56 5B 00	00						       dd rva word_5B8E5B56
.text:5B8E58F0 3E 5B 00	00						       dd rva word_5B8E5B3E
.text:5B8E58F4 26 5B 00	00						       dd rva word_5B8E5B26
.text:5B8E58F8 0A 5B 00	00						       dd rva word_5B8E5B0A
.text:5B8E58FC 96 5C 00	00						       dd rva word_5B8E5C96
.text:5B8E5900 8A 5C 00	00						       dd rva word_5B8E5C8A
.text:5B8E5904 7C 5C 00	00						       dd rva word_5B8E5C7C
.text:5B8E5908 6C 5C 00	00						       dd rva word_5B8E5C6C
.text:5B8E590C 60 5C 00	00						       dd rva word_5B8E5C60
.text:5B8E5910 4C 5C 00	00						       dd rva word_5B8E5C4C
.text:5B8E5914 34 5C 00	00						       dd rva word_5B8E5C34
.text:5B8E5918 EE 5B 00	00						       dd rva word_5B8E5BEE
.text:5B8E591C 1E 5C 00	00						       dd rva word_5B8E5C1E
.text:5B8E5920 AC 5C 00	00						       dd rva word_5B8E5CAC
.text:5B8E5924 00 00 00	00						       dd 0
.text:5B8E5928						       ;
.text:5B8E5928						       ; Import	names for OLEAUT32.dll
.text:5B8E5928						       ;
.text:5B8E5928 09 00 00	80				       dword_5B8E5928  dd 80000009h	       ; DATA XREF: .text:__IMPORT_DESCRIPTOR_OLEAUT32o
.text:5B8E592C A2 00 00	80						       dd 800000A2h
.text:5B8E5930 0C 00 00	80						       dd 8000000Ch
.text:5B8E5934 95 00 00	80						       dd 80000095h
.text:5B8E5938 96 00 00	80						       dd 80000096h
.text:5B8E593C 02 00 00	80						       dd 80000002h
.text:5B8E5940 06 00 00	80						       dd 80000006h
.text:5B8E5944 08 00 00	80						       dd 80000008h
.text:5B8E5948 C9 00 00	80						       dd 800000C9h
.text:5B8E594C A3 00 00	80						       dd 800000A3h
.text:5B8E5950 A1 00 00	80						       dd 800000A1h
.text:5B8E5954 40 00 00	80						       dd 80000040h
.text:5B8E5958 A1 01 00	80						       dd 800001A1h
.text:5B8E595C 00 00 00	00						       dd 0
.text:5B8E5960						       ;
.text:5B8E5960						       ; Import	names for USER32.dll
.text:5B8E5960						       ;
.text:5B8E5960 8E 5E 00	00				       off_5B8E5960    dd rva word_5B8E5E8E    ; DATA XREF: .text:__IMPORT_DESCRIPTOR_USER32o
.text:5B8E5964 82 5E 00	00						       dd rva word_5B8E5E82
.text:5B8E5968 76 5E 00	00						       dd rva word_5B8E5E76
.text:5B8E596C 64 5E 00	00						       dd rva word_5B8E5E64
.text:5B8E5970 52 5E 00	00						       dd rva word_5B8E5E52
.text:5B8E5974 44 5E 00	00						       dd rva word_5B8E5E44
.text:5B8E5978 38 5E 00	00						       dd rva word_5B8E5E38
.text:5B8E597C 24 5E 00	00						       dd rva word_5B8E5E24
.text:5B8E5980 12 5E 00	00						       dd rva word_5B8E5E12
.text:5B8E5984 06 5E 00	00						       dd rva word_5B8E5E06
.text:5B8E5988 FE 5D 00	00						       dd rva word_5B8E5DFE
.text:5B8E598C F2 5D 00	00						       dd rva word_5B8E5DF2
.text:5B8E5990 E4 5D 00	00						       dd rva word_5B8E5DE4
.text:5B8E5994 D4 5D 00	00						       dd rva word_5B8E5DD4
.text:5B8E5998 C8 5D 00	00						       dd rva word_5B8E5DC8
.text:5B8E599C B8 5D 00	00						       dd rva word_5B8E5DB8
.text:5B8E59A0 AC 5D 00	00						       dd rva word_5B8E5DAC
.text:5B8E59A4 8E 5D 00	00						       dd rva word_5B8E5D8E
.text:5B8E59A8 7E 5D 00	00						       dd rva word_5B8E5D7E
.text:5B8E59AC 6C 5D 00	00						       dd rva word_5B8E5D6C
.text:5B8E59B0 60 5D 00	00						       dd rva word_5B8E5D60
.text:5B8E59B4 52 5D 00	00						       dd rva word_5B8E5D52
.text:5B8E59B8 46 5D 00	00						       dd rva word_5B8E5D46
.text:5B8E59BC 3A 5D 00	00						       dd rva word_5B8E5D3A
.text:5B8E59C0 2A 5D 00	00						       dd rva word_5B8E5D2A
.text:5B8E59C4 18 5D 00	00						       dd rva word_5B8E5D18
.text:5B8E59C8 9E 5D 00	00						       dd rva word_5B8E5D9E
.text:5B8E59CC 00 00 00	00						       dd 0
.text:5B8E59D0						       ;
.text:5B8E59D0						       ; Import	names for msvcrt.dll
.text:5B8E59D0						       ;
.text:5B8E59D0 18 5A 00	00				       off_5B8E59D0    dd rva word_5B8E5A18    ; DATA XREF: .text:__IMPORT_DESCRIPTOR_msvcrto
.text:5B8E59D4 34 5A 00	00						       dd rva word_5B8E5A34
.text:5B8E59D8 44 5A 00	00						       dd rva word_5B8E5A44
.text:5B8E59DC 4E 5A 00	00						       dd rva word_5B8E5A4E
.text:5B8E59E0 58 5A 00	00						       dd rva word_5B8E5A58
.text:5B8E59E4 24 5A 00	00						       dd rva word_5B8E5A24
.text:5B8E59E8 00 00 00	00						       dd 0
.text:5B8E59EC						       ;
.text:5B8E59EC						       ; Import	names for ole32.dll
.text:5B8E59EC						       ;
.text:5B8E59EC C8 5F 00	00				       off_5B8E59EC    dd rva word_5B8E5FC8    ; DATA XREF: .text:__IMPORT_DESCRIPTOR_ole32o
.text:5B8E59F0 B4 5F 00	00						       dd rva word_5B8E5FB4
.text:5B8E59F4 FE 5F 00	00						       dd rva word_5B8E5FFE
.text:5B8E59F8 92 5F 00	00						       dd rva word_5B8E5F92
.text:5B8E59FC 7C 5F 00	00						       dd rva word_5B8E5F7C
.text:5B8E5A00 68 5F 00	00						       dd rva word_5B8E5F68
.text:5B8E5A04 56 5F 00	00						       dd rva word_5B8E5F56
.text:5B8E5A08 EC 5F 00	00						       dd rva word_5B8E5FEC
.text:5B8E5A0C DC 5F 00	00						       dd rva word_5B8E5FDC
.text:5B8E5A10 A2 5F 00	00						       dd rva word_5B8E5FA2
.text:5B8E5A14 00 00 00	00						       dd 0
.text:5B8E5A18 C0 01					       word_5B8E5A18   dw 1C0h		       ; DATA XREF: .text:off_5B8E59D0o
.text:5B8E5A1A 5F 70 75	72 65 63 61 6C 6C 00				       db '_purecall',0
.text:5B8E5A24 12 00					       word_5B8E5A24   dw 12h		       ; DATA XREF: .text:5B8E59E4o
.text:5B8E5A26 3F 3F 33	40 59 41 58 50 41 58 40	5A 00			       db '??3@YAXPAX@Z',0
.text:5B8E5A33 00							       align 4
.text:5B8E5A34 11 00					       word_5B8E5A34   dw 11h		       ; DATA XREF: .text:5B8E59D4o
.text:5B8E5A36 3F 3F 32	40 59 41 50 41 58 49 40	5A 00			       db '??2@YAPAXI@Z',0
.text:5B8E5A43 00							       align 4
.text:5B8E5A44 D7 02					       word_5B8E5A44   dw 2D7h		       ; DATA XREF: .text:5B8E59D8o
.text:5B8E5A46 6D 61 6C	6C 6F 63 00					       db 'malloc',0
.text:5B8E5A4D 00							       align 2
.text:5B8E5A4E ED 02					       word_5B8E5A4E   dw 2EDh		       ; DATA XREF: .text:5B8E59DCo
.text:5B8E5A50 72 65 61	6C 6C 6F 63 00					       db 'realloc',0
.text:5B8E5A58 A4 02					       word_5B8E5A58   dw 2A4h		       ; DATA XREF: .text:5B8E59E0o
.text:5B8E5A5A 66 72 65	65 00						       db 'free',0
.text:5B8E5A5F 00							       align 10h
.text:5B8E5A60 6D 73 76	63 72 74 2E 64 6C 6C 00		       aMsvcrt_dll     db 'msvcrt.dll',0       ; DATA XREF: .text:5B8E57CCo
.text:5B8E5A6B 00							       align 4
.text:5B8E5A6C 4C 00					       word_5B8E5A6C   dw 4Ch		       ; DATA XREF: .text:off_5B8E5888o
.text:5B8E5A6E 43 72 65	61 74 65 52 65 63 74 52	67 6E 49 6E 64+		       db 'CreateRectRgnIndirect',0
.text:5B8E5A84 6B 01					       word_5B8E5A84   dw 16Bh		       ; DATA XREF: .text:5B8E58ACo
.text:5B8E5A86 47 65 74	44 65 76 69 63 65 43 61	70 73 00		       db 'GetDeviceCaps',0
.text:5B8E5A94 2F 00					       word_5B8E5A94   dw 2Fh		       ; DATA XREF: .text:5B8E588Co
.text:5B8E5A96 43 72 65	61 74 65 44 43 57 00				       db 'CreateDCW',0
.text:5B8E5AA0 FE 01					       word_5B8E5AA0   dw 1FEh		       ; DATA XREF: .text:5B8E5890o
.text:5B8E5AA2 52 65 73	74 6F 72 65 44 43 00				       db 'RestoreDC',0
.text:5B8E5AAC 41 02					       word_5B8E5AAC   dw 241h		       ; DATA XREF: .text:5B8E5894o
.text:5B8E5AAE 53 65 74	57 69 6E 64 6F 77 4F 72	67 45 78 00		       db 'SetWindowOrgEx',0
.text:5B8E5ABD 00							       align 2
.text:5B8E5ABE 05 02					       word_5B8E5ABE   dw 205h		       ; DATA XREF: .text:5B8E5898o
.text:5B8E5AC0 53 61 76	65 44 43 00					       db 'SaveDC',0
.text:5B8E5AC7 00							       align 4
.text:5B8E5AC8 8C 00					       word_5B8E5AC8   dw 8Ch		       ; DATA XREF: .text:5B8E589Co
.text:5B8E5ACA 44 65 6C	65 74 65 44 43 00				       db 'DeleteDC',0
.text:5B8E5AD3 00							       align 4
.text:5B8E5AD4 3D 02					       word_5B8E5AD4   dw 23Dh		       ; DATA XREF: .text:5B8E58A0o
.text:5B8E5AD6 53 65 74	56 69 65 77 70 6F 72 74	4F 72 67 45 78+		       db 'SetViewportOrgEx',0
.text:5B8E5AE7 00							       align 4
.text:5B8E5AE8 29 02					       word_5B8E5AE8   dw 229h		       ; DATA XREF: .text:5B8E58A4o
.text:5B8E5AEA 53 65 74	4D 61 70 4D 6F 64 65 00				       db 'SetMapMode',0
.text:5B8E5AF5 00							       align 2
.text:5B8E5AF6 C9 01					       word_5B8E5AF6   dw 1C9h		       ; DATA XREF: .text:5B8E58A8o
.text:5B8E5AF8 4C 50 74	6F 44 50 00					       db 'LPtoDP',0
.text:5B8E5AFF 00							       align 10h
.text:5B8E5B00 47 44 49	33 32 2E 64 6C 6C 00		       aGdi32_dll      db 'GDI32.dll',0        ; DATA XREF: .text:5B8E57E0o
.text:5B8E5B0A 02 02					       word_5B8E5B0A   dw 202h		       ; DATA XREF: .text:5B8E58F8o
.text:5B8E5B0C 49 6E 69	74 69 61 6C 69 7A 65 43	72 69 74 69 63+		       db 'InitializeCriticalSection',0
.text:5B8E5B26 76 00					       word_5B8E5B26   dw 76h		       ; DATA XREF: .text:5B8E58F4o
.text:5B8E5B28 44 65 6C	65 74 65 43 72 69 74 69	63 61 6C 53 65+		       db 'DeleteCriticalSection',0
.text:5B8E5B3E 0A 02					       word_5B8E5B3E   dw 20Ah		       ; DATA XREF: .text:5B8E58F0o
.text:5B8E5B40 49 6E 74	65 72 6C 6F 63 6B 65 64	49 6E 63 72 65+		       db 'InterlockedIncrement',0
.text:5B8E5B55 00							       align 2
.text:5B8E5B56 06 02					       word_5B8E5B56   dw 206h		       ; DATA XREF: .text:5B8E58ECo
.text:5B8E5B58 49 6E 74	65 72 6C 6F 63 6B 65 64	44 65 63 72 65+		       db 'InterlockedDecrement',0
.text:5B8E5B6D 00							       align 2
.text:5B8E5B6E F5 01					       word_5B8E5B6E   dw 1F5h		       ; DATA XREF: .text:5B8E58E8o
.text:5B8E5B70 48 65 61	70 46 72 65 65 00				       db 'HeapFree',0
.text:5B8E5B79 00							       align 2
.text:5B8E5B7A 8B 01					       word_5B8E5B7A   dw 18Bh		       ; DATA XREF: .text:5B8E58E4o
.text:5B8E5B7C 47 65 74	50 72 6F 63 65 73 73 48	65 61 70 00		       db 'GetProcessHeap',0
.text:5B8E5B8B 00							       align 4
.text:5B8E5B8C 80 00					       word_5B8E5B8C   dw 80h		       ; DATA XREF: .text:5B8E58E0o
.text:5B8E5B8E 44 69 73	61 62 6C 65 54 68 72 65	61 64 4C 69 62+		       db 'DisableThreadLibraryCalls',0
.text:5B8E5BA8 96 03					       word_5B8E5BA8   dw 396h		       ; DATA XREF: .text:5B8E58DCo
.text:5B8E5BAA 6C 73 74	72 63 6D 70 69 57 00				       db 'lstrcmpiW',0
.text:5B8E5BB4 9F 03					       word_5B8E5BB4   dw 39Fh		       ; DATA XREF: .text:5B8E58D8o
.text:5B8E5BB6 6C 73 74	72 6C 65 6E 57 00				       db 'lstrlenW',0
.text:5B8E5BBF 00							       align 10h
.text:5B8E5BC0 99 03					       word_5B8E5BC0   dw 399h		       ; DATA XREF: .text:5B8E58D4o
.text:5B8E5BC2 6C 73 74	72 63 70 79 57 00				       db 'lstrcpyW',0
.text:5B8E5BCB 00							       align 4
.text:5B8E5BCC 51 02					       word_5B8E5BCC   dw 251h		       ; DATA XREF: .text:5B8E58D0o
.text:5B8E5BCE 4D 75 6C	74 69 42 79 74 65 54 6F	57 69 64 65 43+		       db 'MultiByteToWideChar',0
.text:5B8E5BE2 9E 03					       word_5B8E5BE2   dw 39Eh		       ; DATA XREF: .text:5B8E58CCo
.text:5B8E5BE4 6C 73 74	72 6C 65 6E 41 00				       db 'lstrlenA',0
.text:5B8E5BED 00							       align 2
.text:5B8E5BEE 2D 02					       word_5B8E5BEE   dw 22Dh		       ; DATA XREF: .text:5B8E5918o
.text:5B8E5BF0 4C 65 61	76 65 43 72 69 74 69 63	61 6C 53 65 63+		       db 'LeaveCriticalSection',0
.text:5B8E5C05 00							       align 2
.text:5B8E5C06 8B 00					       word_5B8E5C06   dw 8Bh		       ; DATA XREF: .text:5B8E58C8o
.text:5B8E5C08 45 6E 74	65 72 43 72 69 74 69 63	61 6C 53 65 63+		       db 'EnterCriticalSection',0
.text:5B8E5C1D 00							       align 2
.text:5B8E5C1E 32 01					       word_5B8E5C1E   dw 132h		       ; DATA XREF: .text:5B8E591Co
.text:5B8E5C20 47 65 74	43 75 72 72 65 6E 74 54	68 72 65 61 64+		       db 'GetCurrentThreadId',0
.text:5B8E5C33 00							       align 4
.text:5B8E5C34 DC 00					       word_5B8E5C34   dw 0DCh		       ; DATA XREF: .text:5B8E5914o
.text:5B8E5C36 46 6C 75	73 68 49 6E 73 74 72 75	63 74 69 6F 6E+		       db 'FlushInstructionCache',0
.text:5B8E5C4C 2F 01					       word_5B8E5C4C   dw 12Fh		       ; DATA XREF: .text:5B8E5910o
.text:5B8E5C4E 47 65 74	43 75 72 72 65 6E 74 50	72 6F 63 65 73+		       db 'GetCurrentProcess',0
.text:5B8E5C60 EF 01					       word_5B8E5C60   dw 1EFh		       ; DATA XREF: .text:5B8E590Co
.text:5B8E5C62 48 65 61	70 41 6C 6C 6F 63 00				       db 'HeapAlloc',0
.text:5B8E5C6C 5A 01					       word_5B8E5C6C   dw 15Ah		       ; DATA XREF: .text:5B8E5908o
.text:5B8E5C6E 47 65 74	4C 61 73 74 45 72 72 6F	72 00			       db 'GetLastError',0
.text:5B8E5C7B 00							       align 4
.text:5B8E5C7C F3 01					       word_5B8E5C7C   dw 1F3h		       ; DATA XREF: .text:5B8E5904o
.text:5B8E5C7E 48 65 61	70 44 65 73 74 72 6F 79	00			       db 'HeapDestroy',0
.text:5B8E5C8A 90 03					       word_5B8E5C8A   dw 390h		       ; DATA XREF: .text:5B8E5900o
.text:5B8E5C8C 6C 73 74	72 63 61 74 57 00				       db 'lstrcatW',0
.text:5B8E5C95 00							       align 2
.text:5B8E5C96 66 01					       word_5B8E5C96   dw 166h		       ; DATA XREF: .text:5B8E58FCo
.text:5B8E5C98 47 65 74	4D 6F 64 75 6C 65 46 69	6C 65 4E 61 6D+		       db 'GetModuleFileNameW',0
.text:5B8E5CAB 00							       align 4
.text:5B8E5CAC 9C 03					       word_5B8E5CAC   dw 39Ch		       ; DATA XREF: .text:5B8E5920o
.text:5B8E5CAE 6C 73 74	72 63 70 79 6E 57 00				       db 'lstrcpynW',0
.text:5B8E5CB8 E5 00					       word_5B8E5CB8   dw 0E5h		       ; DATA XREF: .text:off_5B8E58B4o
.text:5B8E5CBA 46 72 65	65 4C 69 62 72 61 72 79	00			       db 'FreeLibrary',0
.text:5B8E5CC6 28 03					       word_5B8E5CC6   dw 328h		       ; DATA XREF: .text:5B8E58B8o
.text:5B8E5CC8 47 65 74	50 72 6F 63 41 64 64 72	65 73 73 00		       db 'GetProcAddress',0
.text:5B8E5CD7 00							       align 4
.text:5B8E5CD8 33 02					       word_5B8E5CD8   dw 233h		       ; DATA XREF: .text:5B8E58BCo
.text:5B8E5CDA 4C 6F 61	64 4C 69 62 72 61 72 79	41 00			       db 'LoadLibraryA',0
.text:5B8E5CE7 00							       align 4
.text:5B8E5CE8 D7 00					       word_5B8E5CE8   dw 0D7h		       ; DATA XREF: .text:5B8E58C0o
.text:5B8E5CEA 56 69 72	74 75 61 6C 41 6C 6C 6F	63 00			       db 'VirtualAlloc',0
.text:5B8E5CF7 00							       align 4
.text:5B8E5CF8 30 02					       word_5B8E5CF8   dw 230h		       ; DATA XREF: .text:5B8E58C4o
.text:5B8E5CFA 4C 6F 61	64 4C 69 62 72 61 72 79	45 78 57 00		       db 'LoadLibraryExW',0
.text:5B8E5D09 00							       align 2
.text:5B8E5D0A 4B 45 52	4E 45 4C 33 32 2E 64 6C	6C 00	       aKernel32_dll   db 'KERNEL32.dll',0     ; DATA XREF: .text:5B8E57F4o
.text:5B8E5D17 00							       align 4
.text:5B8E5D18 8F 00					       word_5B8E5D18   dw 8Fh		       ; DATA XREF: .text:5B8E59C4o
.text:5B8E5D1A 44 65 66	57 69 6E 64 6F 77 50 72	6F 63 57 00		       db 'DefWindowProcW',0
.text:5B8E5D29 00							       align 2
.text:5B8E5D2A 99 00					       word_5B8E5D2A   dw 99h		       ; DATA XREF: .text:5B8E59C0o
.text:5B8E5D2C 44 65 73	74 72 6F 79 57 69 6E 64	6F 77 00		       db 'DestroyWindow',0
.text:5B8E5D3A 0B 02					       word_5B8E5D3A   dw 20Bh		       ; DATA XREF: .text:5B8E59BCo
.text:5B8E5D3C 50 74 49	6E 52 65 63 74 00				       db 'PtInRect',0
.text:5B8E5D45 00							       align 2
.text:5B8E5D46 AF 02					       word_5B8E5D46   dw 2AFh		       ; DATA XREF: .text:5B8E59B8o
.text:5B8E5D48 55 6E 69	6F 6E 52 65 63 74 00				       db 'UnionRect',0
.text:5B8E5D52 92 02					       word_5B8E5D52   dw 292h		       ; DATA XREF: .text:5B8E59B4o
.text:5B8E5D54 53 68 6F	77 57 69 6E 64 6F 77 00				       db 'ShowWindow',0
.text:5B8E5D5F 00							       align 10h
.text:5B8E5D60 2C 00					       word_5B8E5D60   dw 2Ch		       ; DATA XREF: .text:5B8E59B0o
.text:5B8E5D62 43 68 61	72 4E 65 78 74 57 00				       db 'CharNextW',0
.text:5B8E5D6C 1C 00					       word_5B8E5D6C   dw 1Ch		       ; DATA XREF: .text:5B8E59ACo
.text:5B8E5D6E 43 61 6C	6C 57 69 6E 64 6F 77 50	72 6F 63 57 00		       db 'CallWindowProcW',0
.text:5B8E5D7E 83 02					       word_5B8E5D7E   dw 283h		       ; DATA XREF: .text:5B8E59A8o
.text:5B8E5D80 53 65 74	57 69 6E 64 6F 77 50 6F	73 00			       db 'SetWindowPos',0
.text:5B8E5D8D 00							       align 2
.text:5B8E5D8E 84 02					       word_5B8E5D8E   dw 284h		       ; DATA XREF: .text:5B8E59A4o
.text:5B8E5D90 53 65 74	57 69 6E 64 6F 77 52 67	6E 00			       db 'SetWindowRgn',0
.text:5B8E5D9D 00							       align 2
.text:5B8E5D9E F2 01					       word_5B8E5D9E   dw 1F2h		       ; DATA XREF: .text:5B8E59C8o
.text:5B8E5DA0 4F 66 66	73 65 74 52 65 63 74 00				       db 'OffsetRect',0
.text:5B8E5DAB 00							       align 4
.text:5B8E5DAC DF 00					       word_5B8E5DAC   dw 0DFh		       ; DATA XREF: .text:5B8E59A0o
.text:5B8E5DAE 45 71 75	61 6C 52 65 63 74 00				       db 'EqualRect',0
.text:5B8E5DB8 92 01					       word_5B8E5DB8   dw 192h		       ; DATA XREF: .text:5B8E599Co
.text:5B8E5DBA 49 6E 74	65 72 73 65 63 74 52 65	63 74 00		       db 'IntersectRect',0
.text:5B8E5DC8 C8 00					       word_5B8E5DC8   dw 0C8h		       ; DATA XREF: .text:5B8E5998o
.text:5B8E5DCA 45 6E 64	50 61 69 6E 74 00				       db 'EndPaint',0
.text:5B8E5DD3 00							       align 4
.text:5B8E5DD4 FF 00					       word_5B8E5DD4   dw 0FFh		       ; DATA XREF: .text:5B8E5994o
.text:5B8E5DD6 47 65 74	43 6C 69 65 6E 74 52 65	63 74 00		       db 'GetClientRect',0
.text:5B8E5DE4 0D 00					       word_5B8E5DE4   dw 0Dh		       ; DATA XREF: .text:5B8E5990o
.text:5B8E5DE6 42 65 67	69 6E 50 61 69 6E 74 00				       db 'BeginPaint',0
.text:5B8E5DF1 00							       align 2
.text:5B8E5DF2 2A 02					       word_5B8E5DF2   dw 22Ah		       ; DATA XREF: .text:5B8E598Co
.text:5B8E5DF4 52 65 6C	65 61 73 65 44 43 00				       db 'ReleaseDC',0
.text:5B8E5DFE 0C 01					       word_5B8E5DFE   dw 10Ch		       ; DATA XREF: .text:5B8E5988o
.text:5B8E5E00 47 65 74	44 43 00					       db 'GetDC',0
.text:5B8E5E06 45 01					       word_5B8E5E06   dw 145h		       ; DATA XREF: .text:5B8E5984o
.text:5B8E5E08 47 65 74	50 61 72 65 6E 74 00				       db 'GetParent',0
.text:5B8E5E12 81 02					       word_5B8E5E12   dw 281h		       ; DATA XREF: .text:5B8E5980o
.text:5B8E5E14 53 65 74	57 69 6E 64 6F 77 4C 6F	6E 67 57 00		       db 'SetWindowLongW',0
.text:5B8E5E23 00							       align 4
.text:5B8E5E24 18 02					       word_5B8E5E24   dw 218h		       ; DATA XREF: .text:5B8E597Co
.text:5B8E5E26 52 65 67	69 73 74 65 72 43 6C 61	73 73 45 78 57+		       db 'RegisterClassExW',0
.text:5B8E5E37 00							       align 4
.text:5B8E5E38 D9 02					       word_5B8E5E38   dw 2D9h		       ; DATA XREF: .text:5B8E5978o
.text:5B8E5E3A 77 73 70	72 69 6E 74 66 57 00				       db 'wsprintfW',0
.text:5B8E5E44 BA 01					       word_5B8E5E44   dw 1BAh		       ; DATA XREF: .text:5B8E5974o
.text:5B8E5E46 4C 6F 61	64 43 75 72 73 6F 72 57	00			       db 'LoadCursorW',0
.text:5B8E5E52 F8 00					       word_5B8E5E52   dw 0F8h		       ; DATA XREF: .text:5B8E5970o
.text:5B8E5E54 47 65 74	43 6C 61 73 73 49 6E 66	6F 45 78 57 00		       db 'GetClassInfoExW',0
.text:5B8E5E64 61 00					       word_5B8E5E64   dw 61h		       ; DATA XREF: .text:5B8E596Co
.text:5B8E5E66 43 72 65	61 74 65 57 69 6E 64 6F	77 45 78 57 00		       db 'CreateWindowExW',0
.text:5B8E5E76 56 02					       word_5B8E5E76   dw 256h		       ; DATA XREF: .text:5B8E5968o
.text:5B8E5E78 53 65 74	46 6F 63 75 73 00				       db 'SetFocus',0
.text:5B8E5E81 00							       align 2
.text:5B8E5E82 AB 01					       word_5B8E5E82   dw 1ABh		       ; DATA XREF: .text:5B8E5964o
.text:5B8E5E84 49 73 57	69 6E 64 6F 77 00				       db 'IsWindow',0
.text:5B8E5E8D 00							       align 2
.text:5B8E5E8E 93 01					       word_5B8E5E8E   dw 193h		       ; DATA XREF: .text:off_5B8E5960o
.text:5B8E5E90 49 6E 76	61 6C 69 64 61 74 65 52	65 63 74 00		       db 'InvalidateRect',0
.text:5B8E5E9F 00							       align 10h
.text:5B8E5EA0 55 53 45	52 33 32 2E 64 6C 6C 00		       aUser32_dll     db 'USER32.dll',0       ; DATA XREF: .text:5B8E5808o
.text:5B8E5EAB 00							       align 4
.text:5B8E5EAC C8 01					       word_5B8E5EAC   dw 1C8h		       ; DATA XREF: .text:5B8E5870o
.text:5B8E5EAE 52 65 67	43 6C 6F 73 65 4B 65 79	00			       db 'RegCloseKey',0
.text:5B8E5EBA F9 01					       word_5B8E5EBA   dw 1F9h		       ; DATA XREF: .text:5B8E586Co
.text:5B8E5EBC 52 65 67	53 65 74 56 61 6C 75 65	45 78 57 00		       db 'RegSetValueExW',0
.text:5B8E5ECB 00							       align 4
.text:5B8E5ECC E2 01					       word_5B8E5ECC   dw 1E2h		       ; DATA XREF: .text:5B8E5868o
.text:5B8E5ECE 52 65 67	4F 70 65 6E 4B 65 79 45	78 57 00		       db 'RegOpenKeyExW',0
.text:5B8E5EDC D0 01					       word_5B8E5EDC   dw 1D0h		       ; DATA XREF: .text:5B8E5864o
.text:5B8E5EDE 52 65 67	44 65 6C 65 74 65 4B 65	79 57 00		       db 'RegDeleteKeyW',0
.text:5B8E5EEC CD 01					       word_5B8E5EEC   dw 1CDh		       ; DATA XREF: .text:off_5B8E5860o
.text:5B8E5EEE 52 65 67	43 72 65 61 74 65 4B 65	79 45 78 57 00		       db 'RegCreateKeyExW',0
.text:5B8E5EFE EC 01					       word_5B8E5EFE   dw 1ECh		       ; DATA XREF: .text:5B8E5874o
.text:5B8E5F00 52 65 67	51 75 65 72 79 56 61 6C	75 65 45 78 57+		       db 'RegQueryValueExW',0
.text:5B8E5F11 00							       align 2
.text:5B8E5F12 E7 01					       word_5B8E5F12   dw 1E7h		       ; DATA XREF: .text:5B8E5878o
.text:5B8E5F14 52 65 67	51 75 65 72 79 49 6E 66	6F 4B 65 79 57+		       db 'RegQueryInfoKeyW',0
.text:5B8E5F25 00							       align 2
.text:5B8E5F26 D6 01					       word_5B8E5F26   dw 1D6h		       ; DATA XREF: .text:5B8E587Co
.text:5B8E5F28 52 65 67	45 6E 75 6D 4B 65 79 45	78 57 00		       db 'RegEnumKeyExW',0
.text:5B8E5F36 D2 01					       word_5B8E5F36   dw 1D2h		       ; DATA XREF: .text:5B8E5880o
.text:5B8E5F38 52 65 67	44 65 6C 65 74 65 56 61	6C 75 65 57 00		       db 'RegDeleteValueW',0
.text:5B8E5F48 41 44 56	41 50 49 33 32 2E 64 6C	6C 00	       aAdvapi32_dll   db 'ADVAPI32.dll',0     ; DATA XREF: .text:5B8E581Co
.text:5B8E5F55 00							       align 2
.text:5B8E5F56 05 01					       word_5B8E5F56   dw 105h		       ; DATA XREF: .text:5B8E5A04o
.text:5B8E5F58 4F 6C 65	52 65 67 45 6E 75 6D 56	65 72 62 73 00		       db 'OleRegEnumVerbs',0
.text:5B8E5F68 07 01					       word_5B8E5F68   dw 107h		       ; DATA XREF: .text:5B8E5A00o
.text:5B8E5F6A 4F 6C 65	52 65 67 47 65 74 55 73	65 72 54 79 70+		       db 'OleRegGetUserType',0
.text:5B8E5F7C 06 01					       word_5B8E5F7C   dw 106h		       ; DATA XREF: .text:5B8E59FCo
.text:5B8E5F7E 4F 6C 65	52 65 67 47 65 74 4D 69	73 63 53 74 61+		       db 'OleRegGetMiscStatus',0
.text:5B8E5F92 61 00					       word_5B8E5F92   dw 61h		       ; DATA XREF: .text:5B8E59F8o
.text:5B8E5F94 43 6F 54	61 73 6B 4D 65 6D 46 72	65 65 00		       db 'CoTaskMemFree',0
.text:5B8E5FA2 60 00					       word_5B8E5FA2   dw 60h		       ; DATA XREF: .text:5B8E5A10o
.text:5B8E5FA4 43 6F 54	61 73 6B 4D 65 6D 41 6C	6C 6F 63 00		       db 'CoTaskMemAlloc',0
.text:5B8E5FB3 00							       align 4
.text:5B8E5FB4 62 00					       word_5B8E5FB4   dw 62h		       ; DATA XREF: .text:5B8E59F0o
.text:5B8E5FB6 43 6F 54	61 73 6B 4D 65 6D 52 65	61 6C 6C 6F 63+		       db 'CoTaskMemRealloc',0
.text:5B8E5FC7 00							       align 4
.text:5B8E5FC8 FE 00					       word_5B8E5FC8   dw 0FEh		       ; DATA XREF: .text:off_5B8E59ECo
.text:5B8E5FCA 4F 6C 65	4C 6F 61 64 46 72 6F 6D	53 74 72 65 61+		       db 'OleLoadFromStream',0
.text:5B8E5FDC 4C 01					       word_5B8E5FDC   dw 14Ch		       ; DATA XREF: .text:5B8E5A0Co
.text:5B8E5FDE 57 72 69	74 65 43 6C 61 73 73 53	74 6D 00		       db 'WriteClassStm',0
.text:5B8E5FEC 0A 01					       word_5B8E5FEC   dw 10Ah		       ; DATA XREF: .text:5B8E5A08o
.text:5B8E5FEE 4F 6C 65	53 61 76 65 54 6F 53 74	72 65 61 6D 00		       db 'OleSaveToStream',0
.text:5B8E5FFE 8B 00					       word_5B8E5FFE   dw 8Bh		       ; DATA XREF: .text:5B8E59F4o
.text:5B8E6000 43 72 65	61 74 65 4F 6C 65 41 64	76 69 73 65 48+		       db 'CreateOleAdviseHolder',0
.text:5B8E6016 6F 6C 65	33 32 2E 64 6C 6C 00		       aOle32_dll      db 'ole32.dll',0        ; DATA XREF: .text:5B8E5830o
.text:5B8E6020 4F 4C 45	41 55 54 33 32 2E 64 6C	6C 00	       aOleaut32_dll   db 'OLEAUT32.dll',0     ; DATA XREF: .text:5B8E5844o
.text:5B8E602D 00 00 00							       align 10h
.text:5B8E6030						       ;
.text:5B8E6030						       ; Export	directory for trialoc.DLL
.text:5B8E6030						       ;
.text:5B8E6030 00 00 00	00				       dword_5B8E6030  dd 0		       ; DATA XREF: HEADER:5B8E0160o
.text:5B8E6030											       ; Characteristics
.text:5B8E6034 F0 6E 7D	3B						       dd 3B7D6EF0h	       ; TimeDateStamp:	Fri Aug	17 19:22:24 2001
.text:5B8E6038 00 00							       dw 0		       ; MajorVersion
.text:5B8E603A 00 00							       dw 0		       ; MinorVersion
.text:5B8E603C 80 60 00	00						       dd rva aTrialoc_dll     ; Name
.text:5B8E6040 01 00 00	00						       dd 1		       ; Base
.text:5B8E6044 04 00 00	00						       dd 4		       ; NumberOfFunctions
.text:5B8E6048 04 00 00	00						       dd 4		       ; NumberOfNames
.text:5B8E604C 58 60 00	00						       dd rva off_5B8E6058     ; AddressOfFunctions
.text:5B8E6050 68 60 00	00						       dd rva off_5B8E6068     ; AddressOfNames
.text:5B8E6054 78 60 00	00						       dd rva word_5B8E6078    ; AddressOfNameOrdinals
.text:5B8E6058						       ;
.text:5B8E6058						       ; Export	Address	Table for trialoc.DLL
.text:5B8E6058						       ;
.text:5B8E6058 14 1B 00	00 20 1B 00 00 39 1B 00	00 48 1B 00 00 off_5B8E6058    dd rva _DllCanUnloadNow@0, rva _DllGetClassObject@12, rva _DllRegisterServer@0
.text:5B8E6058											       ; DATA XREF: .text:5B8E604Co
.text:5B8E6058								       dd rva _DllUnregisterServer@0 ; DllCanUnloadNow()
.text:5B8E6068						       ;
.text:5B8E6068						       ; Export	Names Table for	trialoc.DLL
.text:5B8E6068						       ;
.text:5B8E6068 8C 60 00	00 9C 60 00 00 AE 60 00	00 C0 60 00 00 off_5B8E6068    dd rva aDllcanunloadno, rva aDllgetclassobj, rva	aDllregisterser
.text:5B8E6068											       ; DATA XREF: .text:5B8E6050o
.text:5B8E6068								       dd rva aDllunregisters  ; "DllCanUnloadNow"
.text:5B8E6078						       ;
.text:5B8E6078						       ; Export	Ordinals Table for trialoc.DLL
.text:5B8E6078						       ;
.text:5B8E6078 00 00 01	00 02 00 03 00			       word_5B8E6078   dw 0, 1,	2, 3	       ; DATA XREF: .text:5B8E6054o
.text:5B8E6080 74 72 69	61 6C 6F 63 2E 44 4C 4C	00	       aTrialoc_dll    db 'trialoc.DLL',0      ; DATA XREF: .text:5B8E603Co
.text:5B8E608C 44 6C 6C	43 61 6E 55 6E 6C 6F 61	64 4E 6F 77 00 aDllcanunloadno db 'DllCanUnloadNow',0  ; DATA XREF: .text:off_5B8E6068o
.text:5B8E609C 44 6C 6C	47 65 74 43 6C 61 73 73	4F 62 6A 65 63+aDllgetclassobj db 'DllGetClassObject',0
.text:5B8E609C 74 00										       ; DATA XREF: .text:off_5B8E6068o
.text:5B8E60AE 44 6C 6C	52 65 67 69 73 74 65 72	53 65 72 76 65+aDllregisterser db 'DllRegisterServer',0
.text:5B8E60AE 72 00										       ; DATA XREF: .text:off_5B8E6068o
.text:5B8E60C0 44 6C 6C	55 6E 72 65 67 69 73 74	65 72 53 65 72+aDllunregisters db 'DllUnregisterServer',0
.text:5B8E60C0 76 65 72	00									       ; DATA XREF: .text:off_5B8E6068o
.text:5B8E60D4 00 00 00	00 00 00 00 00 00 00 00	00 00 00 00 00+		       align 1000h
.text:5B8E60D4 00 00 00	00 00 00 00 00 00 00 00	00 00 00 00 00+_text	       ends
.text:5B8E60D4 00 00 00	00 00 00 00 00 00 00 00	00 00 00 00 00+
.data:5B8E7000						       ; Section 2. (virtual address 00007000)
.data:5B8E7000						       ; Virtual size		       : 00000154 (    340.)
.data:5B8E7000						       ; Section size in file	       : 00001000 (   4096.)
.data:5B8E7000						       ; Offset	to raw data for	section: 00007000
.data:5B8E7000						       ; Flags C0000040: Data Readable Writable
.data:5B8E7000						       ; Alignment     : default
.data:5B8E7000						       ; ===========================================================================
.data:5B8E7000
.data:5B8E7000						       ; Segment type: Pure data
.data:5B8E7000						       ; Segment permissions: Read/Write
.data:5B8E7000						       _data	       segment para public 'DATA' use32
.data:5B8E7000								       assume cs:_data
.data:5B8E7000								       ;org 5B8E7000h
.data:5B8E7000 FC 11 8E	5B				       off_5B8E7000    dd offset _CLSID_TrialEnd
.data:5B8E7000											       ; DATA XREF: HEADER:5B8E0118o
.data:5B8E7000											       ; HEADER:5B8E0214o
.data:5B8E7004 80 1A 8E	5B						       dd offset ?UpdateRegistry@CTrialEnd@@SGJH@Z ; CTrialEnd::UpdateRegistry(int)
.data:5B8E7008 13 1D 8E	5B						       dd offset ?CreateInstance@?$CComCreator@V?$CComObjectNoLock@VCComClassFactory@ATL@@@ATL@@@ATL@@SGJPAXABU_GUID@@PAPAX@Z ;	ATL::CComCreator<ATL::CComObjectNoLock<ATL::CComClassFactory>>::CreateInstance(void *,_GUID const &,void * *)
.data:5B8E700C 8A 2A 8E	5B						       dd offset ?CreateInstance@?$CComCreator2@V?$CComCreator@V?$CComObject@VCTrialEnd@@@ATL@@@ATL@@V?$CComCreator@V?$CComAggObject@VCTrialEnd@@@ATL@@@2@@ATL@@SGJPAXABU_GUID@@PAPAX@Z	; ATL::CComCreator2<ATL::CComCreator<ATL::CComObject<CTrialEnd>>,ATL::CComCreator<ATL::CComAggObject<CTrialEnd>>>::CreateInstance(void *,_GUID const &,void * *)
.data:5B8E7010 00							       db    0
.data:5B8E7011 00							       db    0
.data:5B8E7012 00							       db    0
.data:5B8E7013 00							       db    0
.data:5B8E7014 00							       db    0
.data:5B8E7015 00							       db    0
.data:5B8E7016 00							       db    0
.data:5B8E7017 00							       db    0
.data:5B8E7018 98 1A 8E	5B						       dd offset ?GetObjectDescription@?$CComCoClass@VCTrialEnd@@$1?CLSID_TrialEnd@@3U_GUID@@B@ATL@@SGPBGXZ ; ATL::CComCoClass<CTrialEnd,&_GUID	const CLSID_TrialEnd>::GetObjectDescription(void)
.data:5B8E701C 00							       db    0
.data:5B8E701D 00							       db    0
.data:5B8E701E 00							       db    0
.data:5B8E701F 00							       db    0
.data:5B8E7020 00							       db    0
.data:5B8E7021 00							       db    0
.data:5B8E7022 00							       db    0
.data:5B8E7023 00							       db    0
.data:5B8E7024 00							       db    0
.data:5B8E7025 00							       db    0
.data:5B8E7026 00							       db    0
.data:5B8E7027 00							       db    0
.data:5B8E7028 00							       db    0
.data:5B8E7029 00							       db    0
.data:5B8E702A 00							       db    0
.data:5B8E702B 00							       db    0
.data:5B8E702C 00							       db    0
.data:5B8E702D 00							       db    0
.data:5B8E702E 00							       db    0
.data:5B8E702F 00							       db    0
.data:5B8E7030 00							       db    0
.data:5B8E7031 00							       db    0
.data:5B8E7032 00							       db    0
.data:5B8E7033 00							       db    0
.data:5B8E7034 00							       db    0
.data:5B8E7035 00							       db    0
.data:5B8E7036 00							       db    0
.data:5B8E7037 00							       db    0
.data:5B8E7038						       ; ATL::CComTypeInfoHolder ATL::IDispatchImpl<ITrialEnd,&_GUID const IID_ITrialEnd,&_GUID	const LIBID_TRIALOCLib,1,0,ATL::CComTypeInfoHolder>::_tih
.data:5B8E7038 DC 11 8E	5B				       ?_tih@?$IDispatchImpl@UITrialEnd@@$1?IID_ITrialEnd@@3U_GUID@@B$1?LIBID_TRIALOCLib@@3U3@B$00$0A@VCComTypeInfoHolder@ATL@@@ATL@@1VCComTypeInfoHolder@2@A dd offset	_IID_ITrialEnd
.data:5B8E7038											       ; DATA XREF: CTrialEnd::~CTrialEnd(void)+3o
.data:5B8E7038											       ; CTrialEnd::CTrialEnd(void)+Fo	...
.data:5B8E703C EC 11 8E	5B						       dd offset _LIBID_TRIALOCLib
.data:5B8E7040 01							       db    1
.data:5B8E7041 00							       db    0
.data:5B8E7042 00							       db    0
.data:5B8E7043 00							       db    0
.data:5B8E7044 00							       db    0
.data:5B8E7045 00							       db    0
.data:5B8E7046 00							       db    0
.data:5B8E7047 00							       db    0
.data:5B8E7048 00							       db    0
.data:5B8E7049 00							       db    0
.data:5B8E704A 00							       db    0
.data:5B8E704B 00							       db    0
.data:5B8E704C						       ; struct	ATL::ATL_PROPMAP_ENTRY `CTrialEnd::GetPropertyMap'::`2'::pPropMap
.data:5B8E704C 00					       ?pPropMap@?1??GetPropertyMap@CTrialEnd@@SIPAUATL_PROPMAP_ENTRY@ATL@@XZ@4PAU34@A db    0
.data:5B8E704C											       ; DATA XREF: ATL::IPersistStreamInitImpl<CTrialEnd>::Load(IStream *)+9o
.data:5B8E704C											       ; ATL::IPersistStreamInitImpl<CTrialEnd>::Save(IStream *,int)+4o
.data:5B8E704D 00							       db    0
.data:5B8E704E 00							       db    0
.data:5B8E704F 00							       db    0
.data:5B8E7050 00							       db    0
.data:5B8E7051 00							       db    0
.data:5B8E7052 00							       db    0
.data:5B8E7053 00							       db    0
.data:5B8E7054 00							       db    0
.data:5B8E7055 00							       db    0
.data:5B8E7056 00							       db    0
.data:5B8E7057 00							       db    0
.data:5B8E7058 2C 1A 8E	5B						       dd offset _GUID_NULL
.data:5B8E705C 00 00 00	00						       align 10h
.data:5B8E7060						       ; WNDCLASSEXW `ATL::CWindowImpl<CTrialEnd>::GetWndClassInfo'::`2'::wc
.data:5B8E7060 30 00 00	00 03 00 00 00 99 4E 8E	5B 00 00 00 00+?wc@?1??GetWndClassInfo@?$CWindowImpl@VCTrialEnd@@@ATL@@SIAAVCWndClassInfo@3@XZ@4V43@A WNDCLASSEXW <30h,	3, \
.data:5B8E7060 00 00 00	00 00 00 00 00 00 00 00	00 00 00 00 00+					       ; DATA XREF: ATL::CComControl<CTrialEnd>::CreateControlWindow(HWND__ *,tagRECT &)+8o
.data:5B8E7060 06 00 00	00 00 00 00 00 00 00 00	00 00 00 00 00				    offset ?StartWindowProc@CWindowImplBase@ATL@@SGJPAUHWND__@@IIJ@Z,\ ; ATL::CWindowImplBase::StartWindowProc(HWND__ *,uint,uint,long)
.data:5B8E7060										    0, 0, 0, 0,	0, 6, 0, 0, 0>
.data:5B8E7090 00							       db    0
.data:5B8E7091 00							       db    0
.data:5B8E7092 00							       db    0
.data:5B8E7093 00							       db    0
.data:5B8E7094 00							       db    0
.data:5B8E7095 00							       db    0
.data:5B8E7096 00							       db    0
.data:5B8E7097 00							       db    0
.data:5B8E7098 00							       db    0
.data:5B8E7099 7F							       db  7Fh ; 
.data:5B8E709A 00							       db    0
.data:5B8E709B 00							       db    0
.data:5B8E709C 01							       db    1
.data:5B8E709D 00							       db    0
.data:5B8E709E 00							       db    0
.data:5B8E709F 00							       db    0
.data:5B8E70A0 00							       db    0
.data:5B8E70A1 00							       db    0
.data:5B8E70A2 00							       db    0
.data:5B8E70A3 00							       db    0
.data:5B8E70A4 00							       db    0
.data:5B8E70A5 00							       db    0
.data:5B8E70A6 00							       db    0
.data:5B8E70A7 00							       db    0
.data:5B8E70A8 00							       db    0
.data:5B8E70A9 00							       db    0
.data:5B8E70AA 00							       db    0
.data:5B8E70AB 00							       db    0
.data:5B8E70AC 00							       db    0
.data:5B8E70AD 00							       db    0
.data:5B8E70AE 00							       db    0
.data:5B8E70AF 00							       db    0
.data:5B8E70B0 00							       db    0
.data:5B8E70B1 00							       db    0
.data:5B8E70B2 00							       db    0
.data:5B8E70B3 00							       db    0
.data:5B8E70B4 00							       db    0
.data:5B8E70B5 00							       db    0
.data:5B8E70B6 00							       db    0
.data:5B8E70B7 00							       db    0
.data:5B8E70B8 00							       db    0
.data:5B8E70B9 00							       db    0
.data:5B8E70BA 00							       db    0
.data:5B8E70BB 00							       db    0
.data:5B8E70BC 00							       db    0
.data:5B8E70BD 00							       db    0
.data:5B8E70BE 00							       db    0
.data:5B8E70BF 00							       db    0
.data:5B8E70C0						       ; unsigned short	const *	* ATL::rgszNeverDelete
.data:5B8E70C0 80 16 8E	5B				       ?rgszNeverDelete@ATL@@3PAPBGA dd	offset aClsid
.data:5B8E70C0											       ; DATA XREF: ATL::CRegParser::CanForceRemoveKey(ushort const *)+1o
.data:5B8E70C0											       ; "CLSID"
.data:5B8E70C4 70 16 8E	5B						       dd offset aTypelib      ; "TYPELIB"
.data:5B8E70C8 00					       unk_5B8E70C8    db    0		       ; DATA XREF: ATL::CRegParser::CanForceRemoveKey(ushort const *)+19o
.data:5B8E70C9 00							       db    0
.data:5B8E70CA 00							       db    0
.data:5B8E70CB 00							       db    0
.data:5B8E70CC 00							       db    0
.data:5B8E70CD 00							       db    0
.data:5B8E70CE 00							       db    0
.data:5B8E70CF 00							       db    0
.data:5B8E70D0 00					       ___@@_PchSym_@00@UckxorvmgUrmvgxlivUxlmmvxgrlmdraziwUgirzolxUfmrxlwvUlyqUrDIGUhgwzucOlyq@trialoc	db    0
.data:5B8E70D1 00							       db    0
.data:5B8E70D2 00							       db    0
.data:5B8E70D3 00							       db    0
.data:5B8E70D4 00							       db    0
.data:5B8E70D5 00							       db    0
.data:5B8E70D6 00							       db    0
.data:5B8E70D7 00							       db    0
.data:5B8E70D8						       ; ATL::CComModule _Module
.data:5B8E70D8 00					       ?_Module@@3VCComModule@ATL@@A db	   0   ; DATA XREF: CTrialEnd::UpdateRegistry(int)+Bo
.data:5B8E70D8											       ; DllRegisterServer()+4o ...
.data:5B8E70D9 00							       db    0
.data:5B8E70DA 00							       db    0
.data:5B8E70DB 00							       db    0
.data:5B8E70DC						       ; HINSTANCE hInstance
.data:5B8E70DC 00 00 00	00				       hInstance       dd 0		       ; DATA XREF: ATL::CWndClassInfo::Register(long (**)(HWND__ *,uint,uint,long))+32r
.data:5B8E70DC											       ; ATL::CWindowImplBase::Create(HWND__ *,tagRECT &,ushort	const *,ulong,ulong,uint,ushort)+3Fr ...
.data:5B8E70E0 00							       db    0
.data:5B8E70E1 00							       db    0
.data:5B8E70E2 00							       db    0
.data:5B8E70E3 00							       db    0
.data:5B8E70E4 00							       db    0
.data:5B8E70E5 00							       db    0
.data:5B8E70E6 00							       db    0
.data:5B8E70E7 00							       db    0
.data:5B8E70E8 00							       db    0
.data:5B8E70E9 00							       db    0
.data:5B8E70EA 00							       db    0
.data:5B8E70EB 00							       db    0
.data:5B8E70EC						       ; volatile LONG Addend
.data:5B8E70EC 00 00 00	00				       Addend	       dd 0		       ; DATA XREF: ATL::CComObject<CTrialEnd>::CComObject<CTrialEnd>(void *)+8o
.data:5B8E70EC											       ; ATL::CComObject<CTrialEnd>::~CComObject<CTrialEnd>(void)+3o ...
.data:5B8E70F0 00							       db    0
.data:5B8E70F1 00							       db    0
.data:5B8E70F2 00							       db    0
.data:5B8E70F3 00							       db    0
.data:5B8E70F4						       ; struct	_RTL_CRITICAL_SECTION CriticalSection
.data:5B8E70F4 00 00 00	00 00 00 00 00 00 00 00	00 00 00 00 00+CriticalSection _RTL_CRITICAL_SECTION <0>
.data:5B8E70F4 00 00 00	00 00 00 00 00								       ; DATA XREF: ATL::CComTypeInfoHolder::AddRef(void)+2o
.data:5B8E70F4											       ; ATL::CComTypeInfoHolder::Release(void)+2o ...
.data:5B8E710C						       ; struct	_RTL_CRITICAL_SECTION stru_5B8E710C
.data:5B8E710C 00 00 00	00 00 00 00 00 00 00 00	00 00 00 00 00+stru_5B8E710C   _RTL_CRITICAL_SECTION <0>
.data:5B8E710C 00 00 00	00 00 00 00 00								       ; DATA XREF: ATL::CWndClassInfo::Register(long (**)(HWND__ *,uint,uint,long))+16o
.data:5B8E710C											       ; ATL::CWndClassInfo::Register(long (**)(HWND__ *,uint,uint,long)):loc_5B8E3CA0o
.data:5B8E7124 00 00 00	00 00 00 00 00 00 00 00	00 00 00 00 00+		       align 20h
.data:5B8E7140						       ; LPCWSTR lpString2
.data:5B8E7140 00 00 00	00				       lpString2       dd 0		       ; DATA XREF: sub_5B8E2BD9+10w
.data:5B8E7140											       ; sub_5B8E2BD9:loc_5B8E2C12r
.data:5B8E7144 00 00					       word_5B8E7144   dw 0		       ; DATA XREF: sub_5B8E2BD9+1Aw
.data:5B8E7144											       ; sub_5B8E2BD9:loc_5B8E2C33r
.data:5B8E7146 00 00							       align 4
.data:5B8E7148 00 00 00	00				       dword_5B8E7148  dd 0		       ; DATA XREF: sub_5B8E2BD9+23w
.data:5B8E714C 00 00					       word_5B8E714C   dw 0		       ; DATA XREF: sub_5B8E2BD9+2Dw
.data:5B8E714E 00 00							       align 10h
.data:5B8E7150 00 00 00	00				       dword_5B8E7150  dd 0		       ; DATA XREF: sub_5B8E2BD9r
.data:5B8E7150											       ; sub_5B8E2BD9+9w
.data:5B8E7154 00 00 00	00 00 00 00 00 00 00 00	00 00 00 00 00+		       align 1000h
.data:5B8E7154 00 00 00	00 00 00 00 00 00 00 00	00 00 00 00 00+_data	       ends
.data:5B8E7154 00 00 00	00 00 00 00 00 00 00 00	00 00 00 00 00+
.rsrc:5B8E8000						       ; ===========================================================================
.rsrc:5B8E8000
.rsrc:5B8E8000						       ; [0002C000 BYTES: COLLAPSED SEGMENT _rsrc. PRESS KEYPAD	CTRL-"+" TO EXPAND]
.reloc:5B914000							; ===========================================================================
.reloc:5B914000
.reloc:5B914000							; [00001000 BYTES: COLLAPSED SEGMENT _reloc. PRESS KEYPAD CTRL-"+" TO EXPAND]
